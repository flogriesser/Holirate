{"ast":null,"code":"import _classCallCheck from\"/home/flo/Projects/react/holirate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/flo/Projects/react/holirate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/flo/Projects/react/holirate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/flo/Projects/react/holirate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';//import {QuizData} from './QuizData';\nimport{QuizData}from'./Fragen';/*import '../App.css'*/import'./circle.css';//import {initialize, notFound, foundYou, calcRoute} from './Maps/maps';\nimport{LoadScript}from\"@react-google-maps/api\";import Map from\"./Maps/maps\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var lib=[\"places\"];var key=\"AIzaSyAF6K0mCOn8PxRcsTPBapCtXyr_zZ6OWGk\";// PUT GMAP API KEY HERE\nvar distance=0;var Quiz=/*#__PURE__*/function(_Component){_inherits(Quiz,_Component);var _super=_createSuper(Quiz);function Quiz(){var _this;_classCallCheck(this,Quiz);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={userAnswer:null,//current users answer\ntype:\"single\",//question Type\ncurrentIndex:0,//current questions index\noptions:[],//the options\nvalues:null,//Values of Single or Multiple choice\ntipps:null,ChoosenTipps:[],quizEnd:false,score:0,disabled:true,/*distance: 0,*/TravelMode:'DRIVING',co2:0,directions:null,bounds:null};_this.loadQuiz=function(){var currentIndex=_this.state.currentIndex;//get the current index\n_this.setState(function(){return{question:QuizData[currentIndex].question,type:QuizData[currentIndex].type,options:QuizData[currentIndex].options,values:QuizData[currentIndex].values,tipps:QuizData[currentIndex].tipps/*distance: 0,*/};});};_this.nextQuestionHander=function(){var _this$state=_this.state,userAnswer=_this$state.userAnswer,score=_this$state.score;_this.setState({score:score+userAnswer,currentIndex:_this.state.currentIndex+1});};_this.afterMap=function(){//var distanceKM = document.getElementById(\"Distance\").value;\n//console.log(distanceKM)\nconsole.log(distance);_this.setState({currentIndex:_this.state.currentIndex+1//distance: distanceKM\n});};_this.checkAnswer=function(answer,index){var _this$state2=_this.state,currentIndex=_this$state2.currentIndex,score=_this$state2.score;var nextQuestion=1;if(QuizData[currentIndex].options[index]===\"Flugzeug\"){console.log(\"1. Flugzeug\");nextQuestion=2;}else if(QuizData[currentIndex].options[index]===\"Auto\"||QuizData[currentIndex].options[index]===\"Fahrad\"||QuizData[currentIndex].options[index]===\"Zug\"){console.log(QuizData[currentIndex].options[index]);nextQuestion=1;}else{_this.setState({disabled:false,score:score+QuizData[currentIndex].values[index]});}_this.state.ChoosenTipps.push(QuizData[currentIndex].tipps[index]);if(currentIndex===QuizData.length-1){_this.setState({quizEnd:true});}else{_this.setState({currentIndex:_this.state.currentIndex+nextQuestion});}};_this.checkNumber=function(index){var currentIndex=_this.state.currentIndex;console.log(currentIndex);_this.setState({disabled:false,currentIndex:_this.state.currentIndex+1});};_this.finishHandler=function(){if(_this.state.currentIndex===QuizData.length-1){_this.setState({quizEnd:true});}};return _this;}_createClass(Quiz,[{key:\"componentDidMount\",value://Load the quiz once the component mounts\nfunction componentDidMount(){this.loadQuiz();}//Update the component\n},{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps,prevState){var currentIndex=this.state.currentIndex;if(this.state.currentIndex!==prevState.currentIndex){this.setState(function(){return{disabled:true,type:QuizData[currentIndex].type,question:QuizData[currentIndex].question,options:QuizData[currentIndex].options,values:QuizData[currentIndex].values};});}}//Check the answer\n},{key:\"render\",value:/******************************************************************** */ /*                 RENDER                                             */ /******************************************************************** */function render(){var _this2=this;var _this$state3=this.state,question=_this$state3.question,options=_this$state3.options,currentIndex=_this$state3.currentIndex,quizEnd=_this$state3.quizEnd,ChoosenTipps=_this$state3.ChoosenTipps,type=_this$state3.type;//get the current state       \nif(quizEnd){return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Dein Holirate Rating ist fertig!\"}),/*#__PURE__*/_jsx(\"div\",{className:\"circle-wrap\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"circle\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"mask full\",children:/*#__PURE__*/_jsx(\"div\",{className:\"fill\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"mask half\",children:/*#__PURE__*/_jsx(\"div\",{className:\"fill\",style:{transform:\"rotate(\".concat(360*this.state.score/100,\"deg)\")}})}),/*#__PURE__*/_jsxs(\"div\",{className:\"inside-circle\",children:[this.state.score,\"%\"]})]})}),/*#__PURE__*/_jsxs(\"h2\",{children:[\"Kilometer: \",distance]}),/*#__PURE__*/_jsxs(\"h1\",{children:[this.state.score,\" points\"]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"h4\",{children:\"Hier noch ein paar Tipps f\\xFCr deine Reise\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"ul\",{children:ChoosenTipps.map(function(tipp,index){return/*#__PURE__*/_jsx(\"li\",{className:\"options-container\",children:/*#__PURE__*/_jsxs(\"p\",{className:\"options-text\",children:[\" \",tipp]})},index);})})]});}if(type===\"single\"){return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{id:\"hud\",children:[/*#__PURE__*/_jsxs(\"div\",{id:\"hud-item\",children:[/*#__PURE__*/_jsxs(\"p\",{className:\"hud-prefix\",children:[\"Question \",currentIndex+1,\" / \",QuizData.length]}),/*#__PURE__*/_jsx(\"div\",{id:\"progressBar\",children:/*#__PURE__*/_jsx(\"div\",{id:\"progressBarFull\",style:{width:\"\".concat(currentIndex/QuizData.length*100,\"%\")}})})]}),/*#__PURE__*/_jsxs(\"div\",{id:\"hud-item\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"hud-prefix\",children:\"Score\"}),/*#__PURE__*/_jsx(\"h1\",{className:\"hud-main-text\",id:\"score\",children:this.state.score})]})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"h2\",{children:question}),/*#__PURE__*/_jsx(\"br\",{}),options.map(function(option,index){return/*#__PURE__*/ (//for each option, new paragrap\n_jsxs(\"div\",{className:\"options-container\",onClick:function onClick(){return _this2.checkAnswer(option,index);},children:[/*#__PURE__*/_jsx(\"p\",{className:\"options-prefix\",children:index+1}),/*#__PURE__*/_jsxs(\"p\",{className:\"options-text\",children:[\" \",option]})]},index));})]});}else if(type===\"number\"){return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{id:\"hud\",children:[/*#__PURE__*/_jsxs(\"div\",{id:\"hud-item\",children:[/*#__PURE__*/_jsxs(\"p\",{className:\"hud-prefix\",children:[\"Question \",currentIndex+1,\" / \",QuizData.length]}),/*#__PURE__*/_jsx(\"div\",{id:\"progressBar\",children:/*#__PURE__*/_jsx(\"div\",{id:\"progressBarFull\",style:{width:\"\".concat(currentIndex/QuizData.length*100,\"%\")}})})]}),/*#__PURE__*/_jsxs(\"div\",{id:\"hud-item\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"hud-prefix\",children:\"Score\"}),/*#__PURE__*/_jsx(\"h1\",{className:\"hud-main-text\",id:\"score\",children:this.state.score})]})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"h2\",{children:question}),options.map(function(option,index){return/*#__PURE__*/ (//for each option, new paragrap\n_jsxs(\"div\",{className:\"options-container\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"options-text\",children:option}),/*#__PURE__*/_jsx(\"input\",{className:\"OwnInput\",type:\"number\",id:index,name:\"quantity\",min:\"1\"})]},index));}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"div\",{className:\"OwnSubmit\",onClick:function onClick(){return _this2.checkNumber();},children:\"Submit\"})]});}else if(type===\"transport\"){return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{id:\"hud\",children:[/*#__PURE__*/_jsxs(\"div\",{id:\"hud-item\",children:[/*#__PURE__*/_jsxs(\"p\",{className:\"hud-prefix\",children:[\"Question \",currentIndex+1,\" / \",QuizData.length]}),/*#__PURE__*/_jsx(\"div\",{id:\"progressBar\",children:/*#__PURE__*/_jsx(\"div\",{id:\"progressBarFull\",style:{width:\"\".concat(currentIndex/QuizData.length*100,\"%\")}})})]}),/*#__PURE__*/_jsxs(\"div\",{id:\"hud-item\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"hud-prefix\",children:\"Score\"}),/*#__PURE__*/_jsx(\"h1\",{className:\"hud-main-text\",id:\"score\",children:this.state.score})]})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"h2\",{children:question}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(LoadScript,{googleMapsApiKey:key,libraries:lib,children:/*#__PURE__*/_jsx(Map,{})}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"div\",{className:\"OwnSubmit\",onClick:function onClick(){return _this2.afterMap();},children:\"Submit\"})]});}}/******************************************************************** */ /*                 RENDER                                             */ /******************************************************************** */}]);return Quiz;}(Component);Quiz.setDistance=function(distanceKM){distance=distanceKM;};export default Quiz;","map":{"version":3,"sources":["/home/flo/Projects/react/holirate/src/components/Quiz.js"],"names":["React","Component","QuizData","LoadScript","Map","lib","key","distance","Quiz","state","userAnswer","type","currentIndex","options","values","tipps","ChoosenTipps","quizEnd","score","disabled","TravelMode","co2","directions","bounds","loadQuiz","setState","question","nextQuestionHander","afterMap","console","log","checkAnswer","answer","index","nextQuestion","push","length","checkNumber","finishHandler","prevProps","prevState","transform","map","tipp","width","option","setDistance","distanceKM"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\n//import {QuizData} from './QuizData';\r\nimport { QuizData } from './Fragen';\r\n/*import '../App.css'*/\r\nimport './circle.css';\r\n//import {initialize, notFound, foundYou, calcRoute} from './Maps/maps';\r\nimport { LoadScript } from \"@react-google-maps/api\";\r\nimport Map from \"./Maps/maps\";\r\n\r\n\r\nconst lib = [\"places\"];\r\nconst key = \"AIzaSyAF6K0mCOn8PxRcsTPBapCtXyr_zZ6OWGk\"; // PUT GMAP API KEY HERE\r\nvar distance = 0;\r\n\r\n\r\nclass Quiz extends Component {\r\n\r\n    state = {\r\n        userAnswer: null,    //current users answer\r\n        type: \"single\",         //question Type\r\n        currentIndex: 0,     //current questions index\r\n        options: [],        //the options\r\n        values: null,         //Values of Single or Multiple choice\r\n        tipps: null,\r\n        ChoosenTipps: [],\r\n        quizEnd: false,\r\n        score: 0,\r\n        disabled: true,\r\n        /*distance: 0,*/\r\n        TravelMode: 'DRIVING',\r\n        co2: 0,\r\n\r\n        directions: null,\r\n        bounds: null\r\n    }\r\n\r\n\r\n    //Component that holds the current quiz\r\n    loadQuiz = () => {\r\n        const { currentIndex } = this.state //get the current index\r\n        this.setState(() => {\r\n            return {\r\n                question: QuizData[currentIndex].question,\r\n                type: QuizData[currentIndex].type,\r\n                options: QuizData[currentIndex].options,\r\n                values: QuizData[currentIndex].values,\r\n                tipps: QuizData[currentIndex].tipps,\r\n                 /*distance: 0,*/\r\n            }\r\n        }\r\n        )\r\n    }\r\n    \r\n    static setDistance = (distanceKM) => {\r\n        distance = distanceKM;\r\n    }\r\n\r\n    //Handles Click event for the next button\r\n    nextQuestionHander = () => {\r\n        const { userAnswer, score } = this.state\r\n        this.setState({\r\n            score: score + userAnswer,\r\n            currentIndex: this.state.currentIndex + 1\r\n        })\r\n    }\r\n\r\n    afterMap = () => {\r\n        //var distanceKM = document.getElementById(\"Distance\").value;\r\n        //console.log(distanceKM)\r\n        console.log(distance);\r\n        this.setState({\r\n            currentIndex: this.state.currentIndex + 1,\r\n            //distance: distanceKM\r\n        })\r\n    }\r\n\r\n    //Load the quiz once the component mounts\r\n    componentDidMount() {\r\n        this.loadQuiz();\r\n    }\r\n\r\n    //Update the component\r\n    componentDidUpdate(prevProps, prevState) {\r\n        const { currentIndex } = this.state;\r\n        if (this.state.currentIndex !== prevState.currentIndex) {\r\n            this.setState(() => {\r\n                return {\r\n                    disabled: true,\r\n                    type: QuizData[currentIndex].type,\r\n                    question: QuizData[currentIndex].question,\r\n                    options: QuizData[currentIndex].options,\r\n                    values: QuizData[currentIndex].values\r\n\r\n                }\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n    //Check the answer\r\n    checkAnswer = (answer, index) => {\r\n        const { currentIndex, score } = this.state;\r\n        var nextQuestion = 1;\r\n        if (QuizData[currentIndex].options[index] === \"Flugzeug\") {\r\n            console.log(\"1. Flugzeug\");\r\n            nextQuestion = 2;\r\n        } else if (QuizData[currentIndex].options[index] === \"Auto\" ||\r\n            QuizData[currentIndex].options[index] === \"Fahrad\" ||\r\n            QuizData[currentIndex].options[index] === \"Zug\") {\r\n            console.log(QuizData[currentIndex].options[index]);\r\n            nextQuestion = 1;\r\n        } else {\r\n            this.setState({\r\n                disabled: false,\r\n                score: score + QuizData[currentIndex].values[index]\r\n            })\r\n        }\r\n        this.state.ChoosenTipps.push(QuizData[currentIndex].tipps[index]);\r\n\r\n        if (currentIndex === QuizData.length - 1) {\r\n            this.setState({\r\n                quizEnd: true\r\n            })\r\n        } else {\r\n            this.setState({\r\n                currentIndex: this.state.currentIndex + nextQuestion\r\n            })\r\n        }\r\n    }\r\n\r\n    checkNumber = (index) => {\r\n        const { currentIndex } = this.state;\r\n        console.log(currentIndex);\r\n\r\n        this.setState({\r\n            disabled: false,\r\n            currentIndex: this.state.currentIndex + 1\r\n        })\r\n    }\r\n\r\n    //Responds to the click of the finish button\r\n    finishHandler = () => {\r\n        if (this.state.currentIndex === QuizData.length - 1) {\r\n            this.setState({\r\n                quizEnd: true\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n\r\n/******************************************************************** */\r\n/*                 RENDER                                             */\r\n/******************************************************************** */\r\n\r\n    render() {\r\n        const { question, options, currentIndex, quizEnd, ChoosenTipps, type } = this.state //get the current state       \r\n        if (quizEnd) {\r\n\r\n            return (\r\n                <div>\r\n                    <h1>Dein Holirate Rating ist fertig!</h1>\r\n                    <div className=\"circle-wrap\">\r\n                        <div className=\"circle\">\r\n\r\n                            <div className=\"mask full\">\r\n                                <div className=\"fill\" ></div>\r\n                            </div>\r\n\r\n                            <div className=\"mask half\">\r\n                                <div className=\"fill\" style={{ transform: `rotate(${360 * this.state.score / 100}deg)` }}></div>\r\n                            </div>\r\n\r\n                            <div className=\"inside-circle\">\r\n                                {this.state.score}%\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <h2>Kilometer: {distance}</h2>\r\n                    <h1>{this.state.score} points</h1>\r\n                    <br></br>\r\n                    <h4>Hier noch ein paar Tipps für deine Reise</h4>\r\n                    <br></br>\r\n                    <ul>\r\n\r\n                        {ChoosenTipps.map((tipp, index) => (\r\n                            <li className='options-container'\r\n                                key={index}>\r\n                                <p className=\"options-text\"> {tipp}</p>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n            )\r\n        }\r\n        if (type === \"single\") {\r\n            return (\r\n                <div>\r\n                    <div id=\"hud\">\r\n                        <div id=\"hud-item\">\r\n                            <p className=\"hud-prefix\">\r\n                                Question {currentIndex + 1} / {QuizData.length}\r\n                            </p>\r\n                            <div id=\"progressBar\">\r\n                                <div id=\"progressBarFull\" style={{ width: `${(currentIndex / QuizData.length) * 100}%` }}></div>\r\n                            </div>\r\n                        </div>\r\n                        <div id=\"hud-item\">\r\n                            <p className=\"hud-prefix\">\r\n                                Score\r\n            </p>\r\n                            <h1 className=\"hud-main-text\" id=\"score\">\r\n                                {this.state.score}\r\n                            </h1>\r\n                        </div>\r\n                    </div>\r\n                    <br></br>\r\n                    <h2>{question}</h2>\r\n                    <br></br>\r\n                    {\r\n                        options.map((option, index) => (  //for each option, new paragrap\r\n                            <div key={index}\r\n                                className={`options-container`}\r\n                                onClick={() => this.checkAnswer(option, index)}>\r\n                                <p className=\"options-prefix\">{index + 1}</p>\r\n                                <p className=\"options-text\"> {option}</p>\r\n                            </div>\r\n                        ))\r\n                    }\r\n                </div >\r\n            )\r\n        } else if (type === \"number\") {\r\n            return (\r\n                <div>\r\n                    <div id=\"hud\">\r\n                        <div id=\"hud-item\">\r\n                            <p className=\"hud-prefix\">\r\n                                Question {currentIndex + 1} / {QuizData.length}\r\n                            </p>\r\n                            <div id=\"progressBar\">\r\n                                <div id=\"progressBarFull\" style={{ width: `${(currentIndex / QuizData.length) * 100}%` }}></div>\r\n                            </div>\r\n                        </div>\r\n                        <div id=\"hud-item\">\r\n                            <p className=\"hud-prefix\">\r\n                                Score\r\n        </p>\r\n                            <h1 className=\"hud-main-text\" id=\"score\">\r\n                                {this.state.score}\r\n                            </h1>\r\n                        </div>\r\n                    </div>\r\n                    <br></br>\r\n                    <h2>{question}</h2>\r\n                    {\r\n                        options.map((option, index) => (  //for each option, new paragrap\r\n                            <div key={index} className={`options-container`}>\r\n                                <p className=\"options-text\">{option}</p>\r\n                                <input className=\"OwnInput\" type=\"number\" id={index} name=\"quantity\" min=\"1\" ></input>\r\n                            </div>\r\n                        ))\r\n                    }\r\n                    <br></br>\r\n                    <div className=\"OwnSubmit\"\r\n                        onClick={() => this.checkNumber()}>\r\n                        Submit</div>\r\n                </div >)\r\n        } else if (type === \"transport\") {\r\n            return (\r\n                <div>\r\n                    <div id=\"hud\">\r\n                        <div id=\"hud-item\">\r\n                            <p className=\"hud-prefix\">\r\n                                Question {currentIndex + 1} / {QuizData.length}\r\n                            </p>\r\n                            <div id=\"progressBar\">\r\n                                <div id=\"progressBarFull\" style={{ width: `${(currentIndex / QuizData.length) * 100}%` }}></div>\r\n                            </div>\r\n                        </div>\r\n                        <div id=\"hud-item\">\r\n                            <p className=\"hud-prefix\">\r\n                                Score\r\n    </p>\r\n                            <h1 className=\"hud-main-text\" id=\"score\">\r\n                                {this.state.score}\r\n                            </h1>\r\n                        </div>\r\n                    </div>\r\n                    <br></br>\r\n                    <h2>{question}</h2>\r\n                    <br></br>\r\n                    <LoadScript googleMapsApiKey={key} libraries={lib}>\r\n        <Map />\r\n      </LoadScript>\r\n      <br></br>\r\n      <div className=\"OwnSubmit\"\r\n                            onClick={() => this.afterMap()}>\r\n                        Submit</div>\r\n                </div > )\r\n        }\r\n    }\r\n\r\n/******************************************************************** */\r\n/*                 RENDER                                             */\r\n/******************************************************************** */\r\n}\r\n\r\n\r\nexport default Quiz;"]},"metadata":{},"sourceType":"module"}