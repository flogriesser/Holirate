{"ast":null,"code":"var _jsxFileName = \"/home/flo/Projects/react/Holirate/src/components/SingleQuestion/singleQuestion.js\";\n\n/*\n * @Author: Florian Griesser \n * @Date: 2021-05-29 17:23:53 \n * @Last Modified by: Florian Griesser\n * @Last Modified time: 2021-05-29 17:35:49\n */\nimport React from \"react\";\nimport Radio from '@material-ui/core/Radio';\nimport Button from '@material-ui/core/Button';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport '@fontsource/roboto';\nimport { ScoreHeader } from \"../stylesUI\";\nimport { QuizData } from '../Data/Fragen';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar value = null;\n\nclass Singlequestion extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.radioHandler = event => {\n      console.log(event.target.value);\n      value = parseInt(event.target.value);\n      console.log(value);\n    };\n\n    this.handleSubmit = () => {\n      if (value != null) {\n        const {\n          currentIndex\n        } = this.props.state;\n        var Travelmode = null;\n        var points = 0;\n        var index = value;\n        console.log(index);\n\n        if (QuizData[currentIndex].options[index] === \"Flugzeug\") {\n          Travelmode = \"Fligth\";\n        } else if (QuizData[currentIndex].options[index] === \"Auto\") {\n          Travelmode = \"Car\";\n        } else if (QuizData[currentIndex].options[index] === \"Zug\") {\n          Travelmode = \"Train\";\n        } else {\n          points = QuizData[currentIndex].values[index];\n        }\n\n        this.props.callbackSingleQuestion(index, points, Travelmode);\n      }\n    };\n  }\n\n  /*checkAnswer*/\n  render() {\n    const {\n      question,\n      options,\n      currentIndex,\n      score\n    } = this.props.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(ScoreHeader, {\n        score: score,\n        currentIndex: currentIndex\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        component: \"fieldset\",\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          component: \"legend\",\n          children: question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n          \"aria-label\": \"quiz\",\n          name: \"quiz\",\n          value: value,\n          onChange: this.radioHandler,\n          children: options.map((option, index) =>\n          /*#__PURE__*/\n          //for each option, new paragrap\n          _jsxDEV(FormControlLabel, {\n            value: index + 1,\n            control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 46\n            }, this),\n            label: option\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"outlined\",\n          color: \"primary\",\n          onClick: this.handleSubmit,\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Singlequestion;","map":{"version":3,"sources":["/home/flo/Projects/react/Holirate/src/components/SingleQuestion/singleQuestion.js"],"names":["React","Radio","Button","RadioGroup","FormControlLabel","FormControl","FormLabel","ScoreHeader","QuizData","value","Singlequestion","Component","radioHandler","event","console","log","target","parseInt","handleSubmit","currentIndex","props","state","Travelmode","points","index","options","values","callbackSingleQuestion","render","question","score","map","option"],"mappings":"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","sourcesContent":["/*\n * @Author: Florian Griesser \n * @Date: 2021-05-29 17:23:53 \n * @Last Modified by: Florian Griesser\n * @Last Modified time: 2021-05-29 17:35:49\n */\n\nimport React from \"react\";\nimport Radio from '@material-ui/core/Radio';\nimport Button from '@material-ui/core/Button';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel'\nimport '@fontsource/roboto';\nimport { ScoreHeader } from \"../stylesUI\";\n\nimport { QuizData } from '../Data/Fragen';\n\n\nvar value = null;\n\nclass Singlequestion extends React.Component {\n\n    radioHandler = (event) => {\n        console.log(event.target.value);\n        value = parseInt(event.target.value);\n        console.log(value);\n    }\n\n\n    //Check the answer\n    handleSubmit = () => {\n        if (value != null) {\n            const { currentIndex } = this.props.state;\n            var Travelmode = null;\n            var points = 0;\n            var index = value;\n            console.log(index);\n\n\n            if (QuizData[currentIndex].options[index] === \"Flugzeug\") {\n                Travelmode = \"Fligth\";\n            } else if (QuizData[currentIndex].options[index] === \"Auto\") {\n                Travelmode = \"Car\";\n            } else if (QuizData[currentIndex].options[index] === \"Zug\") {\n                Travelmode = \"Train\";\n            } else {\n                points = QuizData[currentIndex].values[index];\n            }\n\n\n            this.props.callbackSingleQuestion(index, points, Travelmode);\n        }\n    }/*checkAnswer*/\n\n\n\n    render() {\n        const { question, options, currentIndex, score } = this.props.state;\n\n        return (\n            <div>\n                <ScoreHeader score={score} currentIndex={currentIndex} />\n\n                <FormControl component=\"fieldset\">\n                    <FormLabel component=\"legend\">{question}</FormLabel>\n                    <br></br>\n                    <RadioGroup aria-label=\"quiz\" name=\"quiz\" value={value} onChange={this.radioHandler}>\n                        {\n                            options.map((option, index) => (  //for each option, new paragrap\n                                <FormControlLabel value={index + 1}\n                                    control={<Radio />}\n                                    label={option} />\n                            ))\n                        }\n                    </RadioGroup>\n                    <Button type=\"submit\" variant=\"outlined\" color=\"primary\" onClick={this.handleSubmit}>\n                        Next\n                    </Button>\n                </FormControl>\n            </div >\n        )\n    }\n}\n\nexport default Singlequestion;"]},"metadata":{},"sourceType":"module"}