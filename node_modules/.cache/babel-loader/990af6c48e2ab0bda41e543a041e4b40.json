{"ast":null,"code":"import _classCallCheck from\"/home/flo/Projects/react/Holirate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/flo/Projects/react/Holirate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/flo/Projects/react/Holirate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/flo/Projects/react/Holirate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";/*\n * @Author: Florian Griesser \n * @Date: 2021-05-29 10:29:35 \n * @Last Modified by: Florian Griesser\n * @Last Modified time: 2021-06-12 08:35:57\n */import{Component}from\"react\";import{carValues}from\"../Data/Data\";import Grid from'@material-ui/core/Grid';import Typography from'@material-ui/core/Typography';import{ScoreBoard,DataCard,TippsCard}from\"../stylesUI\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var QuizEnds=/*#__PURE__*/function(_Component){_inherits(QuizEnds,_Component);var _super=_createSuper(QuizEnds);function QuizEnds(){var _this;_classCallCheck(this,QuizEnds);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.calculateCar=function(distance,carPower,carType){//const {distance, carType, carPower} = this.props.state;\nvar Factor=carValues[carPower][carType];return(Factor*distance).toFixed(0);};_this.calculateTrain=function(){var distance=_this.props.state.distance;return(0.032*distance).toFixed(0);};_this.calculateFlight=function(distance){return(0.369*distance).toFixed(0);};_this.calcScore=function(co2){var score=0;score=75-co2*75/2500;if(co2>2500){score=0;}return score;};_this.compareCo2=function(TravelMode,co2){};return _this;}_createClass(QuizEnds,[{key:\"render\",value:function render(){var _this$props$state=this.props.state,score=_this$props$state.score,distance=_this$props$state.distance,ChoosenTipps=_this$props$state.ChoosenTipps,ChoosenHeadlines=_this$props$state.ChoosenHeadlines,TravelMode=_this$props$state.TravelMode,carPower=_this$props$state.carPower,carType=_this$props$state.carType;var co2=0;var EndScore=score;if(TravelMode==='Car'){co2=this.calculateCar(distance,carPower,carType);}else if(TravelMode==='Train'){co2=this.calculateTrain(distance);}else if(TravelMode==='Fligth'){co2=this.calculateFlight(distance);}console.log(ChoosenHeadlines);console.log(ChoosenHeadlines[0]);EndScore=(EndScore+this.calcScore(co2)).toFixed(0);return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(Grid,{container:true,maxwidth:\"false\",align:\"center\",justifyContent:\"center\",alignItems:\"center\",spacing:10,children:[/*#__PURE__*/_jsx(Grid,{item:true,spacing:10,children:/*#__PURE__*/_jsx(Typography,{xs:5,sm:4,md:12,lg:12,component:\"h4\",variant:\"h4\",maxwidth:\"80%\",children:\"Dein Holirate Rating ist fertig!\"})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:12,md:12,lg:12,spacing:10,children:/*#__PURE__*/_jsx(ScoreBoard,{EndScore:EndScore})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:6,sm:4,md:4,lg:4,spacing:10,children:/*#__PURE__*/_jsx(DataCard,{Value:distance,Type:\"Kilometer\"})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:6,sm:4,md:4,lg:4,spacing:10,children:/*#__PURE__*/_jsx(DataCard,{Value:co2+\" kg\",Type:\"CO\\xB2\"})}),/*#__PURE__*/_jsx(\"div\",{style:{padding:\"5% 10%\"},children:/*#__PURE__*/_jsx(Typography,{component:\"h4\",variant:\"h4\",maxwidth:\"80%\",children:\"Hier noch ein paar Tipps f\\xFCr deine Reise:\"})}),/*#__PURE__*/_jsx(Grid,{container:true,spacing:20,children:ChoosenTipps.map(function(tipp,index){return/*#__PURE__*/ (//for each option, new paragrap\n_jsxs(Grid,{item:true,xs:12,children:[/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(TippsCard,{Value:ChoosenHeadlines[index],Type:tipp}),/*#__PURE__*/_jsx(\"br\",{})]}));})})]})});}}]);return QuizEnds;}(Component);export default QuizEnds;","map":{"version":3,"sources":["/home/flo/Projects/react/Holirate/src/components/Score/quizEnd.js"],"names":["Component","carValues","Grid","Typography","ScoreBoard","DataCard","TippsCard","QuizEnds","calculateCar","distance","carPower","carType","Factor","toFixed","calculateTrain","props","state","calculateFlight","calcScore","co2","score","compareCo2","TravelMode","ChoosenTipps","ChoosenHeadlines","EndScore","console","log","padding","map","tipp","index"],"mappings":"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","sourcesContent":["/*\n * @Author: Florian Griesser \n * @Date: 2021-05-29 10:29:35 \n * @Last Modified by: Florian Griesser\n * @Last Modified time: 2021-06-12 08:35:57\n */\n\nimport { Component } from \"react\";\nimport { carValues } from \"../Data/Data\";\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\n\n\nimport { ScoreBoard, DataCard, TippsCard } from \"../stylesUI\";\n\n\nclass QuizEnds extends Component {\n    calculateCar = (distance, carPower, carType) => {\n        //const {distance, carType, carPower} = this.props.state;\n        var Factor = carValues[carPower][carType];\n        return (Factor * distance).toFixed(0);\n    }\n\n    calculateTrain = () => {\n        const { distance } = this.props.state;\n        return (0.032 * distance).toFixed(0);\n    }\n    calculateFlight = (distance) => {\n        return (0.369 * distance).toFixed(0);\n    }\n\n    calcScore = (co2) => {\n        var score = 0;\n        score = 75 - co2 * 75 / 2500;\n\n        if (co2 > 2500) {\n            score = 0;\n        }\n        return score;\n    }\n    compareCo2 = (TravelMode, co2) => {\n    }\n\n    render() {\n        const { score, distance, ChoosenTipps, ChoosenHeadlines, TravelMode, carPower, carType } = this.props.state;\n        var co2 = 0;\n        var EndScore = score;\n        if (TravelMode === 'Car') {\n            co2 = this.calculateCar(distance, carPower, carType);\n        }\n        else if (TravelMode === 'Train') {\n            co2 = this.calculateTrain(distance);\n        }\n        else if (TravelMode === 'Fligth') {\n            co2 = this.calculateFlight(distance);\n        }\n        console.log(ChoosenHeadlines);\n        console.log(ChoosenHeadlines[0]);\n        EndScore = (EndScore + this.calcScore(co2)).toFixed(0);\n\n        return (\n            <div>\n                <Grid container maxwidth=\"false\" align=\"center\" justifyContent=\"center\" alignItems=\"center\" spacing={10}>\n                    <Grid item spacing={10}>\n                        <Typography xs={5} sm={4} md={12} lg={12} component=\"h4\" variant=\"h4\" maxwidth=\"80%\">\n                            Dein Holirate Rating ist fertig!\n                        </Typography>\n                    </Grid>\n\n                    <Grid item xs={12} sm={12} md={12} lg={12} spacing={10}>\n                        <ScoreBoard EndScore={EndScore}></ScoreBoard>\n                    </Grid>\n                    <Grid item xs={6} sm={4} md={4} lg={4} spacing={10}>\n                        <DataCard Value={distance} Type=\"Kilometer\"></DataCard>\n                    </Grid>\n                    <Grid item xs={6} sm={4} md={4} lg={4} spacing={10}>\n                        <DataCard Value={co2 + \" kg\"} Type=\"CO²\"></DataCard>\n                    </Grid>\n\n                    <div style={{ padding: \"5% 10%\" }}>\n                        <Typography  component=\"h4\" variant=\"h4\" maxwidth=\"80%\">\n                            Hier noch ein paar Tipps für deine Reise:\n                        </Typography>\n                    </div>\n\n                    <Grid container spacing={20}>\n                        {\n                            ChoosenTipps.map((tipp, index) => (  //for each option, new paragrap\n                                <Grid item xs={12}>\n                                    <br></br>\n                                    <TippsCard Value={ChoosenHeadlines[index]} Type={tipp} />\n                                    <br></br>\n                                </Grid>\n                            ))\n                        }\n                    </Grid>\n\n                </Grid>\n            </div>\n        )\n    };\n}\n\nexport default QuizEnds;"]},"metadata":{},"sourceType":"module"}