{"ast":null,"code":"var _jsxFileName = \"/home/flo/Projects/react/Holirate/src/components/SingleQuestion/singleQuestion.js\",\n    _s = $RefreshSig$();\n\n/*\n * @Author: Florian Griesser \n * @Date: 2021-05-29 17:23:53 \n * @Last Modified by: Florian Griesser\n * @Last Modified time: 2021-05-29 17:35:49\n */\nimport React from \"react\";\nimport Radio from '@material-ui/core/Radio';\nimport Button from '@material-ui/core/Button';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport '@fontsource/roboto';\nimport { BorderLinearProgress, ScoreHeader, theme } from \"../stylesUI\";\nimport { QuizData } from '../Data/Fragen';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Singlequestion() {\n  _s();\n\n  const [value, setValue] = React.useState('');\n  const [error, setError] = React.useState(false);\n  const [helperText, setHelperText] = React.useState('Choose wisely');\n\n  const handleRadioChange = event => {\n    setValue(event.target.value);\n    setHelperText(' ');\n    setError(false);\n  };\n\n  handleChange = event => {\n    setValue(event.target.value);\n  }; //Check the answer\n\n\n  handleSubmit = () => {\n    const {\n      currentIndex\n    } = this.props.state;\n    var Travelmode = null;\n    var points = 0;\n    console.log(index);\n    var index = value;\n\n    if (QuizData[currentIndex].options[index] === \"Flugzeug\") {\n      Travelmode = \"Fligth\";\n    } else if (QuizData[currentIndex].options[index] === \"Auto\") {\n      Travelmode = \"Car\";\n    } else if (QuizData[currentIndex].options[index] === \"Zug\") {\n      Travelmode = \"Train\";\n    } else {\n      points = QuizData[currentIndex].values[index];\n    }\n\n    this.props.callbackSingleQuestion(index, points, Travelmode);\n  };\n  /*checkAnswer*/\n\n\n  const {\n    question,\n    options,\n    currentIndex,\n    score\n  } = this.props.state;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ScoreHeader, {\n      score: score,\n      currentIndex: currentIndex\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n        component: \"legend\",\n        children: question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n        \"aria-label\": \"quiz\",\n        name: \"quiz\",\n        value: value,\n        onChange: handleRadioChange,\n        children: options.map((option, index) =>\n        /*#__PURE__*/\n        //for each option, new paragrap\n        _jsxDEV(FormControlLabel, {\n          value: index + 1,\n          control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 42\n          }, this),\n          label: option\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n        children: helperText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"outlined\",\n        color: \"primary\",\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Singlequestion, \"KMo3LogVNB2IFqk7plFYk/8WzdQ=\");\n\n_c = Singlequestion;\n\nvar _c;\n\n$RefreshReg$(_c, \"Singlequestion\");","map":{"version":3,"sources":["/home/flo/Projects/react/Holirate/src/components/SingleQuestion/singleQuestion.js"],"names":["React","Radio","Button","RadioGroup","FormControlLabel","FormControl","FormLabel","BorderLinearProgress","ScoreHeader","theme","QuizData","Singlequestion","value","setValue","useState","error","setError","helperText","setHelperText","handleRadioChange","event","target","handleChange","handleSubmit","currentIndex","props","state","Travelmode","points","console","log","index","options","values","callbackSingleQuestion","question","score","map","option"],"mappings":"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","sourcesContent":["/*\n * @Author: Florian Griesser \n * @Date: 2021-05-29 17:23:53 \n * @Last Modified by: Florian Griesser\n * @Last Modified time: 2021-05-29 17:35:49\n */\n\nimport React from \"react\";\nimport Radio from '@material-ui/core/Radio';\nimport Button from '@material-ui/core/Button';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel'\nimport '@fontsource/roboto';\nimport { BorderLinearProgress, ScoreHeader, theme } from \"../stylesUI\";\n\nimport { QuizData } from '../Data/Fragen';\n\n\n\n\n\nexport default function Singlequestion() {\n\n\n    const [value, setValue] = React.useState('');\n    const [error, setError] = React.useState(false);\n    const [helperText, setHelperText] = React.useState('Choose wisely');\n  \n    const handleRadioChange = (event) => {\n      setValue(event.target.value);\n      setHelperText(' ');\n      setError(false);\n    };\n\n\n    handleChange = (event) => {\n        setValue(event.target.value);\n    };\n\n    //Check the answer\n    handleSubmit = () => {\n\n        const { currentIndex } = this.props.state;\n        var Travelmode = null;\n        var points = 0;\n        console.log(index);\n        var index = value;\n\n        if (QuizData[currentIndex].options[index] === \"Flugzeug\") {\n            Travelmode = \"Fligth\";\n        } else if (QuizData[currentIndex].options[index] === \"Auto\") {\n            Travelmode = \"Car\";\n        } else if (QuizData[currentIndex].options[index] === \"Zug\") {\n            Travelmode = \"Train\";\n        } else {\n            points = QuizData[currentIndex].values[index];\n        }\n\n\n        this.props.callbackSingleQuestion(index, points, Travelmode);\n    }/*checkAnswer*/\n\n\n\n    const { question, options, currentIndex, score } = this.props.state;\n\n    return (\n        <div>\n            <ScoreHeader score={score} currentIndex={currentIndex} />\n\n            <form onSubmit={this.handleSubmit}>\n                <FormLabel component=\"legend\">{question}</FormLabel>\n                <br></br>\n                <RadioGroup aria-label=\"quiz\" name=\"quiz\" value={value} onChange={handleRadioChange}>\n                    {\n                        options.map((option, index) => (  //for each option, new paragrap\n                            <FormControlLabel value={index + 1}\n                                control={<Radio />}\n                                label={option} />\n                        ))\n                    }\n                </RadioGroup>\n                <FormHelperText>{helperText}</FormHelperText>\n                <Button type=\"submit\" variant=\"outlined\" color=\"primary\">\n                    Next\n                </Button>\n            </form>\n        </div >\n    )\n}\n"]},"metadata":{},"sourceType":"module"}