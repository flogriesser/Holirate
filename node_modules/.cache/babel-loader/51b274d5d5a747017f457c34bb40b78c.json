{"ast":null,"code":"import React from'react';import{withStyles,createTheme,makeStyles}from\"@material-ui/core/styles\";//import { makeStyles } from \"@material-ui/styles\";\nimport LinearProgress from\"@material-ui/core/LinearProgress\";import Grid from\"@material-ui/core/Grid\";import Card from\"@material-ui/core/Card\";import CardContent from\"@material-ui/core/CardContent\";import Typography from'@material-ui/core/Typography';import{CircularProgressbar,buildStyles}from\"react-circular-progressbar\";import\"react-circular-progressbar/dist/styles.css\";// Animation\nimport{easeQuadInOut}from\"d3-ease\";import AnimatedProgressProvider from\"./Style/AnimatedProgressProvider\";import{QuizData}from'./Data/Fragen';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var theme=createTheme({root:{flexGrow:1},palette:{primary:{main:'#66bb6a',contrastText:'#fff'},secondary:{main:\"#F1B929\"}// This is just green.A700 as hex.\n},overrides:{MuiButton:{root:{backgroundColor:'primary',text:{borderRadius:3,border:0,color:'white'}}}}});export var BorderLinearProgress=withStyles(function(theme){return{root:{height:20,width:'80%',borderRadius:10,justifyContent:'center'},colorPrimary:{backgroundColor:theme.palette.grey[theme.palette.type===\"light\"?200:700]},bar:{borderRadius:5,backgroundColor:\"primary\"}};})(LinearProgress);export function ScoreHeader(props){return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(Grid,{container:true,maxwidth:\"false\",align:\"center\",justifyContent:\"center\",alignItems:\"center\",children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:6,sm:4,md:3,lg:2,xl:1,children:/*#__PURE__*/_jsx(BorderLinearProgress,{variant:\"determinate\",value:props.currentIndex/QuizData.length*100})}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:6,sm:4,md:3,lg:2,xl:1,children:[/*#__PURE__*/_jsx(Typography,{variant:\"h5\",color:\"primary\",gutterBottom:true,children:\"Score\"}),/*#__PURE__*/_jsx(Typography,{variant:\"h3\",color:\"primary\",gutterBottom:true,children:props.score})]})]}),/*#__PURE__*/_jsx(\"br\",{})]});}export function ScoreBoard(props){return/*#__PURE__*/_jsx(\"div\",{style:{padding:'5% 20%'},children:/*#__PURE__*/_jsx(AnimatedProgressProvider,{valueStart:0,valueEnd:props.EndScore,duration:2,easingFunction:easeQuadInOut,children:function children(value){var roundedValue=Math.round(value);if(value<33){return/*#__PURE__*/_jsx(CircularProgressbar,{value:value,text:\"\".concat(roundedValue,\"%\"),circleRatio:0.75,styles:buildStyles({pathTransition:\"none\",rotation:1/2+1/8,strokeLinecap:\"butt\",trailColor:\"#eee\",textColor:\"#f44336\",pathColor:\"#f44336\"})});}else if(value>=33&&value<66){return/*#__PURE__*/_jsx(CircularProgressbar,{value:value,text:\"\".concat(roundedValue,\"%\"),circleRatio:0.75,styles:buildStyles({pathTransition:\"none\",rotation:1/2+1/8,strokeLinecap:\"butt\",trailColor:\"#eee\",textColor:\"#ff9800\",pathColor:\"#ff9800\"})});}else{return/*#__PURE__*/_jsx(CircularProgressbar,{value:value,text:\"\".concat(roundedValue,\"%\"),circleRatio:0.75,styles:buildStyles({pathTransition:\"none\",rotation:1/2+1/8,strokeLinecap:\"butt\",trailColor:\"#eee\",textColor:\"#66bb6a\",pathColor:\"#66bb6a\"})});}}})});}var cardStyles=makeStyles({root:{maxWidth:\"80%\",Height:\"80%\",paddingBottom:\"5%\",paddingTop:\"5%\",flexGrow:1},paper:{textAlign:'left',color:\"primary\"}});export function DataCard(props){var classes=cardStyles();return/*#__PURE__*/_jsx(Card,{className:classes.root,varian:\"outlined\",children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(Typography,{component:\"h5\",variant:\"h5\",children:props.Value}),/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",color:\"textSecondary\",children:props.Type})]})});}var TippsStyles=makeStyles({root:{maxWidth:\"80%\",paddingBottom:\"5%\",paddingTop:\"5%\",flexGrow:1},paper:{padding:200,textAlign:'left',color:\"primary\"}});export function TippsCard(props){var classes=TippsStyles();return/*#__PURE__*/_jsx(Card,{className:classes.root,children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(Typography,{component:\"h5\",variant:\"h5\",children:props.Value}),/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",color:\"textSecondary\",children:props.Type})]})});}/*\nconst classes = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: \"center\",\n        color: \"blue\"\n    }\n}));\n*/","map":{"version":3,"sources":["/home/flo/Projects/react/Holirate/src/components/stylesUI.js"],"names":["React","withStyles","createTheme","makeStyles","LinearProgress","Grid","Card","CardContent","Typography","CircularProgressbar","buildStyles","easeQuadInOut","AnimatedProgressProvider","QuizData","theme","root","flexGrow","palette","primary","main","contrastText","secondary","overrides","MuiButton","backgroundColor","text","borderRadius","border","color","BorderLinearProgress","height","width","justifyContent","colorPrimary","grey","type","bar","ScoreHeader","props","currentIndex","length","score","ScoreBoard","padding","EndScore","value","roundedValue","Math","round","pathTransition","rotation","strokeLinecap","trailColor","textColor","pathColor","cardStyles","maxWidth","Height","paddingBottom","paddingTop","paper","textAlign","DataCard","classes","Value","Type","TippsStyles","TippsCard"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { withStyles, createTheme, makeStyles } from \"@material-ui/core/styles\";\n//import { makeStyles } from \"@material-ui/styles\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from '@material-ui/core/Typography';\n\nimport {\n    CircularProgressbar,\n    buildStyles\n} from \"react-circular-progressbar\";\nimport \"react-circular-progressbar/dist/styles.css\";\n\n// Animation\nimport { easeQuadInOut } from \"d3-ease\";\nimport AnimatedProgressProvider from \"./Style/AnimatedProgressProvider\";\n\n\nimport { QuizData } from './Data/Fragen';\n\n\n\nexport const theme = createTheme({\n    root: {\n        flexGrow: 1,\n    },\n    palette: {\n        primary: {\n            main: '#66bb6a',\n            contrastText: '#fff',\n        },\n        secondary: { main: \"#F1B929\" }, // This is just green.A700 as hex.\n    },\n    overrides: {\n        MuiButton: {\n            root: {\n                backgroundColor: 'primary',\n                text: {\n                    borderRadius: 3,\n                    border: 0,\n                    color: 'white',\n                },\n            }\n        },\n    }\n});\n\nexport const BorderLinearProgress = withStyles((theme) => ({\n    root: {\n        height: 20,\n        width: '80%',\n        borderRadius: 10,\n        justifyContent: 'center'\n    },\n    colorPrimary: {\n        backgroundColor:\n            theme.palette.grey[theme.palette.type === \"light\" ? 200 : 700]\n    },\n    bar: {\n        borderRadius: 5,\n        backgroundColor: \"primary\"\n    }\n}))(LinearProgress);\n\nexport function ScoreHeader(props) {\n    return (\n        <div>\n            <br></br>\n            <Grid container maxwidth=\"false\" align=\"center\" justifyContent=\"center\" alignItems=\"center\" >\n                <Grid item xs={6} sm={4} md={3} lg={2} xl={1} >\n                    <BorderLinearProgress variant=\"determinate\" value={(props.currentIndex / QuizData.length) * 100} />\n                </Grid>\n                <Grid item xs={6} sm={4} md={3} lg={2} xl={1}>\n                    <Typography variant=\"h5\" color=\"primary\" gutterBottom>\n                        Score\n                    </Typography>\n                    <Typography variant=\"h3\" color=\"primary\" gutterBottom>\n                        {props.score}\n                    </Typography>\n                </Grid>\n            </Grid>\n            <br></br>\n        </div>\n\n    );\n}\n\nexport function ScoreBoard(props) {\n    return (\n        <div style={{ padding: '5% 20%' }}>\n            <AnimatedProgressProvider\n                valueStart={0}\n                valueEnd={props.EndScore}\n                duration={2}\n                easingFunction={easeQuadInOut}\n            >\n                {(value) => {\n                    const roundedValue = Math.round(value);\n                    if (value < 33) {\n                        return (\n                            <CircularProgressbar\n                                value={value}\n                                text={`${roundedValue}%`}\n                                circleRatio={0.75}\n                                styles={buildStyles({\n                                    pathTransition: \"none\",\n                                    rotation: 1 / 2 + 1 / 8,\n                                    strokeLinecap: \"butt\",\n                                    trailColor: \"#eee\",\n                                    textColor: \"#f44336\",\n                                    pathColor: \"#f44336\"\n                                })}\n                            />\n                        );\n                    } else if (value >= 33 && value < 66) {\n                        return (\n                            <CircularProgressbar\n                                value={value}\n                                text={`${roundedValue}%`}\n                                circleRatio={0.75}\n                                styles={buildStyles({\n                                    pathTransition: \"none\",\n                                    rotation: 1 / 2 + 1 / 8,\n                                    strokeLinecap: \"butt\",\n                                    trailColor: \"#eee\",\n                                    textColor: \"#ff9800\",\n                                    pathColor: \"#ff9800\"\n                                })}\n                            />\n                        );\n                    } else {\n                        return (\n                            <CircularProgressbar\n                                value={value}\n                                text={`${roundedValue}%`}\n                                circleRatio={0.75}\n                                styles={buildStyles({\n                                    pathTransition: \"none\",\n                                    rotation: 1 / 2 + 1 / 8,\n                                    strokeLinecap: \"butt\",\n                                    trailColor: \"#eee\",\n                                    textColor: \"#66bb6a\",\n                                    pathColor: \"#66bb6a\"\n                                })}\n                            />\n                        );\n                    }\n                }}\n            </AnimatedProgressProvider>\n        </div>\n    );\n}\nconst cardStyles = makeStyles({\n    root: {\n        maxWidth: \"80%\",\n        Height: \"80%\",\n        paddingBottom: \"5%\",\n        paddingTop: \"5%\",\n        flexGrow: 1,\n    },\n    paper: {\n        textAlign: 'left',\n        color: \"primary\",\n    },\n});\n\n\nexport function DataCard(props) {\n    const classes = cardStyles();\n    return (\n        <Card className={classes.root} varian=\"outlined\" >\n            <CardContent >\n                <Typography component=\"h5\" variant=\"h5\">\n                    {props.Value}\n                </Typography>\n                <Typography variant=\"subtitle1\" color=\"textSecondary\">\n                    {props.Type}\n                </Typography>\n            </CardContent>\n        </Card>\n    );\n}\n\nconst TippsStyles = makeStyles({\n    root: {\n        maxWidth: \"80%\",\n        paddingBottom: \"5%\",\n        paddingTop: \"5%\",\n        flexGrow: 1,\n    },\n    paper: {\n        padding: 200,\n        textAlign: 'left',\n        color: \"primary\",\n    },\n});\n\nexport function TippsCard(props) {\n    const classes = TippsStyles();\n    return (\n        <Card className={classes.root} >\n            <CardContent >\n                <Typography component=\"h5\" variant=\"h5\">\n                    {props.Value}\n                </Typography>\n                <Typography variant=\"subtitle1\" color=\"textSecondary\">\n                    {props.Type}\n                </Typography>\n            </CardContent>\n\n        </Card>\n    );\n}\n\n\n/*\nconst classes = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: \"center\",\n        color: \"blue\"\n    }\n}));\n*/"]},"metadata":{},"sourceType":"module"}