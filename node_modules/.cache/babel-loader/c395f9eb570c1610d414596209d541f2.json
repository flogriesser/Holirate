{"ast":null,"code":"var _jsxFileName = \"/home/flo/Projects/HolirateFolder/react/Holirate/src/components/Number/Number.js\";\nimport { Component } from \"react\";\nimport { QuizData } from '../Data/Fragen';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Number extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.checkNumber = index => {\n      const {\n        currentIndex\n      } = this.state;\n      this.setState({\n        disabled: false,\n        currentIndex: this.state.currentIndex + 1\n      });\n    };\n  }\n\n  render() {\n    const {\n      score,\n      question,\n      options,\n      currentIndex\n    } = this.props.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"hud\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"hud-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"hud-prefix\",\n            children: [\"Question \", currentIndex + 1, \" / \", QuizData.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"progressBar\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"progressBarFull\",\n              style: {\n                width: `${currentIndex / QuizData.length * 100}%`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"hud-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"hud-prefix\",\n            children: \"Score\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"hud-main-text\",\n            id: \"score\",\n            children: score\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), options.map((option, index) =>\n      /*#__PURE__*/\n      //for each option, new paragrap\n      _jsxDEV(\"div\", {\n        className: `options-container`,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"options-text\",\n          children: option\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"OwnInput\",\n          type: \"number\",\n          id: index,\n          name: \"quantity\",\n          min: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 29\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 25\n      }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"OwnSubmit\",\n        onClick: () => this.props.checkNumber(),\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Number;","map":{"version":3,"sources":["/home/flo/Projects/HolirateFolder/react/Holirate/src/components/Number/Number.js"],"names":["Component","QuizData","Number","checkNumber","index","currentIndex","state","setState","disabled","render","score","question","options","props","length","width","map","option"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,QAAT,QAAyB,gBAAzB;;;AAEA,MAAMC,MAAN,SAAqBF,SAArB,CAA8B;AAAA;AAAA;;AAAA,SAG1BG,WAH0B,GAGXC,KAAD,IAAW;AACrB,YAAM;AAAEC,QAAAA;AAAF,UAAmB,KAAKC,KAA9B;AAGA,WAAKC,QAAL,CAAc;AACVC,QAAAA,QAAQ,EAAE,KADA;AAEVH,QAAAA,YAAY,EAAE,KAAKC,KAAL,CAAWD,YAAX,GAA0B;AAF9B,OAAd;AAIH,KAXyB;AAAA;;AAc1BI,EAAAA,MAAM,GAAE;AACJ,UAAM;AAACC,MAAAA,KAAD;AAAQC,MAAAA,QAAR;AAAkBC,MAAAA,OAAlB;AAA2BP,MAAAA;AAA3B,QAA2C,KAAKQ,KAAL,CAAWP,KAA5D;AAEA,wBACI;AAAA,8BACI;AAAK,QAAA,EAAE,EAAC,KAAR;AAAA,gCACI;AAAK,UAAA,EAAE,EAAC,UAAR;AAAA,kCACI;AAAG,YAAA,SAAS,EAAC,YAAb;AAAA,oCACcD,YAAY,GAAG,CAD7B,SACmCJ,QAAQ,CAACa,MAD5C;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII;AAAK,YAAA,EAAE,EAAC,aAAR;AAAA,mCACI;AAAK,cAAA,EAAE,EAAC,iBAAR;AAA0B,cAAA,KAAK,EAAE;AAAEC,gBAAAA,KAAK,EAAG,GAAGV,YAAY,GAAGJ,QAAQ,CAACa,MAAzB,GAAmC,GAAI;AAAnD;AAAjC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eASI;AAAK,UAAA,EAAE,EAAC,UAAR;AAAA,kCACI;AAAG,YAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII;AAAI,YAAA,SAAS,EAAC,eAAd;AAA8B,YAAA,EAAE,EAAC,OAAjC;AAAA,sBACKJ;AADL;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBATJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAmBI;AAAA;AAAA;AAAA;AAAA,cAnBJ,eAoBI;AAAA,kBAAKC;AAAL;AAAA;AAAA;AAAA;AAAA,cApBJ,EAsBQC,OAAO,CAACI,GAAR,CAAY,CAACC,MAAD,EAASb,KAAT;AAAA;AAAsB;AAC9B;AAAiB,QAAA,SAAS,EAAG,mBAA7B;AAAA,gCACI;AAAG,UAAA,SAAS,EAAC,cAAb;AAAA,oBAA6Ba;AAA7B;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,SAAS,EAAC,UAAjB;AAA4B,UAAA,IAAI,EAAC,QAAjC;AAA0C,UAAA,EAAE,EAAEb,KAA9C;AAAqD,UAAA,IAAI,EAAC,UAA1D;AAAqE,UAAA,GAAG,EAAC;AAAzE;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA,SAAUA,KAAV;AAAA;AAAA;AAAA;AAAA,cADJ,CAtBR,eA6BI;AAAA;AAAA;AAAA;AAAA,cA7BJ,eA8BI;AAAK,QAAA,SAAS,EAAC,WAAf;AACI,QAAA,OAAO,EAAE,MAAM,KAAKS,KAAL,CAAWV,WAAX,EADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA9BJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAmCH;;AApDyB;;AAuD9B,eAAeD,MAAf","sourcesContent":["import { Component } from \"react\";\nimport { QuizData } from '../Data/Fragen';\n\nclass Number extends Component{\n\n\n    checkNumber = (index) => {\n        const { currentIndex } = this.state;\n\n\n        this.setState({\n            disabled: false,\n            currentIndex: this.state.currentIndex + 1\n        })\n    }\n\n\n    render(){\n        const {score, question, options, currentIndex} = this.props.state;\n\n        return (\n            <div>\n                <div id=\"hud\">\n                    <div id=\"hud-item\">\n                        <p className=\"hud-prefix\">\n                            Question {currentIndex + 1} / {QuizData.length}\n                        </p>\n                        <div id=\"progressBar\">\n                            <div id=\"progressBarFull\" style={{ width: `${(currentIndex / QuizData.length) * 100}%` }}></div>\n                        </div>\n                    </div>\n                    <div id=\"hud-item\">\n                        <p className=\"hud-prefix\">\n                            Score\n    </p>\n                        <h1 className=\"hud-main-text\" id=\"score\">\n                            {score}\n                        </h1>\n                    </div>\n                </div>\n                <br></br>\n                <h2>{question}</h2>\n                {\n                    options.map((option, index) => (  //for each option, new paragrap\n                        <div key={index} className={`options-container`}>\n                            <p className=\"options-text\">{option}</p>\n                            <input className=\"OwnInput\" type=\"number\" id={index} name=\"quantity\" min=\"1\" ></input>\n                        </div>\n                    ))\n                }\n                <br></br>\n                <div className=\"OwnSubmit\"\n                    onClick={() => this.props.checkNumber()}>\n                    Submit</div>\n            </div >)\n    };\n}\n\nexport default Number;"]},"metadata":{},"sourceType":"module"}