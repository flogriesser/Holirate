{"ast":null,"code":"import _classCallCheck from\"/home/flo/Projects/react/holirate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/flo/Projects/react/holirate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/flo/Projects/react/holirate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/flo/Projects/react/holirate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";/*global google*/ //import ReactDOM from \"react-dom\";\nimport React from\"react\";import Quiz from\"../Quiz\";import{GoogleMap/*StandaloneSearchBox,*/,DirectionsRenderer}from\"@react-google-maps/api\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var defaultLocation={lat:48.1374300,lng:11.5754900};var destination={};var origin={};var RouteDistance=0;var directionsService;var Map=/*#__PURE__*/function(_React$Component){_inherits(Map,_React$Component);var _super=_createSuper(Map);function Map(){var _this;_classCallCheck(this,Map);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={directions:null,bounds:null};_this.onMapLoad=function(map){directionsService=new google.maps.DirectionsService();//load default origin and destination\n//this.changeDirection(origin, destination);\n};_this.onSBLoad=function(ref){_this.searchBox=ref;};_this.onPlacesChanged=function(){//pass the new place location as the origin\norigin=document.getElementById(\"Start\").value;console.log(origin);destination=document.getElementById(\"Stop\").value;_this.changeDirection(origin,destination);};_this.changeDirection=function(origin,destination){directionsService.route({origin:origin,destination:destination,travelMode:google.maps.TravelMode.DRIVING},function(result,status){if(status===google.maps.DirectionsStatus.OK){//changing the state of directions to the result of direction service\nRouteDistance=result.routes[0].legs[0].distance.value/1000;console.log(RouteDistance);Quiz.distance=RouteDistance;Quiz.setDistance(result.routes[0].legs[0].distance.value/1000);document.getElementById('Distance').innerHTML=RouteDistance+\" km\";_this.setState({directions:result});}else{console.error(\"error fetching directions \".concat(result));}});};return _this;}_createClass(Map,[{key:\"render\",value:/*\n   sendDistance= () => {\n    if(RouteDistance !== 0)\n    {\n      //Quiz.setDistance(RouteDistance);\n      Quiz.afterMap();\n    }  \n\n  }\n*/function render(){var _this2=this;return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"options-container\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"options-text\",children:\"Startpunkt\"}),/*#__PURE__*/_jsx(\"input\",{className:\"OwnInput\",type:\"text\",id:\"Start\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"options-container\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"options-text\",children:\"Reiseziel\"}),/*#__PURE__*/_jsx(\"input\",{className:\"OwnInput\",type:\"text\",id:\"Stop\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"OwnSubmit\",onClick:function onClick(){return _this2.onPlacesChanged();},children:\"Calculate\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"h2\",{id:\"Distance\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(GoogleMap,{center:defaultLocation,zoom:10,onLoad:function onLoad(map){return _this2.onMapLoad(map);},mapContainerStyle:{height:\"40vh\",width:\"60vw\"},children:this.state.directions!==null&&/*#__PURE__*/_jsx(DirectionsRenderer,{directions:this.state.directions})})]});}}]);return Map;}(React.Component);export default Map;","map":{"version":3,"sources":["/home/flo/Projects/react/holirate/src/components/Maps/maps.js"],"names":["React","Quiz","GoogleMap","DirectionsRenderer","defaultLocation","lat","lng","destination","origin","RouteDistance","directionsService","Map","state","directions","bounds","onMapLoad","map","google","maps","DirectionsService","onSBLoad","ref","searchBox","onPlacesChanged","document","getElementById","value","console","log","changeDirection","route","travelMode","TravelMode","DRIVING","result","status","DirectionsStatus","OK","routes","legs","distance","setDistance","innerHTML","setState","error","height","width","Component"],"mappings":"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","sourcesContent":["/*global google*/\n//import ReactDOM from \"react-dom\";\nimport React from \"react\";\nimport Quiz from \"../Quiz\"\n\nimport {\n  GoogleMap,\n  /*StandaloneSearchBox,*/\n  DirectionsRenderer,\n} from \"@react-google-maps/api\";\n\nconst defaultLocation = { lat: 48.1374300, lng: 11.5754900 };\nlet destination = { };\nlet origin = {  };\nvar RouteDistance = 0;\n\n\nlet directionsService;\n\nclass Map extends React.Component {\n  state = {\n    directions: null,\n    bounds: null\n  };\n\n  onMapLoad = map => {\n    directionsService = new google.maps.DirectionsService();\n\n    //load default origin and destination\n    //this.changeDirection(origin, destination);\n  };\n\n  //function that is called when SearchBox has loaded and assigned ref to this.searchbox  to get the searchbox object\n  onSBLoad = ref => {\n    this.searchBox = ref;\n  };\n\n  onPlacesChanged = () => {\n    //pass the new place location as the origin\n    origin = document.getElementById(\"Start\").value;\n    console.log(origin);\n    destination = document.getElementById(\"Stop\").value;\n    this.changeDirection(\n      origin,\n      destination\n    );\n  };\n\n  //function that is calling the directions service\n  changeDirection = (origin, destination) => {\n    directionsService.route(\n      {\n        origin: origin,\n        destination: destination,\n        travelMode: google.maps.TravelMode.DRIVING\n      },\n      (result, status) => {\n        if (status === google.maps.DirectionsStatus.OK) {\n          //changing the state of directions to the result of direction service\n          RouteDistance = result.routes[0].legs[0].distance.value / 1000;\n          console.log(RouteDistance);\n          Quiz.distance = RouteDistance;\n          Quiz.setDistance(result.routes[0].legs[0].distance.value/1000);\n          document.getElementById('Distance').innerHTML = RouteDistance + \" km\";\n          this.setState({\n            directions: result\n          });\n        } else {\n          console.error(`error fetching directions ${result}`);\n        }\n      }\n    );\n  };\n/*\n   sendDistance= () => {\n    if(RouteDistance !== 0)\n    {\n      //Quiz.setDistance(RouteDistance);\n      Quiz.afterMap();\n    }  \n\n  }\n*/\n  render() {\n    return (\n        <div>\n\n                                      <div className={`options-container`}>\n                                <p className=\"options-text\">Startpunkt</p>\n                                <input className=\"OwnInput\" type=\"text\" id=\"Start\" ></input>\n                            </div>\n                            <div className={`options-container`}>\n                                <p className=\"options-text\">Reiseziel</p>\n                                <input className=\"OwnInput\" type=\"text\" id=\"Stop\" ></input>\n                            </div>\n                            <div className=\"OwnSubmit\"\n                            onClick={() => this.onPlacesChanged()}>\n                              \n                        Calculate</div>\n                        <br></br>\n                        <h2 id=\"Distance\"></h2>\n                        <br></br>\n\n          <GoogleMap\n            center={defaultLocation}\n            zoom={10}\n            onLoad={map => this.onMapLoad(map)}\n            mapContainerStyle={{ height: \"40vh\", width: \"60vw\" }}\n          >\n            {this.state.directions !== null && (\n              <DirectionsRenderer directions={this.state.directions} />\n            )}\n          </GoogleMap>\n        </div>\n    );\n  }\n}\n\nexport default Map;"]},"metadata":{},"sourceType":"module"}