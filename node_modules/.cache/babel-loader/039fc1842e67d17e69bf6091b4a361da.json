{"ast":null,"code":"var _jsxFileName = \"/home/flo/Projects/react/Holirate/src/components/Maps/maps.js\";\n\n/*\n * @Author: Florian Griesser \n * @Date: 2021-05-29 10:29:11 \n * @Last Modified by: Florian Griesser\n * @Last Modified time: 2021-06-08 10:26:30\n */\n//import ReactDOM from \"react-dom\";\nimport React from \"react\"; //import Quiz from \"../Quiz\"\n\nimport { QuizData } from '../Data/Fragen';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar openrouteservice = require(\"openrouteservice-js\");\n\nvar Directions = new openrouteservice.Directions({\n  api_key: \"5b3ce3597851110001cf62480409f2e1bda9489b88ce73ddc2096464\"\n});\nvar Geocode = new openrouteservice.Geocode({\n  api_key: \"5b3ce3597851110001cf62480409f2e1bda9489b88ce73ddc2096464\"\n});\nlet orsDirections = new openrouteservice.Directions({\n  api_key: \"5b3ce3597851110001cf62480409f2e1bda9489b88ce73ddc2096464\"\n});\n\nclass Map extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      directions: null,\n      bounds: null\n    };\n\n    this.testMap = () => {\n      orsDirections.calculate({\n        coordinates: [[11.581981, 48.135125], [11.4257541, 48.7665351]],\n        profile: \"driving-car\",\n        extra_info: [\"waytype\", \"steepness\"],\n        format: \"json\",\n        api_version: 'v2'\n      }).then(function (json) {\n        // Add your own result handling here\n        let response = JSON.stringify(json, null, \"\\t\"); //console.log(json);\n\n        console.log(json.routes[0].segments[0].distance); //console.log(response);\n        //response = response.replace(/(\\n)/g, '<br>');\n        //response = response.replace(/(\\t)/g, '&nbsp;&nbsp;');\n        //node.innerHTML = \"<h3>Response</h3><p>\" + response + \"</p>\";\n      }).catch(function (err) {\n        let response = JSON.stringify(err, null, \"\\t\");\n        console.error(response); //response = response.replace(/(\\n)/g, '<br>');\n        //response = response.replace(/(\\t)/g, '&nbsp;&nbsp;');\n        //node.innerHTML = \"<h3>Error</h3><p>\" + response + \"</p>\";\n      });\n    };\n  }\n\n  render() {\n    const currentIndex = this.props.state.currentIndex;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"hud\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"hud-item\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"progressBar\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"progressBarFull\",\n              style: {\n                width: `${currentIndex / QuizData.length * 100}%`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"hud-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"hud-prefix\",\n            children: \"Score\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"hud-main-text\",\n            id: \"score\",\n            children: this.props.state.score\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: this.props.state.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"OwnSubmit\",\n        onClick: () => this.testMap(),\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `options-container`,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"options-text\",\n          children: \"Startpunkt\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"OwnInput\",\n          type: \"text\",\n          id: \"Start\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `options-container`,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"options-text\",\n          children: \"Reiseziel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"OwnInput\",\n          type: \"text\",\n          id: \"Stop\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        id: \"Distance\",\n        children: \"Kilometer: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default Map;","map":{"version":3,"sources":["/home/flo/Projects/react/Holirate/src/components/Maps/maps.js"],"names":["React","QuizData","openrouteservice","require","Directions","api_key","Geocode","orsDirections","Map","Component","state","directions","bounds","testMap","calculate","coordinates","profile","extra_info","format","api_version","then","json","response","JSON","stringify","console","log","routes","segments","distance","catch","err","error","render","currentIndex","props","width","length","score","question"],"mappings":"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","sourcesContent":["/*\n * @Author: Florian Griesser \n * @Date: 2021-05-29 10:29:11 \n * @Last Modified by: Florian Griesser\n * @Last Modified time: 2021-06-08 10:26:30\n */\n\n//import ReactDOM from \"react-dom\";\nimport React from \"react\";\n//import Quiz from \"../Quiz\"\nimport { QuizData } from '../Data/Fragen';\n\n\nvar openrouteservice = require(\"openrouteservice-js\");\n\n\nvar Directions = new openrouteservice.Directions({\n  api_key: \"5b3ce3597851110001cf62480409f2e1bda9489b88ce73ddc2096464\"\n});\n\nvar Geocode = new openrouteservice.Geocode({\n  api_key: \"5b3ce3597851110001cf62480409f2e1bda9489b88ce73ddc2096464\"\n});\n\nlet orsDirections = new openrouteservice.Directions({\n  api_key: \"5b3ce3597851110001cf62480409f2e1bda9489b88ce73ddc2096464\"\n});\n\n\n\n\nclass Map extends React.Component {\n  state = {\n    directions: null,\n    bounds: null\n  };\n\n\n  // [[11.581981,48.135125],[11.4257541,48.7665351]]\n  // 5b3ce3597851110001cf62480409f2e1bda9489b88ce73ddc2096464\n\n  testMap = () =>{\n\n    orsDirections.calculate({\n      coordinates: [[11.581981,48.135125],[11.4257541,48.7665351]],\n      profile: \"driving-car\",\n      extra_info: [\"waytype\", \"steepness\"],\n      format: \"json\",\n      api_version: 'v2',\n    })\n      .then(function(json) {\n          // Add your own result handling here\n          let response = JSON.stringify(json, null, \"\\t\")\n          //console.log(json);\n          console.log(json.routes[0].segments[0].distance);\n          //console.log(response);\n          //response = response.replace(/(\\n)/g, '<br>');\n          //response = response.replace(/(\\t)/g, '&nbsp;&nbsp;');\n          //node.innerHTML = \"<h3>Response</h3><p>\" + response + \"</p>\";\n      })\n      .catch(function(err) {\n          let response = JSON.stringify(err, null, \"\\t\")\n          console.error(response);\n          //response = response.replace(/(\\n)/g, '<br>');\n          //response = response.replace(/(\\t)/g, '&nbsp;&nbsp;');\n          //node.innerHTML = \"<h3>Error</h3><p>\" + response + \"</p>\";\n      });\n\n  }\n\n\n\n  \n  render() {\n    const currentIndex = this.props.state.currentIndex;\n    return (\n        <div>\n        <div id=\"hud\">\n          <div id=\"hud-item\">\n            <div id=\"progressBar\">\n              <div id=\"progressBarFull\" style={{ width: `${(currentIndex / QuizData.length) * 100}%` }}></div>\n            </div>\n          </div>\n          <div id=\"hud-item\">\n            <p className=\"hud-prefix\">\n              Score\n            </p>\n            <h1 className=\"hud-main-text\" id=\"score\">\n              {this.props.state.score}\n            </h1>\n          </div>\n        </div>\n        <br></br>\n        <h2>{this.props.state.question}</h2>\n        \n        <br></br>\n        <div className=\"OwnSubmit\"\n                            onClick={() => this.testMap()}>\n                        Submit</div>\n        <br></br>\n\n        <div className={`options-container`}>\n          <p className=\"options-text\">Startpunkt</p>\n          <input className=\"OwnInput\" type=\"text\" id=\"Start\" ></input>\n        </div>\n        <div className={`options-container`}>\n          <p className=\"options-text\">Reiseziel</p>\n          <input className=\"OwnInput\" type=\"text\" id=\"Stop\" ></input>\n        </div>\n        <br></br>\n        <h2 id=\"Distance\">Kilometer: </h2>\n        <br></br>\n\n      </div>\n    );\n  }\n}\n\nexport default Map;"]},"metadata":{},"sourceType":"module"}