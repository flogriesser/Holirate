{"ast":null,"code":"var _jsxFileName = \"/home/flo/Projects/react/Holirate/src/components/SingleQuestion/singleQuestion.js\";\n\n/*\n * @Author: Florian Griesser \n * @Date: 2021-05-29 17:23:53 \n * @Last Modified by: Florian Griesser\n * @Last Modified time: 2021-05-29 17:35:49\n */\nimport React from \"react\";\nimport Radio from '@material-ui/core/Radio';\nimport Button from '@material-ui/core/Button';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport { QuizData } from '../Data/Fragen';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Singlequestion extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.checkAnswer = (answer, index) => {\n      const {\n        currentIndex\n      } = this.props.state;\n      var Travelmode = null;\n      var points = 0;\n      console.log(index);\n\n      if (QuizData[currentIndex].options[index] === \"Flugzeug\") {\n        Travelmode = \"Fligth\";\n      } else if (QuizData[currentIndex].options[index] === \"Auto\") {\n        Travelmode = \"Car\";\n      } else if (QuizData[currentIndex].options[index] === \"Zug\") {\n        Travelmode = \"Train\";\n      } else {\n        points = QuizData[currentIndex].values[index];\n      }\n\n      this.props.callbackSingleQuestion(index, points, Travelmode);\n    };\n  }\n\n  /*checkAnswer*/\n  render() {\n    const {\n      question,\n      options,\n      currentIndex,\n      score\n    } = this.props.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"hud\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"hud-item\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"progressBar\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"progressBarFull\",\n              style: {\n                width: `${currentIndex / QuizData.length * 100}%`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"hud-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"hud-prefix\",\n            children: \"Score\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"hud-main-text\",\n            id: \"score\",\n            children: score\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), options.map((option, index) =>\n      /*#__PURE__*/\n      //for each option, new paragrap\n      _jsxDEV(\"div\", {\n        className: `options-container`,\n        onClick: () => this.checkAnswer(option, index),\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"options-prefix\",\n          children: index + 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"options-text\",\n          children: [\" \", option]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 29\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 25\n      }, this)), /*#__PURE__*/_jsxDEV(FormControl, {\n        component: \"fieldset\",\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          component: \"legend\",\n          children: question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n          \"aria-label\": \"gender\",\n          name: \"gender1\",\n          children: options.map((option, index) =>\n          /*#__PURE__*/\n          //for each option, new paragrap\n          _jsxDEV(FormControlLabel, {\n            value: index + 1,\n            onChange: () => this.checkAnswer(option, index),\n            control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 46\n            }, this),\n            labelStyle: {\n              color: 'blue'\n            },\n            iconStyle: {\n              fill: 'blue'\n            },\n            label: option\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"outlined\",\n          color: \"primary\",\n          className: classes.button,\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Singlequestion;","map":{"version":3,"sources":["/home/flo/Projects/react/Holirate/src/components/SingleQuestion/singleQuestion.js"],"names":["React","Radio","Button","RadioGroup","FormControlLabel","FormControl","FormLabel","QuizData","Singlequestion","Component","checkAnswer","answer","index","currentIndex","props","state","Travelmode","points","console","log","options","values","callbackSingleQuestion","render","question","score","width","length","map","option","color","fill","classes","button"],"mappings":"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","sourcesContent":["/*\n * @Author: Florian Griesser \n * @Date: 2021-05-29 17:23:53 \n * @Last Modified by: Florian Griesser\n * @Last Modified time: 2021-05-29 17:35:49\n */\n\nimport React from \"react\";\nimport Radio from '@material-ui/core/Radio';\nimport Button from '@material-ui/core/Button';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel'\nimport { QuizData } from '../Data/Fragen';\n\n\nclass Singlequestion extends React.Component {\n\n    //Check the answer\n    checkAnswer = (answer, index) => {\n        const { currentIndex } = this.props.state;\n        var Travelmode = null;\n        var points = 0;\n        console.log(index);\n\n        if (QuizData[currentIndex].options[index] === \"Flugzeug\") {\n            Travelmode = \"Fligth\";\n        } else if (QuizData[currentIndex].options[index] === \"Auto\") {\n            Travelmode = \"Car\";\n        } else if (QuizData[currentIndex].options[index] === \"Zug\") {\n            Travelmode = \"Train\";\n        } else {\n            points = QuizData[currentIndex].values[index];\n        }\n\n\n        this.props.callbackSingleQuestion(index, points, Travelmode);\n    }/*checkAnswer*/\n\n\n\n\n    render() {\n        const { question, options, currentIndex, score } = this.props.state;\n        return (\n            <div>\n                <div id=\"hud\">\n                    <div id=\"hud-item\">\n                        <div id=\"progressBar\">\n                            <div id=\"progressBarFull\" style={{ width: `${(currentIndex / QuizData.length) * 100}%` }}></div>\n                        </div>\n                    </div>\n                    <div id=\"hud-item\">\n                        <p className=\"hud-prefix\">\n                            Score\n                        </p>\n                        <h1 className=\"hud-main-text\" id=\"score\">\n                            {score}\n                        </h1>\n                    </div>\n                </div>\n                <br></br>\n                <h2>{question}</h2>\n                <br></br>\n                {\n                    options.map((option, index) => (  //for each option, new paragrap\n\n\n                        <div key={index}\n                            className={`options-container`}\n                            onClick={() => this.checkAnswer(option, index)}>\n                            <p className=\"options-prefix\">{index + 1}</p>\n                            <p className=\"options-text\"> {option}</p>\n                        </div>\n                    ))\n                }\n                <FormControl component=\"fieldset\">\n                    <FormLabel component=\"legend\">{question}</FormLabel>\n                    <RadioGroup aria-label=\"gender\" name=\"gender1\" >\n                        {\n                            options.map((option, index) => (  //for each option, new paragrap\n                                <FormControlLabel value={index + 1}\n                                    onChange={() => this.checkAnswer(option, index)}\n                                    control={<Radio />}\n                                    labelStyle={{color: 'blue'}}\n                                    iconStyle={{fill: 'blue'}}\n                                    label={option} />\n                            ))\n                        }\n                    </RadioGroup>\n                    <Button type=\"submit\" variant=\"outlined\" color=\"primary\" className={classes.button}>\n                        Next\n                    </Button>\n                </FormControl>\n            </div >\n        )\n    }\n}\n\nexport default Singlequestion;"]},"metadata":{},"sourceType":"module"}