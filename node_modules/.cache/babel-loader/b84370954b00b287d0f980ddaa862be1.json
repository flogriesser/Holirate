{"ast":null,"code":"var _jsxFileName = \"/home/flo/Projects/react/Holirate/src/components/Score/quizEnd.js\";\n\n/*\n * @Author: Florian Griesser \n * @Date: 2021-05-29 10:29:35 \n * @Last Modified by: Florian Griesser\n * @Last Modified time: 2021-06-12 08:35:57\n */\nimport { Component } from \"react\";\nimport { carValues } from \"../Data/Data\";\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Box from \"@material-ui/core/Box\";\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { FormControlLabel } from \"@material-ui/core\";\nimport { CircularProgressbar, buildStyles } from \"react-circular-progressbar\";\nimport \"react-circular-progressbar/dist/styles.css\"; // Animation\n\nimport { easeQuadInOut } from \"d3-ease\";\nimport AnimatedProgressProvider from \"../Style/AnimatedProgressProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass QuizEnds extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.calculateCar = (distance, carPower, carType) => {\n      //const {distance, carType, carPower} = this.props.state;\n      var Factor = carValues[carPower][carType];\n      return (Factor * distance).toFixed(0);\n    };\n\n    this.calculateTrain = () => {\n      const {\n        distance\n      } = this.props.state;\n      return (0.032 * distance).toFixed(0);\n    };\n\n    this.calculateFlight = distance => {\n      return (0.369 * distance).toFixed(0);\n    };\n\n    this.calcScore = co2 => {\n      var score = 0;\n      score = 75 - co2 * 75 / 2500;\n\n      if (co2 > 2500) {\n        score = 0;\n      }\n\n      return score;\n    };\n\n    this.compareCo2 = (TravelMode, co2) => {};\n  }\n\n  render() {\n    const {\n      score,\n      distance,\n      ChoosenTipps,\n      TravelMode,\n      carPower,\n      carType\n    } = this.props.state;\n    var co2 = 0;\n    var EndScore = score;\n\n    if (TravelMode === 'Car') {\n      co2 = this.calculateCar(distance, carPower, carType);\n    } else if (TravelMode === 'Train') {\n      co2 = this.calculateTrain(distance);\n    } else if (TravelMode === 'Fligth') {\n      co2 = this.calculateFlight(distance);\n    }\n\n    EndScore = (EndScore + this.calcScore(co2)).toFixed(0);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        maxwidth: \"false\",\n        align: \"center\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          children: \"Dein Holirate Rating ist fertig!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            padding: \"20% 20% 20% 20%\"\n          },\n          children: /*#__PURE__*/_jsxDEV(AnimatedProgressProvider, {\n            valueStart: 0,\n            valueEnd: EndScore,\n            duration: 2,\n            easingFunction: easeQuadInOut,\n            children: value => {\n              const roundedValue = Math.round(value);\n              var ScoreColor = \"#f44336\";\n\n              if (value < 33) {\n                return /*#__PURE__*/_jsxDEV(CircularProgressbar, {\n                  value: value,\n                  text: `${roundedValue}%`,\n                  circleRatio: 0.75,\n                  styles: buildStyles({\n                    pathTransition: \"none\",\n                    rotation: 1 / 2 + 1 / 8,\n                    strokeLinecap: \"butt\",\n                    trailColor: \"#eee\",\n                    pathColor: \"#f44336\"\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 41\n                }, this);\n              } else if (value >= 33 && value < 66) {\n                return /*#__PURE__*/_jsxDEV(CircularProgressbar, {\n                  value: value,\n                  text: `${roundedValue}%`,\n                  circleRatio: 0.75,\n                  styles: buildStyles({\n                    pathTransition: \"none\",\n                    rotation: 1 / 2 + 1 / 8,\n                    strokeLinecap: \"butt\",\n                    trailColor: \"#eee\",\n                    pathColor: \"#ff9800\"\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 41\n                }, this);\n              } else {\n                return /*#__PURE__*/_jsxDEV(CircularProgressbar, {\n                  value: value,\n                  text: `${roundedValue}%`,\n                  circleRatio: 0.75,\n                  styles: buildStyles({\n                    pathTransition: \"none\",\n                    rotation: 1 / 2 + 1 / 8,\n                    strokeLinecap: \"butt\",\n                    trailColor: \"#eee\",\n                    pathColor: \"#66bb6a\"\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 41\n                }, this);\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          children: [\"Kilometer: \", distance]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          children: [\"C02: \", co2, \" kg\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          maxwidth: \"false\",\n          align: \"center\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            component: \"fieldset\",\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              component: \"legend\",\n              aligncontent: \"center\",\n              children: \"Hier noch ein paar Tipps f\\xFCr deine Reise:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              name: \"quiz\",\n              value: this.indexValue,\n              onChange: this.radioHandler,\n              children: ChoosenTipps.map((tipp, index) =>\n              /*#__PURE__*/\n              //for each option, new paragrap\n              _jsxDEV(FormControlLabel, {\n                value: index + 1,\n                //for dumb unique key\n                control: /*#__PURE__*/_jsxDEV(Box, {\n                  color: \"primary\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 54\n                }, this),\n                label: tipp\n              }, index + 1, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default QuizEnds;","map":{"version":3,"sources":["/home/flo/Projects/react/Holirate/src/components/Score/quizEnd.js"],"names":["Component","carValues","FormLabel","FormControl","Box","Grid","Typography","FormControlLabel","CircularProgressbar","buildStyles","easeQuadInOut","AnimatedProgressProvider","QuizEnds","calculateCar","distance","carPower","carType","Factor","toFixed","calculateTrain","props","state","calculateFlight","calcScore","co2","score","compareCo2","TravelMode","render","ChoosenTipps","EndScore","padding","value","roundedValue","Math","round","ScoreColor","pathTransition","rotation","strokeLinecap","trailColor","pathColor","indexValue","radioHandler","map","tipp","index"],"mappings":"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","sourcesContent":["/*\n * @Author: Florian Griesser \n * @Date: 2021-05-29 10:29:35 \n * @Last Modified by: Florian Griesser\n * @Last Modified time: 2021-06-12 08:35:57\n */\n\nimport { Component } from \"react\";\nimport { carValues } from \"../Data/Data\";\nimport FormLabel from '@material-ui/core/FormLabel'\nimport FormControl from '@material-ui/core/FormControl';\nimport Box from \"@material-ui/core/Box\";\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { FormControlLabel } from \"@material-ui/core\";\n\n\nimport {\n    CircularProgressbar,\n    buildStyles\n} from \"react-circular-progressbar\";\nimport \"react-circular-progressbar/dist/styles.css\";\n\n// Animation\nimport { easeQuadInOut } from \"d3-ease\";\nimport AnimatedProgressProvider from \"../Style/AnimatedProgressProvider\";\n\n\nclass QuizEnds extends Component {\n    calculateCar = (distance, carPower, carType) => {\n        //const {distance, carType, carPower} = this.props.state;\n\n        var Factor = carValues[carPower][carType];\n\n\n\n        return (Factor * distance).toFixed(0);\n    }\n\n    calculateTrain = () => {\n        const { distance } = this.props.state;\n\n        return (0.032 * distance).toFixed(0);\n    }\n    calculateFlight = (distance) => {\n\n        return (0.369 * distance).toFixed(0);\n    }\n\n    calcScore = (co2) => {\n        var score = 0;\n\n        score = 75 - co2 * 75 / 2500;\n\n        if (co2 > 2500) {\n            score = 0;\n        }\n\n        return score;\n    }\n\n    compareCo2 = (TravelMode, co2) => {\n\n\n    }\n\n\n    render() {\n        const { score, distance, ChoosenTipps, TravelMode, carPower, carType } = this.props.state;\n        var co2 = 0;\n        var EndScore = score;\n        if (TravelMode === 'Car') {\n            co2 = this.calculateCar(distance, carPower, carType);\n        }\n        else if (TravelMode === 'Train') {\n            co2 = this.calculateTrain(distance);\n        }\n        else if (TravelMode === 'Fligth') {\n            co2 = this.calculateFlight(distance);\n        }\n\n        EndScore = (EndScore + this.calcScore(co2)).toFixed(0);\n\n        return (\n            <div>\n                <Grid container maxwidth=\"false\" align=\"center\" justifyContent=\"center\" alignItems=\"center\" >\n                    <Typography variant=\"h4\">Dein Holirate Rating ist fertig!</Typography>\n                    <div style={{ padding: \"20% 20% 20% 20%\" }}>\n                        <AnimatedProgressProvider\n                            valueStart={0}\n                            valueEnd={EndScore}\n                            duration={2}\n                            easingFunction={easeQuadInOut}\n                        >\n                            {(value) => {\n                                const roundedValue = Math.round(value);\n                                var ScoreColor = \"#f44336\";\n                                if (value < 33) {\n                                    return (\n                                        <CircularProgressbar\n                                            value={value}\n                                            text={`${roundedValue}%`}\n                                            circleRatio={0.75}\n                                            styles={buildStyles({\n                                                pathTransition: \"none\",\n                                                rotation: 1 / 2 + 1 / 8,\n                                                strokeLinecap: \"butt\",\n                                                trailColor: \"#eee\",\n                                                pathColor: \"#f44336\"\n                                            })}\n                                        />\n                                    );\n                                } else if (value >= 33 && value < 66) {\n                                    return (\n                                        <CircularProgressbar\n                                            value={value}\n                                            text={`${roundedValue}%`}\n                                            circleRatio={0.75}\n                                            styles={buildStyles({\n                                                pathTransition: \"none\",\n                                                rotation: 1 / 2 + 1 / 8,\n                                                strokeLinecap: \"butt\",\n                                                trailColor: \"#eee\",\n                                                pathColor: \"#ff9800\"\n                                            })}\n                                        />\n                                    );\n                                } else {\n                                    return (\n                                        <CircularProgressbar\n                                            value={value}\n                                            text={`${roundedValue}%`}\n                                            circleRatio={0.75}\n                                            styles={buildStyles({\n                                                pathTransition: \"none\",\n                                                rotation: 1 / 2 + 1 / 8,\n                                                strokeLinecap: \"butt\",\n                                                trailColor: \"#eee\",\n                                                pathColor: \"#66bb6a\"\n                                            })}\n                                        />\n                                    );\n                                }\n                            }}\n                        </AnimatedProgressProvider>\n                    </div>\n                    <Typography variant=\"h4\">Kilometer: {distance}</Typography>\n                    <Typography variant=\"h4\">C02: {co2} kg</Typography>\n\n                    <Grid container maxwidth=\"false\" align=\"center\" justifyContent=\"center\" alignItems=\"center\" >\n                        <FormControl component=\"fieldset\" >\n                            <FormLabel component=\"legend\" aligncontent=\"center\">Hier noch ein paar Tipps für deine Reise:</FormLabel>\n                            <Box name=\"quiz\" value={this.indexValue} onChange={this.radioHandler}>\n                                {\n                                    ChoosenTipps.map((tipp, index) => (  //for each option, new paragrap\n                                        <FormControlLabel value={index + 1}\n                                            key={index + 1}//for dumb unique key\n                                            control={<Box\n                                                color=\"primary\"\n                                            />}\n                                            label={tipp} />\n                                    ))\n                                }\n                            </Box>\n                        </FormControl>\n                    </Grid>\n                </Grid>\n            </div>\n        )\n    };\n}\n\nexport default QuizEnds;"]},"metadata":{},"sourceType":"module"}