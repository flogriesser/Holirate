{"ast":null,"code":"var _jsxFileName = \"/home/flo/Projects/react/Holirate/src/components/SingleQuestion/singleQuestion.js\";\n\n/*\n * @Author: Florian Griesser \n * @Date: 2021-05-29 17:23:53 \n * @Last Modified by: Florian Griesser\n * @Last Modified time: 2021-05-29 17:35:49\n */\nimport React from \"react\";\nimport Radio from '@material-ui/core/Radio';\nimport Button from '@material-ui/core/Button';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport '@fontsource/roboto';\nimport { BorderLinearProgress, ScoreHeader, theme } from \"../stylesUI\";\nimport { QuizData } from '../Data/Fragen';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Singlequestion extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.radioHandler = event => {\n      console.log(event.target.value);\n      this.setState({\n        value: event.target.value\n      });\n      console.log(this.state.value);\n    };\n\n    this.handleSubmit = () => {\n      const {\n        currentIndex\n      } = this.props.state;\n      var Travelmode = null;\n      var points = 0;\n      console.log(index);\n      var index = this.state.value;\n\n      if (QuizData[currentIndex].options[index] === \"Flugzeug\") {\n        Travelmode = \"Fligth\";\n      } else if (QuizData[currentIndex].options[index] === \"Auto\") {\n        Travelmode = \"Car\";\n      } else if (QuizData[currentIndex].options[index] === \"Zug\") {\n        Travelmode = \"Train\";\n      } else {\n        points = QuizData[currentIndex].values[index];\n      }\n\n      this.props.callbackSingleQuestion(index, points, Travelmode);\n    };\n\n    this.state = {\n      value: 0\n    };\n  }\n\n  /*checkAnswer*/\n  render() {\n    const {\n      question,\n      options,\n      currentIndex,\n      score\n    } = this.props.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(ScoreHeader, {\n        score: score,\n        currentIndex: currentIndex\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          component: \"fieldset\",\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            component: \"legend\",\n            children: question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n            \"aria-label\": \"quiz\",\n            name: \"quiz\",\n            value: this.state.value,\n            onChange: this.radioHandler,\n            children: options.map((option, index) =>\n            /*#__PURE__*/\n            //for each option, new paragrap\n            _jsxDEV(FormControlLabel, {\n              value: index + 1,\n              control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 50\n              }, this),\n              label: option\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"outlined\",\n            color: \"primary\",\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Singlequestion;","map":{"version":3,"sources":["/home/flo/Projects/react/Holirate/src/components/SingleQuestion/singleQuestion.js"],"names":["React","Radio","Button","RadioGroup","FormControlLabel","FormControl","FormLabel","BorderLinearProgress","ScoreHeader","theme","QuizData","Singlequestion","Component","constructor","props","radioHandler","event","console","log","target","value","setState","state","handleSubmit","currentIndex","Travelmode","points","index","options","values","callbackSingleQuestion","render","question","score","map","option"],"mappings":"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","sourcesContent":["/*\n * @Author: Florian Griesser \n * @Date: 2021-05-29 17:23:53 \n * @Last Modified by: Florian Griesser\n * @Last Modified time: 2021-05-29 17:35:49\n */\n\nimport React from \"react\";\nimport Radio from '@material-ui/core/Radio';\nimport Button from '@material-ui/core/Button';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel'\nimport '@fontsource/roboto';\nimport { BorderLinearProgress, ScoreHeader, theme } from \"../stylesUI\";\n\nimport { QuizData } from '../Data/Fragen';\n\n\n\n\n\nclass Singlequestion extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = { value: 0 }\n    }\n\n    radioHandler = (event) => {\n        console.log(event.target.value);\n        this.setState({\n            value: event.target.value\n        })\n        console.log(this.state.value);\n    }\n\n\n    //Check the answer\n    handleSubmit = () => {\n\n        const { currentIndex } = this.props.state;\n        var Travelmode = null;\n        var points = 0;\n        console.log(index);\n        var index = this.state.value;\n\n        if (QuizData[currentIndex].options[index] === \"Flugzeug\") {\n            Travelmode = \"Fligth\";\n        } else if (QuizData[currentIndex].options[index] === \"Auto\") {\n            Travelmode = \"Car\";\n        } else if (QuizData[currentIndex].options[index] === \"Zug\") {\n            Travelmode = \"Train\";\n        } else {\n            points = QuizData[currentIndex].values[index];\n        }\n\n\n        this.props.callbackSingleQuestion(index, points, Travelmode);\n    }/*checkAnswer*/\n\n\n\n    render() {\n        const { question, options, currentIndex, score } = this.props.state;\n\n        return (\n            <div>\n                <ScoreHeader score={score} currentIndex={currentIndex} />\n\n                <form onSubmit={this.handleSubmit}>\n                    <FormControl component=\"fieldset\">\n                        <FormLabel component=\"legend\">{question}</FormLabel>\n                    <br></br>\n                        <RadioGroup aria-label=\"quiz\" name=\"quiz\" value={this.state.value} onChange={this.radioHandler}>\n                            {\n                                options.map((option, index) => (  //for each option, new paragrap\n                                    <FormControlLabel value={index + 1}\n                                        control={<Radio />}\n                                        label={option} />\n                                ))\n                            }\n                        </RadioGroup>\n                        <Button type=\"submit\" variant=\"outlined\" color=\"primary\">\n                            Next\n                        </Button>\n                    </FormControl>\n                </form>\n            </div >\n        )\n    }\n}\n\nexport default Singlequestion;"]},"metadata":{},"sourceType":"module"}