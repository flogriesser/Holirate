{"ast":null,"code":"var _jsxFileName = \"/home/flo/Projects/react/Holirate/src/components/Score/quizEnd.js\";\n\n/*\n * @Author: Florian Griesser \n * @Date: 2021-05-29 10:29:35 \n * @Last Modified by: Florian Griesser\n * @Last Modified time: 2021-06-12 08:35:57\n */\nimport { Component } from \"react\";\nimport { carValues } from \"../Data/Data\";\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\nimport { Box, ThemeProvider } from \"@material-ui/core\";\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { CircularProgress } from '@material-ui/core'; //import { QuizData } from '../Data/Fragen';\n\nimport { theme, CircularProgressWithLabel } from \"../stylesUI\";\nimport { CircularProgressbar, CircularProgressbarWithChildren, buildStyles } from \"react-circular-progressbar\";\nimport \"react-circular-progressbar/dist/styles.css\"; // Animation\n\nimport { easeQuadInOut } from \"d3-ease\";\nimport AnimatedProgressProvider from \"../Style/AnimatedProgressProvider\";\nimport ChangingProgressProvider from \"../Style/ChangingProgressProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass QuizEnds extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.calculateCar = (distance, carPower, carType) => {\n      //const {distance, carType, carPower} = this.props.state;\n      var Factor = carValues[carPower][carType];\n      return (Factor * distance).toFixed(0);\n    };\n\n    this.calculateTrain = () => {\n      const {\n        distance\n      } = this.props.state;\n      return (0.032 * distance).toFixed(0);\n    };\n\n    this.calculateFlight = distance => {\n      return (0.369 * distance).toFixed(0);\n    };\n\n    this.calcScore = co2 => {\n      var score = 0;\n      score = 75 - co2 * 75 / 2500;\n\n      if (co2 > 2500) {\n        score = 0;\n      }\n\n      return score;\n    };\n\n    this.compareCo2 = (TravelMode, co2) => {};\n  }\n\n  render() {\n    const {\n      score,\n      distance,\n      ChoosenTipps,\n      TravelMode,\n      carPower,\n      carType\n    } = this.props.state;\n    var co2 = 0;\n    var EndScore = score;\n\n    if (TravelMode === 'Car') {\n      co2 = this.calculateCar(distance, carPower, carType);\n    } else if (TravelMode === 'Train') {\n      co2 = this.calculateTrain(distance);\n    } else if (TravelMode === 'Fligth') {\n      co2 = this.calculateFlight(distance);\n    }\n\n    EndScore = (EndScore + this.calcScore(co2)).toFixed(0);\n    var circle = \"c100 p\" + EndScore + \" big green\";\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        maxwidth: \"false\",\n        align: \"center\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          children: \"Dein Holirate Rating ist fertig!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            padding: \"20% 20% 20% 20%\"\n          },\n          children: /*#__PURE__*/_jsxDEV(ChangingProgressProvider, {\n            \"max-width\": \"80%\",\n            values: [0, 20, 40, 60, 80],\n            children: value => /*#__PURE__*/_jsxDEV(CircularProgressbar, {\n              value: value,\n              text: `${value}%`,\n              circleRatio: 0.75,\n              styles: buildStyles({\n                rotation: 1 / 2 + 1 / 8,\n                strokeLinecap: \"butt\",\n                trailColor: \"#eee\",\n                pathColor: \"#66bb6a\"\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          children: [\"Kilometer: \", distance]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          children: [\"C02: \", co2, \" kg\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          maxwidth: \"false\",\n          align: \"center\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 12,\n            md: 6,\n            lg: 4,\n            style: {\n              textAlign: 'center',\n              align: 'center',\n              justifyContent: 'center',\n              alignItems: 'center',\n              width: '80%',\n              margin: 'center'\n            },\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              component: \"fieldset\",\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                component: \"legend\",\n                aligncontent: \"center\",\n                children: \"Hier noch ein paar Tipps f\\xFCr deine Reise:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                name: \"quiz\",\n                value: this.indexValue,\n                onChange: this.radioHandler,\n                children: ChoosenTipps.map((tipp, index) =>\n                /*#__PURE__*/\n                //for each option, new paragrap\n                _jsxDEV(FormControlLabel, {\n                  value: index + 1,\n                  //for dumb unique key\n                  control: /*#__PURE__*/_jsxDEV(Box, {\n                    color: \"primary\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 134,\n                    columnNumber: 54\n                  }, this),\n                  label: option\n                }, index + 1, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 41\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Hier noch ein paar Tipps f\\xFCr deine Reise\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: ChoosenTipps.map((tipp, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"options-container\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"options-text\",\n              children: [\" \", tipp]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 33\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default QuizEnds;","map":{"version":3,"sources":["/home/flo/Projects/react/Holirate/src/components/Score/quizEnd.js"],"names":["Component","carValues","FormLabel","Button","TextField","FormControl","Box","ThemeProvider","Grid","Typography","CircularProgress","theme","CircularProgressWithLabel","CircularProgressbar","CircularProgressbarWithChildren","buildStyles","easeQuadInOut","AnimatedProgressProvider","ChangingProgressProvider","QuizEnds","calculateCar","distance","carPower","carType","Factor","toFixed","calculateTrain","props","state","calculateFlight","calcScore","co2","score","compareCo2","TravelMode","render","ChoosenTipps","EndScore","circle","padding","value","rotation","strokeLinecap","trailColor","pathColor","textAlign","align","justifyContent","alignItems","width","margin","indexValue","radioHandler","map","tipp","index","option"],"mappings":"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","sourcesContent":["/*\n * @Author: Florian Griesser \n * @Date: 2021-05-29 10:29:35 \n * @Last Modified by: Florian Griesser\n * @Last Modified time: 2021-06-12 08:35:57\n */\n\nimport { Component } from \"react\";\nimport { carValues } from \"../Data/Data\";\nimport FormLabel from '@material-ui/core/FormLabel'\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\nimport { Box, ThemeProvider } from \"@material-ui/core\";\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { CircularProgress } from '@material-ui/core';\n\n\n//import { QuizData } from '../Data/Fragen';\nimport { theme, CircularProgressWithLabel } from \"../stylesUI\";\n\nimport {\n    CircularProgressbar,\n    CircularProgressbarWithChildren,\n    buildStyles\n} from \"react-circular-progressbar\";\nimport \"react-circular-progressbar/dist/styles.css\";\n\n// Animation\nimport { easeQuadInOut } from \"d3-ease\";\nimport AnimatedProgressProvider from \"../Style/AnimatedProgressProvider\";\nimport ChangingProgressProvider from \"../Style/ChangingProgressProvider\";\n\n\nclass QuizEnds extends Component {\n    calculateCar = (distance, carPower, carType) => {\n        //const {distance, carType, carPower} = this.props.state;\n\n        var Factor = carValues[carPower][carType];\n\n\n\n        return (Factor * distance).toFixed(0);\n    }\n\n    calculateTrain = () => {\n        const { distance } = this.props.state;\n\n        return (0.032 * distance).toFixed(0);\n    }\n    calculateFlight = (distance) => {\n\n        return (0.369 * distance).toFixed(0);\n    }\n\n    calcScore = (co2) => {\n        var score = 0;\n\n        score = 75 - co2 * 75 / 2500;\n\n        if (co2 > 2500) {\n            score = 0;\n        }\n\n        return score;\n    }\n\n    compareCo2 = (TravelMode, co2) => {\n\n\n    }\n\n\n    render() {\n        const { score, distance, ChoosenTipps, TravelMode, carPower, carType } = this.props.state;\n        var co2 = 0;\n        var EndScore = score;\n        if (TravelMode === 'Car') {\n            co2 = this.calculateCar(distance, carPower, carType);\n        }\n        else if (TravelMode === 'Train') {\n            co2 = this.calculateTrain(distance);\n        }\n        else if (TravelMode === 'Fligth') {\n            co2 = this.calculateFlight(distance);\n        }\n\n        EndScore = (EndScore + this.calcScore(co2)).toFixed(0);\n        var circle = \"c100 p\" + EndScore + \" big green\";\n\n        return (\n            <div>\n                <Grid container maxwidth=\"false\" align=\"center\" justifyContent=\"center\" alignItems=\"center\" >\n                    <Typography variant=\"h4\">Dein Holirate Rating ist fertig!</Typography>\n                    <div style={{ padding: \"20% 20% 20% 20%\" }}>\n                        <ChangingProgressProvider max-width=\"80%\" values={[0, 20, 40, 60, 80]}>\n                            {(value) => (\n                                <CircularProgressbar\n                                    value={value}\n                                    text={`${value}%`}\n                                    circleRatio={0.75}\n                                    styles={buildStyles({\n                                        rotation: 1 / 2 + 1 / 8,\n                                        strokeLinecap: \"butt\",\n                                        trailColor: \"#eee\",\n                                        pathColor: \"#66bb6a\"\n                                    })}\n                                />\n                            )}\n                        </ChangingProgressProvider>\n                    </div>\n                    <Typography variant=\"h4\">Kilometer: {distance}</Typography>\n                    <Typography variant=\"h4\">C02: {co2} kg</Typography>\n\n                    <Grid container maxwidth=\"false\" align=\"center\" justifyContent=\"center\" alignItems=\"center\" >\n                    <Grid item xs={12} sm={12} md={6} lg={4}\n                        style={{\n                            textAlign: 'center',\n                            align: 'center',\n                            justifyContent: 'center',\n                            alignItems: 'center',\n                            width: '80%',\n                            margin: 'center'\n                        }}\n                    >\n                        <FormControl component=\"fieldset\" >\n                            <FormLabel component=\"legend\" aligncontent=\"center\">Hier noch ein paar Tipps für deine Reise:</FormLabel>\n                            <Box name=\"quiz\" value={this.indexValue} onChange={this.radioHandler}>\n                                {\n                                    ChoosenTipps.map((tipp, index) => (  //for each option, new paragrap\n                                        <FormControlLabel value={index + 1}\n                                            key={index + 1}//for dumb unique key\n                                            control={<Box\n                                                color=\"primary\"\n                                                 />}\n                                            label={option} />\n                                    ))\n                                }\n                            </Box>\n                        </FormControl>\n                    </Grid>\n                </Grid>\n\n\n                    <h4>Hier noch ein paar Tipps für deine Reise</h4>\n                    <br></br>\n                    <ul>\n\n                        {ChoosenTipps.map((tipp, index) => (\n                            <li className='options-container'\n                                key={index}>\n                                <p className=\"options-text\"> {tipp}</p>\n                            </li>\n                        ))}\n                    </ul>\n\n                </Grid>\n\n            </div>\n        )\n    };\n}\n\nexport default QuizEnds;"]},"metadata":{},"sourceType":"module"}