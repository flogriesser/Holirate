{"ast":null,"code":"var _jsxFileName = \"/home/flo/Projects/HolirateFolder/react/Holirate/src/components/Quiz.js\";\nimport React, { Component } from 'react'; //import {QuizData} from './QuizData';\n\nimport { QuizData } from './Data/Fragen';\n/*import '../App.css'*/\n\nimport './circle.css'; //import {initialize, notFound, foundYou, calcRoute} from './Maps/maps';\n\nimport { LoadScript } from \"@react-google-maps/api\";\nimport Map from \"./Maps/maps\";\nimport Test from \"./Data/State\"; //import singlequestion from './SingleQuestion/singleQuestion';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst lib = [\"places\"];\nconst key = \"AIzaSyAF6K0mCOn8PxRcsTPBapCtXyr_zZ6OWGk\"; // PUT GMAP API KEY HERE\n\nvar distance = 0;\n\nclass singlequestion extends Component {\n  render() {\n    const question = this.props.quizQuestions;\n    const options = this.props.quizOptions;\n    const currentIndex = this.props.datafromQuiz;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"TEST\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nclass Quiz extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      userAnswer: null,\n      //current users answer\n      type: \"single\",\n      //question Type\n      currentIndex: 0,\n      //current questions index\n      options: [],\n      //the options\n      values: null,\n      //Values of Single or Multiple choice\n      tipps: null,\n      ChoosenTipps: [],\n      quizEnd: false,\n      score: 0,\n      disabled: true,\n\n      /*distance: 0,*/\n      TravelMode: 'DRIVING',\n      co2: 0,\n      directions: null,\n      bounds: null\n    };\n\n    this.loadQuiz = () => {\n      const {\n        currentIndex\n      } = this.state; //get the current index\n\n      this.setState(() => {\n        return {\n          question: QuizData[currentIndex].question,\n          type: QuizData[currentIndex].type,\n          options: QuizData[currentIndex].options,\n          values: QuizData[currentIndex].values,\n          tipps: QuizData[currentIndex].tipps\n          /*distance: 0,*/\n\n        };\n      });\n    };\n\n    this.nextQuestionHander = () => {\n      const {\n        userAnswer,\n        score\n      } = this.state;\n      console.log(Test.test);\n      this.setState({\n        score: score + userAnswer,\n        currentIndex: this.state.currentIndex + 1\n      });\n    };\n\n    this.afterMap = () => {\n      //var distanceKM = document.getElementById(\"Distance\").value;\n      //console.log(distanceKM)\n      console.log(distance);\n      this.setState({\n        currentIndex: this.state.currentIndex + 1 //distance: distanceKM\n\n      });\n    };\n\n    this.checkAnswer = (answer, index) => {\n      const {\n        currentIndex,\n        score\n      } = this.state;\n      var nextQuestion = 1;\n\n      if (QuizData[currentIndex].options[index] === \"Flugzeug\") {\n        console.log(\"1. Flugzeug\");\n        nextQuestion = 2;\n      } else if (QuizData[currentIndex].options[index] === \"Auto\" || QuizData[currentIndex].options[index] === \"Fahrad\" || QuizData[currentIndex].options[index] === \"Zug\") {\n        console.log(QuizData[currentIndex].options[index]);\n        nextQuestion = 1;\n      } else {\n        this.setState({\n          disabled: false,\n          score: score + QuizData[currentIndex].values[index]\n        });\n      }\n\n      this.state.ChoosenTipps.push(QuizData[currentIndex].tipps[index]);\n      console.log(Test.testNumber);\n      Test.testNumber = Test.testNumber + 1;\n\n      if (currentIndex === QuizData.length - 1) {\n        this.setState({\n          quizEnd: true\n        });\n      } else {\n        this.setState({\n          currentIndex: this.state.currentIndex + nextQuestion\n        });\n      }\n    };\n\n    this.checkNumber = index => {\n      const {\n        currentIndex\n      } = this.state;\n      console.log(currentIndex);\n      console.log(Test.test);\n      console.log(Test.testNumber);\n      this.setState({\n        disabled: false,\n        currentIndex: this.state.currentIndex + 1\n      });\n    };\n\n    this.finishHandler = () => {\n      if (this.state.currentIndex === QuizData.length - 1) {\n        this.setState({\n          quizEnd: true\n        });\n      }\n    };\n  }\n\n  //Load the quiz once the component mounts\n  componentDidMount() {\n    this.loadQuiz();\n  } //Update the component\n\n\n  componentDidUpdate(prevProps, prevState) {\n    const {\n      currentIndex\n    } = this.state;\n\n    if (this.state.currentIndex !== prevState.currentIndex) {\n      this.setState(() => {\n        return {\n          disabled: true,\n          type: QuizData[currentIndex].type,\n          question: QuizData[currentIndex].question,\n          options: QuizData[currentIndex].options,\n          values: QuizData[currentIndex].values\n        };\n      });\n    }\n  } //Check the answer\n\n\n  /******************************************************************** */\n\n  /*                 RENDER                                             */\n\n  /******************************************************************** */\n  render() {\n    const {\n      question,\n      options,\n      currentIndex,\n      quizEnd,\n      ChoosenTipps,\n      type\n    } = this.state; //get the current state       \n\n    if (quizEnd) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Dein Holirate Rating ist fertig!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"circle-wrap\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"circle\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mask full\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"fill\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mask half\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"fill\",\n                style: {\n                  transform: `rotate(${360 * this.state.score / 100}deg)`\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inside-circle\",\n              children: [this.state.score, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Kilometer: \", distance]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [this.state.score, \" points\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Hier noch ein paar Tipps f\\xFCr deine Reise\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: ChoosenTipps.map((tipp, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"options-container\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"options-text\",\n              children: [\" \", tipp]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 33\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }, this);\n    }\n\n    if (type === \"single\") {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"singleQuestion\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 17\n      }, this);\n    } else if (type === \"number\") {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"hud\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"hud-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"hud-prefix\",\n              children: [\"Question \", currentIndex + 1, \" / \", QuizData.length]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"progressBar\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"progressBarFull\",\n                style: {\n                  width: `${currentIndex / QuizData.length * 100}%`\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"hud-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"hud-prefix\",\n              children: \"Score\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"hud-main-text\",\n              id: \"score\",\n              children: this.state.score\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 21\n        }, this), options.map((option, index) =>\n        /*#__PURE__*/\n        //for each option, new paragrap\n        _jsxDEV(\"div\", {\n          className: `options-container`,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"options-text\",\n            children: option\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"OwnInput\",\n            type: \"number\",\n            id: index,\n            name: \"quantity\",\n            min: \"1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 33\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 29\n        }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"OwnSubmit\",\n          onClick: () => this.checkNumber(),\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 17\n      }, this);\n    } else if (type === \"transport\") {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"hud\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"hud-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"hud-prefix\",\n              children: [\"Question \", currentIndex + 1, \" / \", QuizData.length]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"progressBar\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"progressBarFull\",\n                style: {\n                  width: `${currentIndex / QuizData.length * 100}%`\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"hud-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"hud-prefix\",\n              children: \"Score\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"hud-main-text\",\n              id: \"score\",\n              children: this.state.score\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(LoadScript, {\n          googleMapsApiKey: key,\n          libraries: lib,\n          children: /*#__PURE__*/_jsxDEV(Map, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"OwnSubmit\",\n          onClick: () => this.afterMap(),\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 17\n      }, this);\n    }\n  }\n  /******************************************************************** */\n\n  /*                 RENDER                                             */\n\n  /******************************************************************** */\n\n\n}\n\nQuiz.setDistance = distanceKM => {\n  distance = distanceKM;\n};\n\nexport default Quiz;","map":{"version":3,"sources":["/home/flo/Projects/HolirateFolder/react/Holirate/src/components/Quiz.js"],"names":["React","Component","QuizData","LoadScript","Map","Test","lib","key","distance","singlequestion","render","question","props","quizQuestions","options","quizOptions","currentIndex","datafromQuiz","Quiz","state","userAnswer","type","values","tipps","ChoosenTipps","quizEnd","score","disabled","TravelMode","co2","directions","bounds","loadQuiz","setState","nextQuestionHander","console","log","test","afterMap","checkAnswer","answer","index","nextQuestion","push","testNumber","length","checkNumber","finishHandler","componentDidMount","componentDidUpdate","prevProps","prevState","transform","map","tipp","width","option","setDistance","distanceKM"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n//import {QuizData} from './QuizData';\nimport { QuizData } from './Data/Fragen';\n/*import '../App.css'*/\nimport './circle.css';\n//import {initialize, notFound, foundYou, calcRoute} from './Maps/maps';\nimport { LoadScript } from \"@react-google-maps/api\";\nimport Map from \"./Maps/maps\";\nimport Test from \"./Data/State\";\n//import singlequestion from './SingleQuestion/singleQuestion';\n\n\nconst lib = [\"places\"];\nconst key = \"AIzaSyAF6K0mCOn8PxRcsTPBapCtXyr_zZ6OWGk\"; // PUT GMAP API KEY HERE\nvar distance = 0;\n\nclass singlequestion extends Component{\n\n    render(){\n        const question = this.props.quizQuestions\n        const options = this.props.quizOptions\n        const currentIndex = this.props.datafromQuiz\n    return (\n        <div>\n            <h1>TEST</h1>\n        </div >\n    )\n        }\n}\n\n\n\nclass Quiz extends Component {\n\n    state = {\n        userAnswer: null,    //current users answer\n        type: \"single\",         //question Type\n        currentIndex: 0,     //current questions index\n        options: [],        //the options\n        values: null,         //Values of Single or Multiple choice\n        tipps: null,\n        ChoosenTipps: [],\n        quizEnd: false,\n        score: 0,\n        disabled: true,\n        /*distance: 0,*/\n        TravelMode: 'DRIVING',\n        co2: 0,\n\n        directions: null,\n        bounds: null\n    }\n\n\n    //Component that holds the current quiz\n    loadQuiz = () => {\n        const { currentIndex } = this.state //get the current index\n        this.setState(() => {\n            return {\n                question: QuizData[currentIndex].question,\n                type: QuizData[currentIndex].type,\n                options: QuizData[currentIndex].options,\n                values: QuizData[currentIndex].values,\n                tipps: QuizData[currentIndex].tipps,\n                 /*distance: 0,*/\n            }\n        }\n        )\n    }\n    \n    static setDistance = (distanceKM) => {\n        distance = distanceKM;\n    }\n\n    //Handles Click event for the next button\n    nextQuestionHander = () => {\n        const { userAnswer, score } = this.state\n        console.log(Test.test);\n        this.setState({\n            score: score + userAnswer,\n            currentIndex: this.state.currentIndex + 1\n        })\n    }\n\n    afterMap = () => {\n        //var distanceKM = document.getElementById(\"Distance\").value;\n        //console.log(distanceKM)\n        console.log(distance);\n        this.setState({\n            currentIndex: this.state.currentIndex + 1,\n            //distance: distanceKM\n        })\n    }\n\n    //Load the quiz once the component mounts\n    componentDidMount() {\n        this.loadQuiz();\n    }\n\n    //Update the component\n    componentDidUpdate(prevProps, prevState) {\n        const { currentIndex } = this.state;\n        if (this.state.currentIndex !== prevState.currentIndex) {\n            this.setState(() => {\n                return {\n                    disabled: true,\n                    type: QuizData[currentIndex].type,\n                    question: QuizData[currentIndex].question,\n                    options: QuizData[currentIndex].options,\n                    values: QuizData[currentIndex].values\n\n                }\n            });\n\n        }\n    }\n\n    //Check the answer\n    checkAnswer = (answer, index) => {\n        const { currentIndex, score } = this.state;\n        var nextQuestion = 1;\n        if (QuizData[currentIndex].options[index] === \"Flugzeug\") {\n            console.log(\"1. Flugzeug\");\n            nextQuestion = 2;\n        } else if (QuizData[currentIndex].options[index] === \"Auto\" ||\n            QuizData[currentIndex].options[index] === \"Fahrad\" ||\n            QuizData[currentIndex].options[index] === \"Zug\") {\n            console.log(QuizData[currentIndex].options[index]);\n            nextQuestion = 1;\n        } else {\n            this.setState({\n                disabled: false,\n                score: score + QuizData[currentIndex].values[index]\n            })\n        }\n        this.state.ChoosenTipps.push(QuizData[currentIndex].tipps[index]);\n        \n        console.log(Test.testNumber);\n        Test.testNumber = Test.testNumber +1;\n\n        if (currentIndex === QuizData.length - 1) {\n            this.setState({\n                quizEnd: true\n            })\n        } else {\n            this.setState({\n                currentIndex: this.state.currentIndex + nextQuestion\n            })\n        }\n    }\n\n    checkNumber = (index) => {\n        const { currentIndex } = this.state;\n        console.log(currentIndex);\n        \n        console.log(Test.test);\n        console.log(Test.testNumber);\n\n        this.setState({\n            disabled: false,\n            currentIndex: this.state.currentIndex + 1\n        })\n    }\n\n    //Responds to the click of the finish button\n    finishHandler = () => {\n        if (this.state.currentIndex === QuizData.length - 1) {\n            this.setState({\n                quizEnd: true\n            })\n        }\n\n    }\n\n\n/******************************************************************** */\n/*                 RENDER                                             */\n/******************************************************************** */\n\n    render() {\n        const { question, options, currentIndex, quizEnd, ChoosenTipps, type } = this.state //get the current state       \n        if (quizEnd) {\n\n            return (\n                <div>\n                    <h1>Dein Holirate Rating ist fertig!</h1>\n                    <div className=\"circle-wrap\">\n                        <div className=\"circle\">\n\n                            <div className=\"mask full\">\n                                <div className=\"fill\" ></div>\n                            </div>\n\n                            <div className=\"mask half\">\n                                <div className=\"fill\" style={{ transform: `rotate(${360 * this.state.score / 100}deg)` }}></div>\n                            </div>\n\n                            <div className=\"inside-circle\">\n                                {this.state.score}%\n                            </div>\n                        </div>\n                    </div>\n                    <h2>Kilometer: {distance}</h2>\n                    <h1>{this.state.score} points</h1>\n                    <br></br>\n                    <h4>Hier noch ein paar Tipps für deine Reise</h4>\n                    <br></br>\n                    <ul>\n\n                        {ChoosenTipps.map((tipp, index) => (\n                            <li className='options-container'\n                                key={index}>\n                                <p className=\"options-text\"> {tipp}</p>\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n            )\n        }\n        if(type === \"single\") {\n            return(\n                <div>\n                    <singleQuestion />\n                </div>\n            )\n        } else if (type === \"number\") {\n            return (\n                <div>\n                    <div id=\"hud\">\n                        <div id=\"hud-item\">\n                            <p className=\"hud-prefix\">\n                                Question {currentIndex + 1} / {QuizData.length}\n                            </p>\n                            <div id=\"progressBar\">\n                                <div id=\"progressBarFull\" style={{ width: `${(currentIndex / QuizData.length) * 100}%` }}></div>\n                            </div>\n                        </div>\n                        <div id=\"hud-item\">\n                            <p className=\"hud-prefix\">\n                                Score\n        </p>\n                            <h1 className=\"hud-main-text\" id=\"score\">\n                                {this.state.score}\n                            </h1>\n                        </div>\n                    </div>\n                    <br></br>\n                    <h2>{question}</h2>\n                    {\n                        options.map((option, index) => (  //for each option, new paragrap\n                            <div key={index} className={`options-container`}>\n                                <p className=\"options-text\">{option}</p>\n                                <input className=\"OwnInput\" type=\"number\" id={index} name=\"quantity\" min=\"1\" ></input>\n                            </div>\n                        ))\n                    }\n                    <br></br>\n                    <div className=\"OwnSubmit\"\n                        onClick={() => this.checkNumber()}>\n                        Submit</div>\n                </div >)\n        } else if (type === \"transport\") {\n            return (\n                <div>\n                    <div id=\"hud\">\n                        <div id=\"hud-item\">\n                            <p className=\"hud-prefix\">\n                                Question {currentIndex + 1} / {QuizData.length}\n                            </p>\n                            <div id=\"progressBar\">\n                                <div id=\"progressBarFull\" style={{ width: `${(currentIndex / QuizData.length) * 100}%` }}></div>\n                            </div>\n                        </div>\n                        <div id=\"hud-item\">\n                            <p className=\"hud-prefix\">\n                                Score\n    </p>\n                            <h1 className=\"hud-main-text\" id=\"score\">\n                                {this.state.score}\n                            </h1>\n                        </div>\n                    </div>\n                    <br></br>\n                    <h2>{question}</h2>\n                    <br></br>\n                    <LoadScript googleMapsApiKey={key} libraries={lib}>\n        <Map />\n      </LoadScript>\n      <br></br>\n      <div className=\"OwnSubmit\"\n                            onClick={() => this.afterMap()}>\n                        Submit</div>\n                </div > )\n        }\n    }\n\n/******************************************************************** */\n/*                 RENDER                                             */\n/******************************************************************** */\n}\n\n\nexport default Quiz;"]},"metadata":{},"sourceType":"module"}