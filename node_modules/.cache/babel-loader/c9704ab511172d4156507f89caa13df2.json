{"ast":null,"code":"'use strict';\n/**\n * Return the mime type for the given `str`.\n *\n * @param {String} str\n * @return {String}\n * @api private\n */\n\nexports.type = str => str.split(/ *; */).shift();\n/**\n * Return header field parameters.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\n\nexports.params = str => str.split(/ *; */).reduce((obj, str) => {\n  const parts = str.split(/ *= */);\n  const key = parts.shift();\n  const val = parts.shift();\n  if (key && val) obj[key] = val;\n  return obj;\n}, {});\n/**\n * Parse Link header fields.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\n\nexports.parseLinks = str => str.split(/ *, */).reduce((obj, str) => {\n  const parts = str.split(/ *; */);\n  const url = parts[0].slice(1, -1);\n  const rel = parts[1].split(/ *= */)[1].slice(1, -1);\n  obj[rel] = url;\n  return obj;\n}, {});\n/**\n * Strip content related fields from `header`.\n *\n * @param {Object} header\n * @return {Object} header\n * @api private\n */\n\n\nexports.cleanHeader = (header, changesOrigin) => {\n  delete header['content-type'];\n  delete header['content-length'];\n  delete header['transfer-encoding'];\n  delete header['host']; // secuirty\n\n  if (changesOrigin) {\n    delete header['authorization'];\n    delete header['cookie'];\n  }\n\n  return header;\n};","map":{"version":3,"sources":["/home/flo/Projects/react/Holirate/node_modules/superagent/lib/utils.js"],"names":["exports","type","str","split","shift","params","reduce","obj","parts","key","val","parseLinks","url","slice","rel","cleanHeader","header","changesOrigin"],"mappings":"AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAA,OAAO,CAACC,IAAR,GAAeC,GAAG,IAAIA,GAAG,CAACC,KAAJ,CAAU,OAAV,EAAmBC,KAAnB,EAAtB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAJ,OAAO,CAACK,MAAR,GAAiBH,GAAG,IAAIA,GAAG,CAACC,KAAJ,CAAU,OAAV,EAAmBG,MAAnB,CAA0B,CAACC,GAAD,EAAML,GAAN,KAAc;AAC9D,QAAMM,KAAK,GAAGN,GAAG,CAACC,KAAJ,CAAU,OAAV,CAAd;AACA,QAAMM,GAAG,GAAGD,KAAK,CAACJ,KAAN,EAAZ;AACA,QAAMM,GAAG,GAAGF,KAAK,CAACJ,KAAN,EAAZ;AAEA,MAAIK,GAAG,IAAIC,GAAX,EAAgBH,GAAG,CAACE,GAAD,CAAH,GAAWC,GAAX;AAChB,SAAOH,GAAP;AACD,CAPuB,EAOrB,EAPqB,CAAxB;AASA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAP,OAAO,CAACW,UAAR,GAAqBT,GAAG,IAAIA,GAAG,CAACC,KAAJ,CAAU,OAAV,EAAmBG,MAAnB,CAA0B,CAACC,GAAD,EAAML,GAAN,KAAc;AAClE,QAAMM,KAAK,GAAGN,GAAG,CAACC,KAAJ,CAAU,OAAV,CAAd;AACA,QAAMS,GAAG,GAAGJ,KAAK,CAAC,CAAD,CAAL,CAASK,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAAZ;AACA,QAAMC,GAAG,GAAGN,KAAK,CAAC,CAAD,CAAL,CAASL,KAAT,CAAe,OAAf,EAAwB,CAAxB,EAA2BU,KAA3B,CAAiC,CAAjC,EAAoC,CAAC,CAArC,CAAZ;AACAN,EAAAA,GAAG,CAACO,GAAD,CAAH,GAAWF,GAAX;AACA,SAAOL,GAAP;AACD,CAN2B,EAMzB,EANyB,CAA5B;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAP,OAAO,CAACe,WAAR,GAAsB,CAACC,MAAD,EAASC,aAAT,KAA2B;AAC/C,SAAOD,MAAM,CAAC,cAAD,CAAb;AACA,SAAOA,MAAM,CAAC,gBAAD,CAAb;AACA,SAAOA,MAAM,CAAC,mBAAD,CAAb;AACA,SAAOA,MAAM,CAAC,MAAD,CAAb,CAJ+C,CAK/C;;AACA,MAAIC,aAAJ,EAAmB;AACjB,WAAOD,MAAM,CAAC,eAAD,CAAb;AACA,WAAOA,MAAM,CAAC,QAAD,CAAb;AACD;;AACD,SAAOA,MAAP;AACD,CAXD","sourcesContent":["'use strict';\n\n/**\n * Return the mime type for the given `str`.\n *\n * @param {String} str\n * @return {String}\n * @api private\n */\n\nexports.type = str => str.split(/ *; */).shift();\n\n/**\n * Return header field parameters.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nexports.params = str => str.split(/ *; */).reduce((obj, str) => {\n  const parts = str.split(/ *= */);\n  const key = parts.shift();\n  const val = parts.shift();\n\n  if (key && val) obj[key] = val;\n  return obj;\n}, {});\n\n/**\n * Parse Link header fields.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nexports.parseLinks = str => str.split(/ *, */).reduce((obj, str) => {\n  const parts = str.split(/ *; */);\n  const url = parts[0].slice(1, -1);\n  const rel = parts[1].split(/ *= */)[1].slice(1, -1);\n  obj[rel] = url;\n  return obj;\n}, {});\n\n/**\n * Strip content related fields from `header`.\n *\n * @param {Object} header\n * @return {Object} header\n * @api private\n */\n\nexports.cleanHeader = (header, changesOrigin) => {\n  delete header['content-type'];\n  delete header['content-length'];\n  delete header['transfer-encoding'];\n  delete header['host'];\n  // secuirty\n  if (changesOrigin) {\n    delete header['authorization'];\n    delete header['cookie'];\n  }\n  return header;\n};\n"]},"metadata":{},"sourceType":"script"}