{"ast":null,"code":"var _jsxFileName = \"/home/flo/Projects/react/holirate/src/components/Maps/maps.js\";\n\n/*global google*/\n//import ReactDOM from \"react-dom\";\nimport React from \"react\";\nimport { GoogleMap\n/*StandaloneSearchBox,*/\n, DirectionsRenderer } from \"@react-google-maps/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultLocation = {\n  lat: 40.756795,\n  lng: -73.954298\n};\nlet destination = {};\nlet origin = {};\nlet directionsService;\n\nclass Map extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      directions: null,\n      bounds: null\n    };\n\n    this.onMapLoad = map => {\n      directionsService = new google.maps.DirectionsService(); //load default origin and destination\n      //this.changeDirection(origin, destination);\n    };\n\n    this.onSBLoad = ref => {\n      this.searchBox = ref;\n    };\n\n    this.onPlacesChanged = () => {\n      //pass the new place location as the origin\n      this.changeDirection(this.searchBox.getPlaces()[0].geometry.location, destination);\n    };\n\n    this.changeDirection = (origin, destination) => {\n      directionsService.route({\n        origin: origin,\n        destination: destination,\n        travelMode: google.maps.TravelMode.DRIVING\n      }, (result, status) => {\n        if (status === google.maps.DirectionsStatus.OK) {\n          //changing the state of directions to the result of direction service\n          this.setState({\n            directions: result\n          });\n        } else {\n          console.error(`error fetching directions ${result}`);\n        }\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `options-container`,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"options-text\",\n          children: \"Startpunkt\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"OwnInput\",\n          type: \"text\",\n          id: \"Start\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 39\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `options-container`,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"options-text\",\n          children: \"Reiseziel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"OwnInput\",\n          type: \"text\",\n          id: \"Stop\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"OwnSubmit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(GoogleMap, {\n        center: defaultLocation,\n        zoom: 5,\n        onLoad: map => this.onMapLoad(map),\n        mapContainerStyle: {\n          height: \"40vh\",\n          width: \"80vw\"\n        },\n        children: this.state.directions !== null && /*#__PURE__*/_jsxDEV(DirectionsRenderer, {\n          directions: this.state.directions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default Map;","map":{"version":3,"sources":["/home/flo/Projects/react/holirate/src/components/Maps/maps.js"],"names":["React","GoogleMap","DirectionsRenderer","defaultLocation","lat","lng","destination","origin","directionsService","Map","Component","state","directions","bounds","onMapLoad","map","google","maps","DirectionsService","onSBLoad","ref","searchBox","onPlacesChanged","changeDirection","getPlaces","geometry","location","route","travelMode","TravelMode","DRIVING","result","status","DirectionsStatus","OK","setState","console","error","render","height","width"],"mappings":"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","sourcesContent":["/*global google*/\n//import ReactDOM from \"react-dom\";\nimport React from \"react\";\n\nimport {\n  GoogleMap,\n  /*StandaloneSearchBox,*/\n  DirectionsRenderer\n} from \"@react-google-maps/api\";\n\nconst defaultLocation = { lat: 40.756795, lng: -73.954298 };\nlet destination = { };\nlet origin = {  };\n\n\nlet directionsService;\nclass Map extends React.Component {\n  state = {\n    directions: null,\n    bounds: null\n  };\n\n  onMapLoad = map => {\n    directionsService = new google.maps.DirectionsService();\n    //load default origin and destination\n    //this.changeDirection(origin, destination);\n  };\n\n  //function that is called when SearchBox has loaded and assigned ref to this.searchbox  to get the searchbox object\n  onSBLoad = ref => {\n    this.searchBox = ref;\n  };\n\n  onPlacesChanged = () => {\n    //pass the new place location as the origin\n    this.changeDirection(\n      this.searchBox.getPlaces()[0].geometry.location,\n      destination\n    );\n  };\n\n  //function that is calling the directions service\n  changeDirection = (origin, destination) => {\n    directionsService.route(\n      {\n        origin: origin,\n        destination: destination,\n        travelMode: google.maps.TravelMode.DRIVING\n      },\n      (result, status) => {\n        if (status === google.maps.DirectionsStatus.OK) {\n          //changing the state of directions to the result of direction service\n          this.setState({\n            directions: result\n          });\n        } else {\n          console.error(`error fetching directions ${result}`);\n        }\n      }\n    );\n  };\n\n  render() {\n    return (\n        <div>\n                                      <div className={`options-container`}>\n                                <p className=\"options-text\">Startpunkt</p>\n                                <input className=\"OwnInput\" type=\"text\" id=\"Start\" ></input>\n                            </div>\n                            <div className={`options-container`}>\n                                <p className=\"options-text\">Reiseziel</p>\n                                <input className=\"OwnInput\" type=\"text\" id=\"Stop\" ></input>\n                            </div>\n                            <div className=\"OwnSubmit\">\n                        Submit</div>\n                        <br></br>\n\n          <GoogleMap\n            center={defaultLocation}\n            zoom={5}\n            onLoad={map => this.onMapLoad(map)}\n            mapContainerStyle={{ height: \"40vh\", width: \"80vw\" }}\n          >\n            {this.state.directions !== null && (\n              <DirectionsRenderer directions={this.state.directions} />\n            )}\n          </GoogleMap>\n        </div>\n    );\n  }\n}\n\nexport default Map;"]},"metadata":{},"sourceType":"module"}