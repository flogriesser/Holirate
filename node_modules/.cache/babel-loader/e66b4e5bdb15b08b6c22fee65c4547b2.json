{"ast":null,"code":"var _jsxFileName = \"/home/flo/Projects/react/Holirate/src/components/stylesUI.js\";\nimport { withStyles, createTheme } from \"@material-ui/core/styles\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from '@material-ui/core/Typography';\nimport { QuizData } from './Data/Fragen';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const theme = createTheme({\n  palette: {\n    primary: {\n      light: '#47824a',\n      main: '#66bb6a',\n      dark: '#84c887',\n      contrastText: '#fff'\n    },\n    secondary: {\n      main: \"#F1B929\"\n    } // This is just green.A700 as hex.\n\n  },\n  overrides: {\n    MuiButton: {\n      // Name of the rule\n      text: {\n        // Some CSS\n        background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n        borderRadius: 3,\n        border: 0,\n        color: 'white',\n        height: 48,\n        padding: '0 30px',\n        boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)'\n      }\n    }\n  }\n});\nexport const BorderLinearProgress = withStyles(theme => ({\n  root: {\n    height: 20,\n    borderRadius: 10\n  },\n  colorPrimary: {\n    backgroundColor: theme.palette.grey[theme.palette.type === \"light\" ? 200 : 700]\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: \"primary\"\n  }\n}))(LinearProgress);\nexport function ScoreHeader(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      align: \"center\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: /*#__PURE__*/_jsxDEV(BorderLinearProgress, {\n          variant: \"determinate\",\n          value: props.currentIndex / QuizData.length * 100\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          color: \"primary\",\n          gutterBottom: true,\n          children: \"Score\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h3\",\n          color: \"primary\",\n          gutterBottom: true,\n          children: props.score\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n}\n/*\nconst classes = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: \"center\",\n        color: \"blue\"\n    }\n}));\n*/\n\n_c = ScoreHeader;\n\nvar _c;\n\n$RefreshReg$(_c, \"ScoreHeader\");","map":{"version":3,"sources":["/home/flo/Projects/react/Holirate/src/components/stylesUI.js"],"names":["withStyles","createTheme","LinearProgress","Grid","Typography","QuizData","theme","palette","primary","light","main","dark","contrastText","secondary","overrides","MuiButton","text","background","borderRadius","border","color","height","padding","boxShadow","BorderLinearProgress","root","colorPrimary","backgroundColor","grey","type","bar","ScoreHeader","props","currentIndex","length","score"],"mappings":"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","sourcesContent":["import {  withStyles, createTheme } from \"@material-ui/core/styles\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Grid from \"@material-ui/core/Grid\"\nimport Typography from '@material-ui/core/Typography';\n\n\nimport { QuizData } from './Data/Fragen';\n\nexport const theme = createTheme({\n    palette: {\n        primary: {\n            light: '#47824a',\n            main: '#66bb6a',\n            dark: '#84c887',\n            contrastText: '#fff',\n          },\n      secondary: { main: \"#F1B929\" }, // This is just green.A700 as hex.\n    },\n    overrides: {\n        MuiButton: {\n            // Name of the rule\n            text: {\n              // Some CSS\n              background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n              borderRadius: 3,\n              border: 0,\n              color: 'white',\n              height: 48,\n              padding: '0 30px',\n              boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n            },\n          },\n      }\n  });\n\nexport const BorderLinearProgress = withStyles((theme) => ({\n    root: {\n        height: 20,\n        borderRadius: 10\n        \n    },\n    colorPrimary: {\n        backgroundColor:\n            theme.palette.grey[theme.palette.type === \"light\" ? 200 : 700]\n    },\n    bar: {\n        borderRadius: 5,\n        backgroundColor: \"primary\"\n    }\n}))(LinearProgress);\n\nexport function ScoreHeader(props) {\n    return (\n        <div>\n            <Grid container spacing={3} align=\"center\" justifyContent=\"center\" alignItems=\"center\" >\n                <Grid item xs={6}>\n                    <BorderLinearProgress variant=\"determinate\" value={(props.currentIndex / QuizData.length) * 100} />\n                </Grid>\n                <Grid item xs={6}>\n                    <Typography variant=\"h5\" color=\"primary\" gutterBottom>\n                        Score\n                    </Typography>\n                    <Typography variant=\"h3\" color=\"primary\" gutterBottom>\n                        {props.score}\n                    </Typography>\n                </Grid>\n            </Grid>\n            <br></br>\n        </div>\n\n    );\n}\n\n/*\nconst classes = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: \"center\",\n        color: \"blue\"\n    }\n}));\n*/"]},"metadata":{},"sourceType":"module"}