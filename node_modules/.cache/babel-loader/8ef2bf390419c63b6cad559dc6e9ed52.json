{"ast":null,"code":"var _jsxFileName = \"/home/flo/Projects/react/Holirate/src/components/SingleQuestion/singleQuestion.js\";\n\n/*\n * @Author: Florian Griesser \n * @Date: 2021-05-29 17:23:53 \n * @Last Modified by: Florian Griesser\n * @Last Modified time: 2021-05-29 17:35:49\n */\nimport React from \"react\";\nimport Radio from '@material-ui/core/Radio';\nimport Button from '@material-ui/core/Button';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport '@fontsource/roboto';\nimport { ScoreHeader, theme, CircularProgressWithLabel } from \"../stylesUI\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport { QuizData } from '../Data/Fragen';\nimport { ThemeProvider } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Singlequestion extends React.Component {\n  constructor() {\n    super();\n\n    this.forceUpdateHandler = () => {\n      this.forceUpdate();\n    };\n\n    this.radioHandler = event => {\n      //console.log(event.target.value);\n      var test = parseInt(event.target.value);\n      this.indexValue = test; //console.log(test);\n\n      this.forceUpdateHandler();\n    };\n\n    this.handleSubmit = () => {\n      if (this.indexValue != null) {\n        const {\n          currentIndex\n        } = this.props.state;\n        var Travelmode = null;\n        var points = 0;\n        var index = this.indexValue - 1;\n\n        if (QuizData[currentIndex].options[index] === \"Flugzeug\") {\n          Travelmode = \"Fligth\";\n        } else if (QuizData[currentIndex].options[index] === \"Auto\") {\n          Travelmode = \"Car\";\n        } else if (QuizData[currentIndex].options[index] === \"Zug\") {\n          Travelmode = \"Train\";\n        } else {\n          points = QuizData[currentIndex].values[index];\n        }\n\n        this.indexValue = null;\n        this.props.callbackSingleQuestion(index, points, Travelmode);\n      }\n    };\n\n    this.forceUpdateHandler = this.forceUpdateHandler.bind(this);\n    this.indexValue = null;\n  }\n\n  /*checkAnswer*/\n  render() {\n    const {\n      question,\n      options,\n      currentIndex,\n      score\n    } = this.props.state; //console.log(\"indexValue\");\n    //console.log(this.indexValue);\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(ScoreHeader, {\n        score: score,\n        currentIndex: currentIndex\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        maxwidth: \"false\",\n        align: \"center\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 12,\n          md: 6,\n          lg: 4,\n          style: {\n            textAlign: 'center',\n            align: 'center',\n            justifyContent: 'center',\n            alignItems: 'center',\n            width: '80%',\n            margin: 'center'\n          },\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            component: \"fieldset\",\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              component: \"legend\",\n              aligncontent: \"center\",\n              children: question\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n              name: \"quiz\",\n              value: this.indexValue,\n              onChange: this.radioHandler,\n              children: options.map((option, index) =>\n              /*#__PURE__*/\n              //for each option, new paragrap\n              _jsxDEV(FormControlLabel, {\n                value: index + 1,\n                //for dumb unique key\n                control: /*#__PURE__*/_jsxDEV(Radio, {\n                  color: \"primary\",\n                  checked: this.indexValue === index + 1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 54\n                }, this),\n                label: option\n              }, index + 1, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ThemeProvider, {\n              theme: theme,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                onClick: this.handleSubmit,\n                children: \"Next\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          position: \"relative\",\n          display: \"inline-flex\",\n          children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n            variant: \"determine\",\n            color: \"primary\",\n            value: 40,\n            size: \"60%\",\n            thickness: 6\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            top: 0,\n            left: 0,\n            bottom: 0,\n            right: 0,\n            position: \"absolute\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"caption\",\n              component: \"div\",\n              color: \"textSecondary\",\n              children: `${Math.round(props.value)}%`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CircularProgress, {\n          variant: \"determinate\",\n          value: 40,\n          size: \"60%\",\n          thickness: 6\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Singlequestion;\n/*\n                <Grid item xs={12} sm={12} md={6} lg={4}\n                    style={{\n                        textAlign: 'center',\n                        align: 'center',\n                        justifyContent: 'center',\n                        alignItems: 'center',\n                        width: '80%',\n                        margin: 'center'\n                    }}\n                >\n                    <CircularProgressWithLabel  value={50} />\n                </Grid>\n*/","map":{"version":3,"sources":["/home/flo/Projects/react/Holirate/src/components/SingleQuestion/singleQuestion.js"],"names":["React","Radio","Button","RadioGroup","FormControlLabel","FormControl","FormLabel","ScoreHeader","theme","CircularProgressWithLabel","CircularProgress","Grid","Box","QuizData","ThemeProvider","Singlequestion","Component","constructor","forceUpdateHandler","forceUpdate","radioHandler","event","test","parseInt","target","value","indexValue","handleSubmit","currentIndex","props","state","Travelmode","points","index","options","values","callbackSingleQuestion","bind","render","question","score","textAlign","align","justifyContent","alignItems","width","margin","map","option","Math","round"],"mappings":"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","sourcesContent":["/*\n * @Author: Florian Griesser \n * @Date: 2021-05-29 17:23:53 \n * @Last Modified by: Florian Griesser\n * @Last Modified time: 2021-05-29 17:35:49\n */\n\nimport React from \"react\";\nimport Radio from '@material-ui/core/Radio';\nimport Button from '@material-ui/core/Button';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel'\nimport '@fontsource/roboto';\nimport { ScoreHeader, theme, CircularProgressWithLabel } from \"../stylesUI\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box'\nimport { QuizData } from '../Data/Fragen';\nimport { ThemeProvider } from \"@material-ui/core\";\n\n\n\nclass Singlequestion extends React.Component {\n    constructor() {\n        super();\n        this.forceUpdateHandler = this.forceUpdateHandler.bind(this);\n        this.indexValue = null;\n    };\n\n    forceUpdateHandler = () => {\n        this.forceUpdate();\n    };\n\n    radioHandler = (event) => {\n        //console.log(event.target.value);\n        var test = parseInt(event.target.value);\n        this.indexValue = test;\n        //console.log(test);\n        this.forceUpdateHandler();\n    }\n\n\n    //Check the answer\n    handleSubmit = () => {\n        if (this.indexValue != null) {\n            const { currentIndex } = this.props.state;\n            var Travelmode = null;\n            var points = 0;\n            var index = this.indexValue - 1;\n\n\n            if (QuizData[currentIndex].options[index] === \"Flugzeug\") {\n                Travelmode = \"Fligth\";\n            } else if (QuizData[currentIndex].options[index] === \"Auto\") {\n                Travelmode = \"Car\";\n            } else if (QuizData[currentIndex].options[index] === \"Zug\") {\n                Travelmode = \"Train\";\n            } else {\n                points = QuizData[currentIndex].values[index];\n            }\n\n            this.indexValue = null;\n            this.props.callbackSingleQuestion(index, points, Travelmode);\n        }\n    }/*checkAnswer*/\n\n\n\n    render() {\n        const { question, options, currentIndex, score } = this.props.state;\n        //console.log(\"indexValue\");\n        //console.log(this.indexValue);\n        return (\n            <div>\n                <ScoreHeader score={score} currentIndex={currentIndex} />\n\n                <Grid container maxwidth=\"false\" align=\"center\" justifyContent=\"center\" alignItems=\"center\" >\n\n\n\n                    <Grid item xs={12} sm={12} md={6} lg={4}\n                        style={{\n                            textAlign: 'center',\n                            align: 'center',\n                            justifyContent: 'center',\n                            alignItems: 'center',\n                            width: '80%',\n                            margin: 'center'\n                        }}\n                    >\n                        <FormControl component=\"fieldset\" >\n                            <FormLabel component=\"legend\" aligncontent=\"center\">{question}</FormLabel>\n                            <RadioGroup name=\"quiz\" value={this.indexValue} onChange={this.radioHandler}>\n                                {\n                                    options.map((option, index) => (  //for each option, new paragrap\n                                        <FormControlLabel value={index + 1}\n                                            key={index + 1}//for dumb unique key\n                                            control={<Radio\n                                                color=\"primary\"\n                                                checked={this.indexValue === (index + 1)} />}\n                                            label={option} />\n                                    ))\n                                }\n                            </RadioGroup>\n                            <ThemeProvider theme={theme}>\n                                <Button variant='contained' color='primary' onClick={this.handleSubmit}>\n                                    Next\n                                </Button>\n                            </ThemeProvider>\n                        </FormControl>\n                    </Grid>\n\n                    <br></br>\n                    <Box position=\"relative\" display=\"inline-flex\">\n                        <CircularProgress variant=\"determine\" color=\"primary\"  value={40} size=\"60%\" thickness={6} />\n                        <Box\n                            top={0}\n                            left={0}\n                            bottom={0}\n                            right={0}\n                            position=\"absolute\"\n                            display=\"flex\"\n                            alignItems=\"center\"\n                            justifyContent=\"center\"\n                        >\n                            <Typography variant=\"caption\" component=\"div\" color=\"textSecondary\">{`${Math.round(\n                                props.value,\n                            )}%`}</Typography>\n                        </Box>\n                    </Box>\n\n                    <CircularProgress variant=\"determinate\" value={40} size=\"60%\" thickness={6} />\n                    <br></br>\n                </Grid>\n\n            </div >\n        )\n    }\n}\n\nexport default Singlequestion;\n\n\n/*\n                <Grid item xs={12} sm={12} md={6} lg={4}\n                    style={{\n                        textAlign: 'center',\n                        align: 'center',\n                        justifyContent: 'center',\n                        alignItems: 'center',\n                        width: '80%',\n                        margin: 'center'\n                    }}\n                >\n                    <CircularProgressWithLabel  value={50} />\n                </Grid>\n*/"]},"metadata":{},"sourceType":"module"}