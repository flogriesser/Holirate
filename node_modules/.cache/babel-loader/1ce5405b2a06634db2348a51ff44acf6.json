{"ast":null,"code":"var _jsxFileName = \"/home/flo/Projects/react/Holirate/src/components/stylesUI.js\";\nimport React, { makeStyles } from 'react';\nimport { withStyles, createTheme, useTheme } from \"@material-ui/core/styles\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from '@material-ui/core/Typography';\nimport { CircularProgressbar, buildStyles } from \"react-circular-progressbar\";\nimport \"react-circular-progressbar/dist/styles.css\"; // Animation\n\nimport { easeQuadInOut } from \"d3-ease\";\nimport AnimatedProgressProvider from \"./Style/AnimatedProgressProvider\";\nimport { QuizData } from './Data/Fragen';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const theme = createTheme({\n  root: {\n    flexGrow: 1\n  },\n  palette: {\n    primary: {\n      main: '#66bb6a',\n      contrastText: '#fff'\n    },\n    secondary: {\n      main: \"#F1B929\"\n    } // This is just green.A700 as hex.\n\n  },\n  overrides: {\n    MuiButton: {\n      root: {\n        backgroundColor: 'primary',\n        text: {\n          borderRadius: 3,\n          border: 0,\n          color: 'white'\n        }\n      }\n    }\n  }\n});\nexport const BorderLinearProgress = withStyles(theme => ({\n  root: {\n    height: 20,\n    width: '80%',\n    borderRadius: 10,\n    justifyContent: 'center'\n  },\n  colorPrimary: {\n    backgroundColor: theme.palette.grey[theme.palette.type === \"light\" ? 200 : 700]\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: \"primary\"\n  }\n}))(LinearProgress);\nexport function ScoreHeader(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      maxwidth: \"false\",\n      align: \"center\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        sm: 4,\n        md: 3,\n        lg: 2,\n        xl: 1,\n        children: /*#__PURE__*/_jsxDEV(BorderLinearProgress, {\n          variant: \"determinate\",\n          value: props.currentIndex / QuizData.length * 100\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        sm: 4,\n        md: 3,\n        lg: 2,\n        xl: 1,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          color: \"primary\",\n          gutterBottom: true,\n          children: \"Score\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h3\",\n          color: \"primary\",\n          gutterBottom: true,\n          children: props.score\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n}\n_c = ScoreHeader;\nexport function ScoreBoard(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20% 20% 20% 20%\"\n    },\n    children: /*#__PURE__*/_jsxDEV(AnimatedProgressProvider, {\n      valueStart: 0,\n      valueEnd: props.EndScore,\n      duration: 2,\n      easingFunction: easeQuadInOut,\n      children: value => {\n        const roundedValue = Math.round(value);\n\n        if (value < 33) {\n          return /*#__PURE__*/_jsxDEV(CircularProgressbar, {\n            value: value,\n            text: `${roundedValue}%`,\n            circleRatio: 0.75,\n            styles: buildStyles({\n              pathTransition: \"none\",\n              rotation: 1 / 2 + 1 / 8,\n              strokeLinecap: \"butt\",\n              trailColor: \"#eee\",\n              pathColor: \"#f44336\"\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 41\n          }, this);\n        } else if (value >= 33 && value < 66) {\n          return /*#__PURE__*/_jsxDEV(CircularProgressbar, {\n            value: value,\n            text: `${roundedValue}%`,\n            circleRatio: 0.75,\n            styles: buildStyles({\n              pathTransition: \"none\",\n              rotation: 1 / 2 + 1 / 8,\n              strokeLinecap: \"butt\",\n              trailColor: \"#eee\",\n              pathColor: \"#ff9800\"\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 41\n          }, this);\n        } else {\n          return /*#__PURE__*/_jsxDEV(CircularProgressbar, {\n            value: value,\n            text: `${roundedValue}%`,\n            circleRatio: 0.75,\n            styles: buildStyles({\n              pathTransition: \"none\",\n              rotation: 1 / 2 + 1 / 8,\n              strokeLinecap: \"butt\",\n              trailColor: \"#eee\",\n              pathColor: \"#66bb6a\"\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 41\n          }, this);\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 25\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n}\n_c2 = ScoreBoard;\nconst cardStyles = makeStyles({\n  root: {\n    maxWidth: 345\n  }\n});\nexport function DataCard(props) {\n  const classes = cardStyles();\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h5\",\n        variant: \"h5\",\n        children: props.Value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle1\",\n        color: \"textSecondary\",\n        children: props.Type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 9\n  }, this);\n}\n/*\nconst classes = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: \"center\",\n        color: \"blue\"\n    }\n}));\n*/\n\n_c3 = DataCard;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ScoreHeader\");\n$RefreshReg$(_c2, \"ScoreBoard\");\n$RefreshReg$(_c3, \"DataCard\");","map":{"version":3,"sources":["/home/flo/Projects/react/Holirate/src/components/stylesUI.js"],"names":["React","makeStyles","withStyles","createTheme","useTheme","LinearProgress","Grid","Card","CardContent","CardMedia","Typography","CircularProgressbar","buildStyles","easeQuadInOut","AnimatedProgressProvider","QuizData","theme","root","flexGrow","palette","primary","main","contrastText","secondary","overrides","MuiButton","backgroundColor","text","borderRadius","border","color","BorderLinearProgress","height","width","justifyContent","colorPrimary","grey","type","bar","ScoreHeader","props","currentIndex","length","score","ScoreBoard","padding","EndScore","value","roundedValue","Math","round","pathTransition","rotation","strokeLinecap","trailColor","pathColor","cardStyles","maxWidth","DataCard","classes","Value","Type"],"mappings":"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","sourcesContent":["import React,{makeStyles} from 'react';\nimport { withStyles, createTheme, useTheme } from \"@material-ui/core/styles\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from '@material-ui/core/Typography';\n\nimport {\n    CircularProgressbar,\n    buildStyles\n} from \"react-circular-progressbar\";\nimport \"react-circular-progressbar/dist/styles.css\";\n\n// Animation\nimport { easeQuadInOut } from \"d3-ease\";\nimport AnimatedProgressProvider from \"./Style/AnimatedProgressProvider\";\n\n\nimport { QuizData } from './Data/Fragen';\n\n\n\nexport const theme = createTheme({\n    root: {\n        flexGrow:1,\n    },\n    palette: {\n        primary: {\n            main: '#66bb6a',\n            contrastText: '#fff',\n        },\n        secondary: { main: \"#F1B929\" }, // This is just green.A700 as hex.\n    },\n    overrides: {\n        MuiButton: {\n            root:{\n                backgroundColor: 'primary',\n            text: {\n                borderRadius: 3,\n                border: 0,\n                color: 'white',\n            },\n        }\n        },\n    }\n});\n\nexport const BorderLinearProgress = withStyles((theme) => ({\n    root: {\n        height: 20,\n        width:'80%',\n        borderRadius: 10,\n        justifyContent: 'center'\n    },\n    colorPrimary: {\n        backgroundColor:\n            theme.palette.grey[theme.palette.type === \"light\" ? 200 : 700]\n    },\n    bar: {\n        borderRadius: 5,\n        backgroundColor: \"primary\"\n    }\n}))(LinearProgress);\n\nexport function ScoreHeader(props) {\n    return (\n        <div>\n            <Grid container maxwidth=\"false\" align=\"center\" justifyContent=\"center\" alignItems=\"center\" >\n                <Grid item xs={6} sm={4} md={3} lg={2} xl={1} >\n                    <BorderLinearProgress variant=\"determinate\" value={(props.currentIndex / QuizData.length) * 100} />\n                </Grid>\n                <Grid item xs={6} sm={4} md={3} lg={2} xl={1}>\n                    <Typography variant=\"h5\" color=\"primary\" gutterBottom>\n                        Score\n                    </Typography>\n                    <Typography variant=\"h3\" color=\"primary\" gutterBottom>\n                        {props.score}\n                    </Typography>\n                </Grid>\n            </Grid>\n            <br></br>\n        </div>\n\n    );\n}\n\nexport function ScoreBoard(props){\n    return (\n        <div style={{ padding: \"20% 20% 20% 20%\" }}>\n                        <AnimatedProgressProvider\n                            valueStart={0}\n                            valueEnd={props.EndScore}\n                            duration={2}\n                            easingFunction={easeQuadInOut}\n                        >\n                            {(value) => {\n                                const roundedValue = Math.round(value);\n                                if (value < 33) {\n                                    return (\n                                        <CircularProgressbar\n                                            value={value}\n                                            text={`${roundedValue}%`}\n                                            circleRatio={0.75}\n                                            styles={buildStyles({\n                                                pathTransition: \"none\",\n                                                rotation: 1 / 2 + 1 / 8,\n                                                strokeLinecap: \"butt\",\n                                                trailColor: \"#eee\",\n                                                pathColor: \"#f44336\"\n                                            })}\n                                        />\n                                    );\n                                } else if (value >= 33 && value < 66) {\n                                    return (\n                                        <CircularProgressbar\n                                            value={value}\n                                            text={`${roundedValue}%`}\n                                            circleRatio={0.75}\n                                            styles={buildStyles({\n                                                pathTransition: \"none\",\n                                                rotation: 1 / 2 + 1 / 8,\n                                                strokeLinecap: \"butt\",\n                                                trailColor: \"#eee\",\n                                                pathColor: \"#ff9800\"\n                                            })}\n                                        />\n                                    );\n                                } else {\n                                    return (\n                                        <CircularProgressbar\n                                            value={value}\n                                            text={`${roundedValue}%`}\n                                            circleRatio={0.75}\n                                            styles={buildStyles({\n                                                pathTransition: \"none\",\n                                                rotation: 1 / 2 + 1 / 8,\n                                                strokeLinecap: \"butt\",\n                                                trailColor: \"#eee\",\n                                                pathColor: \"#66bb6a\"\n                                            })}\n                                        />\n                                    );\n                                }\n                            }}\n                        </AnimatedProgressProvider>\n                    </div>\n    );\n}\nconst cardStyles = makeStyles({\n    root: {\n      maxWidth: 345,\n    },\n  });\n\n\nexport function DataCard(props){\n    const classes = cardStyles();\n    return(\n        <Card className={classes.root}>\n          <CardContent >\n            <Typography component=\"h5\" variant=\"h5\">\n              {props.Value}\n            </Typography>\n            <Typography variant=\"subtitle1\" color=\"textSecondary\">\n              {props.Type}\n            </Typography>\n          </CardContent>\n          \n      </Card>\n    );\n}\n\n\n/*\nconst classes = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: \"center\",\n        color: \"blue\"\n    }\n}));\n*/"]},"metadata":{},"sourceType":"module"}