{"ast":null,"code":"var _jsxFileName = \"/home/flo/Projects/react/Holirate/src/components/Maps/maps.js\";\n\n/*\n * @Author: Florian Griesser \n * @Date: 2021-05-29 10:29:11 \n * @Last Modified by: Florian Griesser\n * @Last Modified time: 2021-06-12 08:35:09\n */\n//import ReactDOM from \"react-dom\";\nimport React from \"react\"; //import { QuizData } from '../Data/Fragen';\n\nimport TextField from '@material-ui/core/TextField';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Grid from '@material-ui/core/Grid';\nimport { ThemeProvider } from \"@material-ui/core\";\nimport { ScoreHeader, theme } from \"../stylesUI\";\nimport MapsAutocomplete from './MapsAutocomplete';\nimport Button from '@material-ui/core/Button';\nimport { DirectionsService } from \"@react-google-maps/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar RouteDistance = 0;\nvar directionsService;\n\nclass Map extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      directions: null,\n      distance: null,\n      bounds: null\n    };\n\n    this.handleSubmit = () => {\n      var origin = document.getElementById(0).value;\n      var destination = document.getElementById(1).value;\n\n      if (origin !== \"\" && destination !== \"\") {\n        directionsService = new google.maps.DirectionsService();\n        var distance = this.changeDirection(origin, destination);\n\n        if (distance !== null) {\n          this.props.callbackMaps(distance);\n        } else {\n          this.render();\n        }\n      } else {\n        this.render();\n      }\n    };\n\n    this.changeDirection = (origin, destination) => {\n      var mode = google.maps.TravelMode.DRIVING;\n      directionsService = new google.maps.DirectionsService();\n\n      if (this.props.TravelMode === \"Train\") {\n        mode = google.maps.TravelMode.TRANSIT;\n      }\n\n      directionsService.route({\n        origin: origin,\n        destination: destination,\n        travelMode: mode\n      }, (result, status) => {\n        if (status === google.maps.DirectionsStatus.OK) {\n          //changing the state of directions to the result of direction service\n          RouteDistance = result.routes[0].legs[0].distance.value / 1000;\n          console.log(RouteDistance);\n          return RouteDistance;\n        } else {\n          alert(\"Wir konnten leider keine Route für dich finden. Versuche es mit größen Städten in der Nähe\");\n          console.error(`error fetching directions ${result}`);\n          return null;\n        }\n      });\n    };\n  }\n\n  render() {\n    const {\n      currentIndex,\n      score,\n      question\n    } = this.props.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(ScoreHeader, {\n        score: score,\n        currentIndex: currentIndex\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        maxwidth: \"false\",\n        align: \"center\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 12,\n          md: 6,\n          lg: 4,\n          style: {\n            textAlign: 'center',\n            align: 'center',\n            justifyContent: 'center',\n            alignItems: 'center',\n            width: '80%',\n            margin: 'center'\n          },\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            component: \"fieldset\",\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              component: \"legend\",\n              aligncontent: \"center\",\n              children: question\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MapsAutocomplete, {\n              children: [\" key=\", 0]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MapsAutocomplete, {\n              children: [\"key=\", 1]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ThemeProvider, {\n              theme: theme,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                onClick: this.handleSubmit,\n                children: \"Next\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Map;","map":{"version":3,"sources":["/home/flo/Projects/react/Holirate/src/components/Maps/maps.js"],"names":["React","TextField","FormLabel","FormControl","Grid","ThemeProvider","ScoreHeader","theme","MapsAutocomplete","Button","DirectionsService","RouteDistance","directionsService","Map","Component","state","directions","distance","bounds","handleSubmit","origin","document","getElementById","value","destination","google","maps","changeDirection","props","callbackMaps","render","mode","TravelMode","DRIVING","TRANSIT","route","travelMode","result","status","DirectionsStatus","OK","routes","legs","console","log","alert","error","currentIndex","score","question","textAlign","align","justifyContent","alignItems","width","margin"],"mappings":"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","sourcesContent":["/*\n * @Author: Florian Griesser \n * @Date: 2021-05-29 10:29:11 \n * @Last Modified by: Florian Griesser\n * @Last Modified time: 2021-06-12 08:35:09\n */\n\n//import ReactDOM from \"react-dom\";\nimport React from \"react\";\n//import { QuizData } from '../Data/Fragen';\nimport TextField from '@material-ui/core/TextField';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Grid from '@material-ui/core/Grid';\nimport { ThemeProvider } from \"@material-ui/core\";\nimport { ScoreHeader, theme } from \"../stylesUI\";\nimport MapsAutocomplete from './MapsAutocomplete';\nimport Button from '@material-ui/core/Button';\n\n\nimport {\n  DirectionsService\n} from \"@react-google-maps/api\";\n\nvar RouteDistance = 0;\nvar directionsService\n\nclass Map extends React.Component {\n  state = {\n    directions: null,\n    distance: null,\n    bounds: null\n  };\n\n  handleSubmit = () => {\n    var origin = document.getElementById(0).value;\n    var destination = document.getElementById(1).value;\n    if (origin !== \"\" && destination !== \"\") {\n      directionsService = new google.maps.DirectionsService();\n\n      var distance = this.changeDirection(origin, destination);\n      if(distance !== null){\n      this.props.callbackMaps(distance);\n      }else{\n        this.render();\n      }\n    } else {\n      this.render();\n    }\n  } \n  \n  //function that is calling the directions service\n  changeDirection = (origin, destination) => {\n    var mode = google.maps.TravelMode.DRIVING;\n    directionsService = new google.maps.DirectionsService();\n    \n    if (this.props.TravelMode === \"Train\"){\n      mode = google.maps.TravelMode.TRANSIT;\n    }\n\n\n    directionsService.route(\n      {\n        origin: origin,\n        destination: destination,\n        travelMode: mode\n      },\n      (result, status) => {\n        if (status === google.maps.DirectionsStatus.OK) {\n          //changing the state of directions to the result of direction service\n          RouteDistance = result.routes[0].legs[0].distance.value / 1000;\n          console.log(RouteDistance);\n          return RouteDistance;\n        } else {\n          alert(\"Wir konnten leider keine Route für dich finden. Versuche es mit größen Städten in der Nähe\");\n          console.error(`error fetching directions ${result}`);\n          return null;\n        }\n      }\n    );\n  };\n\n\n  render() {\n    const { currentIndex, score, question } = this.props.state;\n    return (\n      <div>\n        <ScoreHeader score={score} currentIndex={currentIndex} />\n        <Grid container maxwidth=\"false\" align=\"center\" justifyContent=\"center\" alignItems=\"center\" >\n          <Grid item xs={12} sm={12} md={6} lg={4}\n            style={{\n              textAlign: 'center',\n              align: 'center',\n              justifyContent: 'center',\n              alignItems: 'center',\n              width: '80%',\n              margin: 'center'\n            }}\n          >\n            <FormControl component=\"fieldset\" >\n              <FormLabel component=\"legend\" aligncontent=\"center\">{question}</FormLabel>\n              <br></br>\n              <MapsAutocomplete> key={0}</MapsAutocomplete>\n              <br></br>\n              <MapsAutocomplete>key={1}</MapsAutocomplete>\n              <br></br>\n              <ThemeProvider theme={theme}>\n                <Button variant='contained' color='primary' onClick={this.handleSubmit}>\n                  Next\n                </Button>\n              </ThemeProvider>\n            </FormControl>\n          </Grid>\n        </Grid>\n      </div >\n    );\n  }\n}\n\nexport default Map;"]},"metadata":{},"sourceType":"module"}