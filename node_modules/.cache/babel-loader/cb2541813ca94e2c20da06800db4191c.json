{"ast":null,"code":"var _jsxFileName = \"/home/flo/Projects/HolirateFolder/react/Holirate/src/components/SingleQuestion/singleQuestion.js\";\nimport { Component } from \"react\";\nimport { QuizData } from '../Data/Fragen';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass singleQuestion extends Component {\n  render() {\n    const {\n      question,\n      options,\n      currentIndex\n    } = this.props.datafromQuiz;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"hud\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"hud-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"hud-prefix\",\n            children: [\"Question \", currentIndex + 1, \" / \", QuizData.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 12,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"progressBar\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"progressBarFull\",\n              style: {\n                width: `${currentIndex / QuizData.length * 100}%`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 16,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"hud-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"hud-prefix\",\n            children: \"Score\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"hud-main-text\",\n            id: \"score\",\n            children: this.state.score\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this), options.map((option, index) =>\n      /*#__PURE__*/\n      //for each option, new paragrap\n      _jsxDEV(\"div\", {\n        className: `options-container`,\n        onClick: () => this.checkAnswer(option, index),\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"options-prefix\",\n          children: index + 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"options-text\",\n          children: [\" \", option]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default singleQuestion;","map":{"version":3,"sources":["/home/flo/Projects/HolirateFolder/react/Holirate/src/components/SingleQuestion/singleQuestion.js"],"names":["Component","QuizData","singleQuestion","render","question","options","currentIndex","props","datafromQuiz","length","width","state","score","map","option","index","checkAnswer"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,QAAT,QAAyB,gBAAzB;;;AAEA,MAAMC,cAAN,SAA6BF,SAA7B,CAAsC;AAElCG,EAAAA,MAAM,GAAE;AACJ,UAAM;AAAEC,MAAAA,QAAF;AAAYC,MAAAA,OAAZ;AAAqBC,MAAAA;AAArB,QAAsC,KAAKC,KAAL,CAAWC,YAAvD;AACJ,wBACI;AAAA,8BACI;AAAK,QAAA,EAAE,EAAC,KAAR;AAAA,gCACI;AAAK,UAAA,EAAE,EAAC,UAAR;AAAA,kCACI;AAAG,YAAA,SAAS,EAAC,YAAb;AAAA,oCACcF,YAAY,GAAG,CAD7B,SACmCL,QAAQ,CAACQ,MAD5C;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII;AAAK,YAAA,EAAE,EAAC,aAAR;AAAA,mCACI;AAAK,cAAA,EAAE,EAAC,iBAAR;AAA0B,cAAA,KAAK,EAAE;AAAEC,gBAAAA,KAAK,EAAG,GAAGJ,YAAY,GAAGL,QAAQ,CAACQ,MAAzB,GAAmC,GAAI;AAAnD;AAAjC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eASI;AAAK,UAAA,EAAE,EAAC,UAAR;AAAA,kCACI;AAAG,YAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII;AAAI,YAAA,SAAS,EAAC,eAAd;AAA8B,YAAA,EAAE,EAAC,OAAjC;AAAA,sBACK,KAAKE,KAAL,CAAWC;AADhB;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBATJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAmBI;AAAA;AAAA;AAAA;AAAA,cAnBJ,eAoBI;AAAA,kBAAKR;AAAL;AAAA;AAAA;AAAA;AAAA,cApBJ,eAqBI;AAAA;AAAA;AAAA;AAAA,cArBJ,EAuBQC,OAAO,CAACQ,GAAR,CAAY,CAACC,MAAD,EAASC,KAAT;AAAA;AAAsB;AAC9B;AACI,QAAA,SAAS,EAAG,mBADhB;AAEI,QAAA,OAAO,EAAE,MAAM,KAAKC,WAAL,CAAiBF,MAAjB,EAAyBC,KAAzB,CAFnB;AAAA,gCAGI;AAAG,UAAA,SAAS,EAAC,gBAAb;AAAA,oBAA+BA,KAAK,GAAG;AAAvC;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAG,UAAA,SAAS,EAAC,cAAb;AAAA,0BAA8BD,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA,SAAUC,KAAV;AAAA;AAAA;AAAA;AAAA,cADJ,CAvBR;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAmCK;;AAvC6B;;AA0CtC,eAAeb,cAAf","sourcesContent":["import { Component } from \"react\";\nimport { QuizData } from '../Data/Fragen';\n\nclass singleQuestion extends Component{\n\n    render(){\n        const { question, options, currentIndex } = this.props.datafromQuiz;\n    return (\n        <div>\n            <div id=\"hud\">\n                <div id=\"hud-item\">\n                    <p className=\"hud-prefix\">\n                        Question {currentIndex + 1} / {QuizData.length}\n                    </p>\n                    <div id=\"progressBar\">\n                        <div id=\"progressBarFull\" style={{ width: `${(currentIndex / QuizData.length) * 100}%` }}></div>\n                    </div>\n                </div>\n                <div id=\"hud-item\">\n                    <p className=\"hud-prefix\">\n                        Score\n    </p>\n                    <h1 className=\"hud-main-text\" id=\"score\">\n                        {this.state.score}\n                    </h1>\n                </div>\n            </div>\n            <br></br>\n            <h2>{question}</h2>\n            <br></br>\n            {\n                options.map((option, index) => (  //for each option, new paragrap\n                    <div key={index}\n                        className={`options-container`}\n                        onClick={() => this.checkAnswer(option, index)}>\n                        <p className=\"options-prefix\">{index + 1}</p>\n                        <p className=\"options-text\"> {option}</p>\n                    </div>\n                ))\n            }\n        </div >\n    )\n        };\n}\n\nexport default singleQuestion;"]},"metadata":{},"sourceType":"module"}