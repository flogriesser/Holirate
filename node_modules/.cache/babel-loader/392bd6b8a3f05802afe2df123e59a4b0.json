{"ast":null,"code":"var _jsxFileName = \"/home/flo/Projects/react/Holirate/src/components/SingleQuestion/singleQuestion.js\";\n\n/*\n * @Author: Florian Griesser \n * @Date: 2021-05-29 17:23:53 \n * @Last Modified by: Florian Griesser\n * @Last Modified time: 2021-05-29 17:35:49\n */\nimport React from \"react\";\nimport Radio from '@material-ui/core/Radio';\nimport Button from '@material-ui/core/Button';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Typography from '@material-ui/core/Typography';\nimport '@fontsource/roboto';\nimport { QuizData } from '../Data/Fragen';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst classes = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: \"blue\"\n  }\n}));\nconst BorderLinearProgress = withStyles(theme => ({\n  root: {\n    height: 10,\n    borderRadius: 5\n  },\n  colorPrimary: {\n    backgroundColor: theme.palette.grey[theme.palette.type === \"light\" ? 200 : 700]\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: \"#1a90ff\"\n  }\n}))(LinearProgress);\n\nclass Singlequestion extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.checkAnswer = (answer, index) => {\n      const {\n        currentIndex\n      } = this.props.state;\n      var Travelmode = null;\n      var points = 0;\n      console.log(index);\n\n      if (QuizData[currentIndex].options[index] === \"Flugzeug\") {\n        Travelmode = \"Fligth\";\n      } else if (QuizData[currentIndex].options[index] === \"Auto\") {\n        Travelmode = \"Car\";\n      } else if (QuizData[currentIndex].options[index] === \"Zug\") {\n        Travelmode = \"Train\";\n      } else {\n        points = QuizData[currentIndex].values[index];\n      }\n\n      this.props.callbackSingleQuestion(index, points, Travelmode);\n    };\n  }\n\n  /*checkAnswer*/\n  render() {\n    const {\n      question,\n      options,\n      currentIndex,\n      score\n    } = this.props.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        align: \"center\",\n        justify: \"center\",\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          children: /*#__PURE__*/_jsxDEV(BorderLinearProgress, {\n            variant: \"determinate\",\n            value: currentIndex / QuizData.length * 100\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h3\",\n            gutterBottom: true,\n            children: \"Score\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h3\",\n            gutterBottom: true,\n            children: score\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        component: \"fieldset\",\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          component: \"legend\",\n          children: question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n          \"aria-label\": \"gender\",\n          name: \"gender1\",\n          children: options.map((option, index) =>\n          /*#__PURE__*/\n          //for each option, new paragrap\n          _jsxDEV(FormControlLabel, {\n            value: index + 1,\n            onChange: () => this.checkAnswer(option, index),\n            control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 46\n            }, this),\n            label: option\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          color: \"secondary\",\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Singlequestion;","map":{"version":3,"sources":["/home/flo/Projects/react/Holirate/src/components/SingleQuestion/singleQuestion.js"],"names":["React","Radio","Button","RadioGroup","FormControlLabel","FormControl","FormLabel","makeStyles","withStyles","Grid","LinearProgress","Typography","QuizData","classes","theme","root","flexGrow","paper","padding","spacing","textAlign","color","BorderLinearProgress","height","borderRadius","colorPrimary","backgroundColor","palette","grey","type","bar","Singlequestion","Component","checkAnswer","answer","index","currentIndex","props","state","Travelmode","points","console","log","options","values","callbackSingleQuestion","render","question","score","length","map","option"],"mappings":"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","sourcesContent":["/*\n * @Author: Florian Griesser \n * @Date: 2021-05-29 17:23:53 \n * @Last Modified by: Florian Griesser\n * @Last Modified time: 2021-05-29 17:35:49\n */\n\nimport React from \"react\";\nimport Radio from '@material-ui/core/Radio';\nimport Button from '@material-ui/core/Button';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel'\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\"\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Typography from '@material-ui/core/Typography';\nimport '@fontsource/roboto';\n\n\nimport { QuizData } from '../Data/Fragen';\n\nconst classes = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: \"center\",\n        color: \"blue\"\n    }\n}));\n\n\n\n\nconst BorderLinearProgress = withStyles((theme) => ({\n    root: {\n        height: 10,\n        borderRadius: 5\n    },\n    colorPrimary: {\n        backgroundColor:\n            theme.palette.grey[theme.palette.type === \"light\" ? 200 : 700]\n    },\n    bar: {\n        borderRadius: 5,\n        backgroundColor: \"#1a90ff\"\n    }\n}))(LinearProgress);\n\n\nclass Singlequestion extends React.Component {\n\n    //Check the answer\n    checkAnswer = (answer, index) => {\n        const { currentIndex } = this.props.state;\n        var Travelmode = null;\n        var points = 0;\n        console.log(index);\n\n        if (QuizData[currentIndex].options[index] === \"Flugzeug\") {\n            Travelmode = \"Fligth\";\n        } else if (QuizData[currentIndex].options[index] === \"Auto\") {\n            Travelmode = \"Car\";\n        } else if (QuizData[currentIndex].options[index] === \"Zug\") {\n            Travelmode = \"Train\";\n        } else {\n            points = QuizData[currentIndex].values[index];\n        }\n\n\n        this.props.callbackSingleQuestion(index, points, Travelmode);\n    }/*checkAnswer*/\n\n\n\n\n    render() {\n        const { question, options, currentIndex, score } = this.props.state;\n\n        return (\n            <div>\n\n\n                <Grid container spacing={3} align = \"center\" justify = \"center\" alignItems = \"center\" >\n                    <Grid item xs={6}>\n                        <BorderLinearProgress variant=\"determinate\" value={(currentIndex / QuizData.length) * 100} />\n                    </Grid>\n                    <Grid item xs={6}>\n                        <Typography variant=\"h3\" gutterBottom>\n                            Score\n                        </Typography>\n                        <Typography variant=\"h3\" gutterBottom>\n                            {score}\n                        </Typography>\n                    </Grid>\n\n                </Grid>\n                <br></br>\n                <br></br>\n                <FormControl component=\"fieldset\">\n                    <FormLabel component=\"legend\">{question}</FormLabel>\n                    <RadioGroup aria-label=\"gender\" name=\"gender1\" >\n                        {\n                            options.map((option, index) => (  //for each option, new paragrap\n                                <FormControlLabel value={index + 1}\n                                    onChange={() => this.checkAnswer(option, index)}\n                                    control={<Radio />}\n                                    label={option} />\n                            ))\n                        }\n                    </RadioGroup>\n                    <br></br>\n\n                    <Button type=\"submit\" variant=\"contained\" color=\"secondary\" >\n                        Next\n                    </Button>\n                </FormControl>\n            </div >\n        )\n    }\n}\n\nexport default Singlequestion;"]},"metadata":{},"sourceType":"module"}