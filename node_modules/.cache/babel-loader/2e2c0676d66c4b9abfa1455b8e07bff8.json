{"ast":null,"code":"import _classCallCheck from\"/home/flo/Projects/react/Holirate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/flo/Projects/react/Holirate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/flo/Projects/react/Holirate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/flo/Projects/react/Holirate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from\"react\";import{Animate}from\"react-move\";import{jsx as _jsx}from\"react/jsx-runtime\";var AnimatedProgressProvider=/*#__PURE__*/function(_React$Component){_inherits(AnimatedProgressProvider,_React$Component);var _super=_createSuper(AnimatedProgressProvider);function AnimatedProgressProvider(){var _this;_classCallCheck(this,AnimatedProgressProvider);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.interval=undefined;_this.state={isAnimated:false};return _this;}_createClass(AnimatedProgressProvider,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;if(this.props.repeat){this.interval=window.setInterval(function(){_this2.setState({isAnimated:!_this2.state.isAnimated});},this.props.duration*1000);}else{this.setState({isAnimated:!this.state.isAnimated});}}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){window.clearInterval(this.interval);}},{key:\"render\",value:function render(){var _this3=this;return/*#__PURE__*/_jsx(Animate,{start:function start(){return{value:_this3.props.valueStart};},update:function update(){return{value:[_this3.state.isAnimated?_this3.props.valueEnd:_this3.props.valueStart],timing:{duration:_this3.props.duration*1000,ease:_this3.props.easingFunction}};},children:function children(_ref){var value=_ref.value;return _this3.props.children(value);}});}}]);return AnimatedProgressProvider;}(React.Component);AnimatedProgressProvider.defaultProps={valueStart:0};export default AnimatedProgressProvider;","map":{"version":3,"sources":["/home/flo/Projects/react/Holirate/src/components/Style/AnimatedProgressProvider.js"],"names":["React","Animate","AnimatedProgressProvider","interval","undefined","state","isAnimated","props","repeat","window","setInterval","setState","duration","clearInterval","value","valueStart","valueEnd","timing","ease","easingFunction","children","Component","defaultProps"],"mappings":"glBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,OAAT,KAAwB,YAAxB,C,8CAEMC,CAAAA,wB,+YACJC,Q,CAAWC,S,OAEXC,K,CAAQ,CACNC,UAAU,CAAE,KADN,C,qFAQR,4BAAoB,iBAClB,GAAI,KAAKC,KAAL,CAAWC,MAAf,CAAuB,CACrB,KAAKL,QAAL,CAAgBM,MAAM,CAACC,WAAP,CAAmB,UAAM,CACvC,MAAI,CAACC,QAAL,CAAc,CACZL,UAAU,CAAE,CAAC,MAAI,CAACD,KAAL,CAAWC,UADZ,CAAd,EAGD,CAJe,CAIb,KAAKC,KAAL,CAAWK,QAAX,CAAsB,IAJT,CAAhB,CAKD,CAND,IAMO,CACL,KAAKD,QAAL,CAAc,CACZL,UAAU,CAAE,CAAC,KAAKD,KAAL,CAAWC,UADZ,CAAd,EAGD,CACF,C,oCAED,+BAAuB,CACrBG,MAAM,CAACI,aAAP,CAAqB,KAAKV,QAA1B,EACD,C,sBAED,iBAAS,iBACP,mBACE,KAAC,OAAD,EACE,KAAK,CAAE,uBAAO,CACZW,KAAK,CAAE,MAAI,CAACP,KAAL,CAAWQ,UADN,CAAP,EADT,CAIE,MAAM,CAAE,wBAAO,CACbD,KAAK,CAAE,CACL,MAAI,CAACT,KAAL,CAAWC,UAAX,CAAwB,MAAI,CAACC,KAAL,CAAWS,QAAnC,CAA8C,MAAI,CAACT,KAAL,CAAWQ,UADpD,CADM,CAIbE,MAAM,CAAE,CACNL,QAAQ,CAAE,MAAI,CAACL,KAAL,CAAWK,QAAX,CAAsB,IAD1B,CAENM,IAAI,CAAE,MAAI,CAACX,KAAL,CAAWY,cAFX,CAJK,CAAP,EAJV,UAcG,2BAAGL,CAAAA,KAAH,MAAGA,KAAH,OAAe,CAAA,MAAI,CAACP,KAAL,CAAWa,QAAX,CAAoBN,KAApB,CAAf,EAdH,EADF,CAkBD,C,sCAhDoCd,KAAK,CAACqB,S,EAAvCnB,wB,CAOGoB,Y,CAAe,CACpBP,UAAU,CAAE,CADQ,C,CA4CxB,cAAeb,CAAAA,wBAAf","sourcesContent":["import React from \"react\";\nimport { Animate } from \"react-move\";\n\nclass AnimatedProgressProvider extends React.Component {\n  interval = undefined;\n\n  state = {\n    isAnimated: false\n  };\n\n  static defaultProps = {\n    valueStart: 0\n  };\n\n  componentDidMount() {\n    if (this.props.repeat) {\n      this.interval = window.setInterval(() => {\n        this.setState({\n          isAnimated: !this.state.isAnimated\n        });\n      }, this.props.duration * 1000);\n    } else {\n      this.setState({\n        isAnimated: !this.state.isAnimated\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.interval);\n  }\n\n  render() {\n    return (\n      <Animate\n        start={() => ({\n          value: this.props.valueStart\n        })}\n        update={() => ({\n          value: [\n            this.state.isAnimated ? this.props.valueEnd : this.props.valueStart\n          ],\n          timing: {\n            duration: this.props.duration * 1000,\n            ease: this.props.easingFunction\n          }\n        })}\n      >\n        {({ value }) => this.props.children(value)}\n      </Animate>\n    );\n  }\n}\n\nexport default AnimatedProgressProvider;\n"]},"metadata":{},"sourceType":"module"}