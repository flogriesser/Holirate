{"ast":null,"code":"var _jsxFileName = \"/home/flo/Projects/HolirateFolder/react/Holirate/src/components/Maps/car.js\";\nimport React from \"react\";\nimport { QuizData } from '../Data/Fragen';\n/*\nconst carPower = [\n    \"Gasoline\",\n    \"Diesel\",\n    \"Electric\",\n    \"Hyprid\",\n    \"Gas\"\n]\n\n\nconst carType ={\n    small,\n    middle: 1,\n    SUV: 2\n}\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Car extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.checkAnswer = (answer, index) => {\n      const {\n        currentIndex\n      } = this.props.state;\n\n      if (QuizData[currentIndex].category === \"type\") {\n        this.props.callbackCarType(index);\n      } else {\n        this.props.callbackCarType(index);\n      }\n    };\n  }\n\n  /*checkAnswer*/\n  render() {\n    const {\n      question,\n      options,\n      currentIndex,\n      score\n    } = this.props.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"hud\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"hud-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"hud-prefix\",\n            children: [\"Question \", currentIndex + 1, \" / \", QuizData.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"progressBar\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"progressBarFull\",\n              style: {\n                width: `${currentIndex / QuizData.length * 100}%`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"hud-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"hud-prefix\",\n            children: \"Score\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"hud-main-text\",\n            id: \"score\",\n            children: score\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), options.map((option, index) =>\n      /*#__PURE__*/\n      //for each option, new paragrap\n      _jsxDEV(\"div\", {\n        className: `options-container`,\n        onClick: () => this.checkAnswer(option, index),\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"options-prefix\",\n          children: index + 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"options-text\",\n          children: [\" \", option]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 29\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 25\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Car;","map":{"version":3,"sources":["/home/flo/Projects/HolirateFolder/react/Holirate/src/components/Maps/car.js"],"names":["React","QuizData","Car","Component","checkAnswer","answer","index","currentIndex","props","state","category","callbackCarType","render","question","options","score","length","width","map","option"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,MAAMC,GAAN,SAAkBF,KAAK,CAACG,SAAxB,CAAiC;AAAA;AAAA;;AAAA,SAG7BC,WAH6B,GAGf,CAACC,MAAD,EAASC,KAAT,KAAmB;AAC7B,YAAM;AAAEC,QAAAA;AAAF,UAAmB,KAAKC,KAAL,CAAWC,KAApC;;AAEA,UAAGR,QAAQ,CAACM,YAAD,CAAR,CAAuBG,QAAvB,KAAoC,MAAvC,EAA8C;AAC1C,aAAKF,KAAL,CAAWG,eAAX,CAA2BL,KAA3B;AACH,OAFD,MAGI;AACA,aAAKE,KAAL,CAAWG,eAAX,CAA2BL,KAA3B;AACH;AAEJ,KAb4B;AAAA;;AAa5B;AAKDM,EAAAA,MAAM,GAAG;AACL,UAAM;AAACC,MAAAA,QAAD;AAAWC,MAAAA,OAAX;AAAoBP,MAAAA,YAApB;AAAkCQ,MAAAA;AAAlC,QAA2C,KAAKP,KAAL,CAAWC,KAA5D;AACA,wBACI;AAAA,8BACI;AAAK,QAAA,EAAE,EAAC,KAAR;AAAA,gCACI;AAAK,UAAA,EAAE,EAAC,UAAR;AAAA,kCACI;AAAG,YAAA,SAAS,EAAC,YAAb;AAAA,oCACcF,YAAY,GAAG,CAD7B,SACmCN,QAAQ,CAACe,MAD5C;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII;AAAK,YAAA,EAAE,EAAC,aAAR;AAAA,mCACI;AAAK,cAAA,EAAE,EAAC,iBAAR;AAA0B,cAAA,KAAK,EAAE;AAAEC,gBAAAA,KAAK,EAAG,GAAGV,YAAY,GAAGN,QAAQ,CAACe,MAAzB,GAAmC,GAAI;AAAnD;AAAjC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eASI;AAAK,UAAA,EAAE,EAAC,UAAR;AAAA,kCACI;AAAG,YAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII;AAAI,YAAA,SAAS,EAAC,eAAd;AAA8B,YAAA,EAAE,EAAC,OAAjC;AAAA,sBACKD;AADL;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBATJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAmBI;AAAA;AAAA;AAAA;AAAA,cAnBJ,eAoBI;AAAA,kBAAKF;AAAL;AAAA;AAAA;AAAA;AAAA,cApBJ,eAqBI;AAAA;AAAA;AAAA;AAAA,cArBJ,EAuBQC,OAAO,CAACI,GAAR,CAAY,CAACC,MAAD,EAASb,KAAT;AAAA;AAAsB;AAC9B;AACI,QAAA,SAAS,EAAG,mBADhB;AAEI,QAAA,OAAO,EAAE,MAAM,KAAKF,WAAL,CAAiBe,MAAjB,EAAyBb,KAAzB,CAFnB;AAAA,gCAGI;AAAG,UAAA,SAAS,EAAC,gBAAb;AAAA,oBAA+BA,KAAK,GAAG;AAAvC;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAG,UAAA,SAAS,EAAC,cAAb;AAAA,0BAA8Ba,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA,SAAUb,KAAV;AAAA;AAAA;AAAA;AAAA,cADJ,CAvBR;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAmCH;;AAvD4B;;AA0DjC,eAAeJ,GAAf","sourcesContent":["import React from \"react\";\nimport { QuizData } from '../Data/Fragen';\n\n/*\nconst carPower = [\n    \"Gasoline\",\n    \"Diesel\",\n    \"Electric\",\n    \"Hyprid\",\n    \"Gas\"\n]\n\n\nconst carType ={\n    small,\n    middle: 1,\n    SUV: 2\n}\n*/\n\nclass Car extends React.Component{\n\n    //Check the answer\n    checkAnswer = (answer, index) => {\n        const { currentIndex } = this.props.state;\n\n        if(QuizData[currentIndex].category === \"type\"){\n            this.props.callbackCarType(index);\n        }\n        else{\n            this.props.callbackCarType(index);\n        }\n\n    }/*checkAnswer*/\n\n\n\n\n    render() {\n        const {question, options, currentIndex, score} = this.props.state;\n        return (\n            <div>\n                <div id=\"hud\">\n                    <div id=\"hud-item\">\n                        <p className=\"hud-prefix\">\n                            Question {currentIndex + 1} / {QuizData.length}\n                        </p>\n                        <div id=\"progressBar\">\n                            <div id=\"progressBarFull\" style={{ width: `${(currentIndex / QuizData.length) * 100}%` }}></div>\n                        </div>\n                    </div>\n                    <div id=\"hud-item\">\n                        <p className=\"hud-prefix\">\n                            Score\n                        </p>\n                        <h1 className=\"hud-main-text\" id=\"score\">\n                            {score}\n                        </h1>\n                    </div>\n                </div>\n                <br></br>\n                <h2>{question}</h2>\n                <br></br>\n                {\n                    options.map((option, index) => (  //for each option, new paragrap\n                        <div key={index}\n                            className={`options-container`}\n                            onClick={() => this.checkAnswer(option, index)}>\n                            <p className=\"options-prefix\">{index + 1}</p>\n                            <p className=\"options-text\"> {option}</p>\n                        </div>\n                    ))\n                }\n            </div >\n        )\n    }\n}\n\nexport default Car;"]},"metadata":{},"sourceType":"module"}