{"ast":null,"code":"var _jsxFileName = \"/home/flo/Projects/react/Holirate/src/components/SingleQuestion/singleQuestion.js\";\n\n/*\n * @Author: Florian Griesser \n * @Date: 2021-05-29 17:23:53 \n * @Last Modified by: Florian Griesser\n * @Last Modified time: 2021-05-29 17:35:49\n */\nimport React from \"react\";\nimport Radio from '@material-ui/core/Radio';\nimport Button from '@material-ui/core/Button';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport '@fontsource/roboto';\nimport { BorderLinearProgress, ScoreHeader, theme } from \"../stylesUI\";\nimport { QuizData } from '../Data/Fragen';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Singlequestion extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.stat = {\n      value: 0\n    };\n\n    this.handleSubmit = () => {\n      const {\n        currentIndex\n      } = this.props.state;\n      var Travelmode = null;\n      var points = 0;\n      console.log(index);\n      var index = value;\n\n      if (QuizData[currentIndex].options[index] === \"Flugzeug\") {\n        Travelmode = \"Fligth\";\n      } else if (QuizData[currentIndex].options[index] === \"Auto\") {\n        Travelmode = \"Car\";\n      } else if (QuizData[currentIndex].options[index] === \"Zug\") {\n        Travelmode = \"Train\";\n      } else {\n        points = QuizData[currentIndex].values[index];\n      }\n\n      this.props.callbackSingleQuestion(index, points, Travelmode);\n    };\n  }\n\n  /*checkAnswer*/\n  render() {\n    const {\n      question,\n      options,\n      currentIndex,\n      score\n    } = this.props.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(ScoreHeader, {\n        score: score,\n        currentIndex: currentIndex\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          component: \"fieldset\",\n          error: error,\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            component: \"legend\",\n            children: question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n            \"aria-label\": \"quiz\",\n            name: \"quiz\",\n            value: value,\n            onChange: this.setState(value = index),\n            children: options.map((option, index) =>\n            /*#__PURE__*/\n            //for each option, new paragrap\n            _jsxDEV(FormControlLabel, {\n              value: index + 1,\n              control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 50\n              }, this),\n              label: option\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n            children: helperText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"outlined\",\n            color: \"primary\",\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Singlequestion;","map":{"version":3,"sources":["/home/flo/Projects/react/Holirate/src/components/SingleQuestion/singleQuestion.js"],"names":["React","Radio","Button","RadioGroup","FormControlLabel","FormControl","FormLabel","BorderLinearProgress","ScoreHeader","theme","QuizData","Singlequestion","Component","stat","value","handleSubmit","currentIndex","props","state","Travelmode","points","console","log","index","options","values","callbackSingleQuestion","render","question","score","error","setState","map","option","helperText"],"mappings":"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","sourcesContent":["/*\n * @Author: Florian Griesser \n * @Date: 2021-05-29 17:23:53 \n * @Last Modified by: Florian Griesser\n * @Last Modified time: 2021-05-29 17:35:49\n */\n\nimport React from \"react\";\nimport Radio from '@material-ui/core/Radio';\nimport Button from '@material-ui/core/Button';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel'\nimport '@fontsource/roboto';\nimport { BorderLinearProgress, ScoreHeader, theme } from \"../stylesUI\";\n\nimport { QuizData } from '../Data/Fragen';\n\n\n\n\n\nclass Singlequestion extends React.Component {\n    stat = {\n        value: 0\n    }\n\n\n    //Check the answer\n    handleSubmit = () => {\n\n        const { currentIndex } = this.props.state;\n        var Travelmode = null;\n        var points = 0;\n        console.log(index);\n        var index = value;\n\n        if (QuizData[currentIndex].options[index] === \"Flugzeug\") {\n            Travelmode = \"Fligth\";\n        } else if (QuizData[currentIndex].options[index] === \"Auto\") {\n            Travelmode = \"Car\";\n        } else if (QuizData[currentIndex].options[index] === \"Zug\") {\n            Travelmode = \"Train\";\n        } else {\n            points = QuizData[currentIndex].values[index];\n        }\n\n\n        this.props.callbackSingleQuestion(index, points, Travelmode);\n    }/*checkAnswer*/\n\n\n\n    render() {\n        const { question, options, currentIndex, score } = this.props.state;\n\n        return (\n            <div>\n                <ScoreHeader score={score} currentIndex={currentIndex} />\n\n                <form onSubmit={this.handleSubmit}>\n                    <FormControl component=\"fieldset\" error={error}>\n                        <FormLabel component=\"legend\">{question}</FormLabel>\n                    <br></br>\n                        <RadioGroup aria-label=\"quiz\" name=\"quiz\" value={value} onChange={this.setState(value = index)}>\n                            {\n                                options.map((option, index) => (  //for each option, new paragrap\n                                    <FormControlLabel value={index + 1}\n                                        control={<Radio />}\n                                        label={option} />\n                                ))\n                            }\n                        </RadioGroup>\n                        <FormHelperText>{helperText}</FormHelperText>\n                        <Button type=\"submit\" variant=\"outlined\" color=\"primary\">\n                            Next\n                        </Button>\n                    </FormControl>\n                </form>\n            </div >\n        )\n    }\n}\n\nexport default Singlequestion;"]},"metadata":{},"sourceType":"module"}