{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = calcTextareaHeight;\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nvar hiddenTextarea = void 0;\nvar HIDDEN_STYLE = '\\n  height:0 !important;\\n  visibility:hidden !important;\\n  overflow:hidden !important;\\n  position:absolute !important;\\n  z-index:-1000 !important;\\n  top:0 !important;\\n  right:0 !important\\n';\nvar CONTEXT_STYLE = ['letter-spacing', 'line-height', 'padding-top', 'padding-bottom', 'font-family', 'font-weight', 'font-size', 'text-rendering', 'text-transform', 'width', 'text-indent', 'padding-left', 'padding-right', 'border-width', 'box-sizing'];\n\nfunction calculateNodeStyling(node) {\n  var style = window.getComputedStyle(node);\n  var boxSizing = style.getPropertyValue('box-sizing');\n  var paddingSize = parseFloat(style.getPropertyValue('padding-bottom')) + parseFloat(style.getPropertyValue('padding-top'));\n  var borderSize = parseFloat(style.getPropertyValue('border-bottom-width')) + parseFloat(style.getPropertyValue('border-top-width'));\n  var contextStyle = CONTEXT_STYLE.map(function (name) {\n    return name + ':' + style.getPropertyValue(name);\n  }).join(';');\n  return {\n    contextStyle: contextStyle,\n    paddingSize: paddingSize,\n    borderSize: borderSize,\n    boxSizing: boxSizing\n  };\n}\n\nfunction calcTextareaHeight(targetNode) {\n  var minRows = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var maxRows = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n  if (!hiddenTextarea) {\n    hiddenTextarea = document.createElement('textarea');\n    document.body && document.body.appendChild(hiddenTextarea);\n  }\n\n  var _calculateNodeStyling = calculateNodeStyling(targetNode),\n      paddingSize = _calculateNodeStyling.paddingSize,\n      borderSize = _calculateNodeStyling.borderSize,\n      boxSizing = _calculateNodeStyling.boxSizing,\n      contextStyle = _calculateNodeStyling.contextStyle;\n\n  hiddenTextarea.setAttribute('style', contextStyle + ';' + HIDDEN_STYLE);\n  hiddenTextarea.value = targetNode.value || targetNode.placeholder || '';\n  var height = hiddenTextarea.scrollHeight;\n\n  if (boxSizing === 'border-box') {\n    height = height + borderSize;\n  } else if (boxSizing === 'content-box') {\n    height = height - paddingSize;\n  }\n\n  hiddenTextarea.value = '';\n  var singleRowHeight = hiddenTextarea.scrollHeight - paddingSize;\n\n  if (minRows !== null) {\n    var minHeight = singleRowHeight * minRows;\n\n    if (boxSizing === 'border-box') {\n      minHeight = minHeight + paddingSize + borderSize;\n    }\n\n    height = Math.max(minHeight, height);\n  }\n\n  if (maxRows !== null) {\n    var maxHeight = singleRowHeight * maxRows;\n\n    if (boxSizing === 'border-box') {\n      maxHeight = maxHeight + paddingSize + borderSize;\n    }\n\n    height = Math.min(maxHeight, height);\n  }\n\n  return {\n    height: height + 'px'\n  };\n}\n\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(hiddenTextarea, 'hiddenTextarea', 'src/input/calcTextareaHeight.js');\n  reactHotLoader.register(HIDDEN_STYLE, 'HIDDEN_STYLE', 'src/input/calcTextareaHeight.js');\n  reactHotLoader.register(CONTEXT_STYLE, 'CONTEXT_STYLE', 'src/input/calcTextareaHeight.js');\n  reactHotLoader.register(calculateNodeStyling, 'calculateNodeStyling', 'src/input/calcTextareaHeight.js');\n  reactHotLoader.register(calcTextareaHeight, 'calcTextareaHeight', 'src/input/calcTextareaHeight.js');\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/flo/Projects/react/Holirate/node_modules/element-react/dist/npm/es5/src/input/calcTextareaHeight.js"],"names":["Object","defineProperty","exports","value","default","calcTextareaHeight","enterModule","reactHotLoaderGlobal","require","module","hiddenTextarea","HIDDEN_STYLE","CONTEXT_STYLE","calculateNodeStyling","node","style","window","getComputedStyle","boxSizing","getPropertyValue","paddingSize","parseFloat","borderSize","contextStyle","map","name","join","targetNode","minRows","arguments","length","undefined","maxRows","document","createElement","body","appendChild","_calculateNodeStyling","setAttribute","placeholder","height","scrollHeight","singleRowHeight","minHeight","Math","max","maxHeight","min","reactHotLoader","register","leaveModule"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = calcTextareaHeight;\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nvar hiddenTextarea = void 0;\n\nvar HIDDEN_STYLE = '\\n  height:0 !important;\\n  visibility:hidden !important;\\n  overflow:hidden !important;\\n  position:absolute !important;\\n  z-index:-1000 !important;\\n  top:0 !important;\\n  right:0 !important\\n';\n\nvar CONTEXT_STYLE = ['letter-spacing', 'line-height', 'padding-top', 'padding-bottom', 'font-family', 'font-weight', 'font-size', 'text-rendering', 'text-transform', 'width', 'text-indent', 'padding-left', 'padding-right', 'border-width', 'box-sizing'];\n\nfunction calculateNodeStyling(node) {\n  var style = window.getComputedStyle(node);\n\n  var boxSizing = style.getPropertyValue('box-sizing');\n\n  var paddingSize = parseFloat(style.getPropertyValue('padding-bottom')) + parseFloat(style.getPropertyValue('padding-top'));\n\n  var borderSize = parseFloat(style.getPropertyValue('border-bottom-width')) + parseFloat(style.getPropertyValue('border-top-width'));\n\n  var contextStyle = CONTEXT_STYLE.map(function (name) {\n    return name + ':' + style.getPropertyValue(name);\n  }).join(';');\n\n  return { contextStyle: contextStyle, paddingSize: paddingSize, borderSize: borderSize, boxSizing: boxSizing };\n}\n\nfunction calcTextareaHeight(targetNode) {\n  var minRows = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var maxRows = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n  if (!hiddenTextarea) {\n    hiddenTextarea = document.createElement('textarea');\n    document.body && document.body.appendChild(hiddenTextarea);\n  }\n\n  var _calculateNodeStyling = calculateNodeStyling(targetNode),\n      paddingSize = _calculateNodeStyling.paddingSize,\n      borderSize = _calculateNodeStyling.borderSize,\n      boxSizing = _calculateNodeStyling.boxSizing,\n      contextStyle = _calculateNodeStyling.contextStyle;\n\n  hiddenTextarea.setAttribute('style', contextStyle + ';' + HIDDEN_STYLE);\n  hiddenTextarea.value = targetNode.value || targetNode.placeholder || '';\n\n  var height = hiddenTextarea.scrollHeight;\n\n  if (boxSizing === 'border-box') {\n    height = height + borderSize;\n  } else if (boxSizing === 'content-box') {\n    height = height - paddingSize;\n  }\n\n  hiddenTextarea.value = '';\n  var singleRowHeight = hiddenTextarea.scrollHeight - paddingSize;\n\n  if (minRows !== null) {\n    var minHeight = singleRowHeight * minRows;\n    if (boxSizing === 'border-box') {\n      minHeight = minHeight + paddingSize + borderSize;\n    }\n    height = Math.max(minHeight, height);\n  }\n  if (maxRows !== null) {\n    var maxHeight = singleRowHeight * maxRows;\n    if (boxSizing === 'border-box') {\n      maxHeight = maxHeight + paddingSize + borderSize;\n    }\n    height = Math.min(maxHeight, height);\n  }\n\n  return { height: height + 'px' };\n}\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(hiddenTextarea, 'hiddenTextarea', 'src/input/calcTextareaHeight.js');\n  reactHotLoader.register(HIDDEN_STYLE, 'HIDDEN_STYLE', 'src/input/calcTextareaHeight.js');\n  reactHotLoader.register(CONTEXT_STYLE, 'CONTEXT_STYLE', 'src/input/calcTextareaHeight.js');\n  reactHotLoader.register(calculateNodeStyling, 'calculateNodeStyling', 'src/input/calcTextareaHeight.js');\n  reactHotLoader.register(calcTextareaHeight, 'calcTextareaHeight', 'src/input/calcTextareaHeight.js');\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();"]},"metadata":{},"sourceType":"script"}