{"ast":null,"code":"import _classCallCheck from\"/home/flo/Projects/react/Holirate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/flo/Projects/react/Holirate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/home/flo/Projects/react/Holirate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/home/flo/Projects/react/Holirate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/flo/Projects/react/Holirate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";/*\n * @Author: Florian Griesser \n * @Date: 2021-05-29 10:28:59 \n * @Last Modified by: Florian Griesser\n * @Last Modified time: 2021-05-29 17:36:52\n */import React from\"react\";import Radio from'@material-ui/core/Radio';import Button from'@material-ui/core/Button';import RadioGroup from'@material-ui/core/RadioGroup';import FormControlLabel from'@material-ui/core/FormControlLabel';import FormControl from'@material-ui/core/FormControl';import FormLabel from'@material-ui/core/FormLabel';import'@fontsource/roboto';import{ScoreHeader,theme}from\"../stylesUI\";import Grid from'@material-ui/core/Grid';import{QuizData}from'../Data/Fragen';import{ThemeProvider}from\"@material-ui/core\";/*\nconst carPower = [\n    \"Gasoline\",\n    \"Diesel\",\n    \"Electric\",\n    \"Hyprid\",\n    \"Gas\"\n]\n\n\nconst carType ={\n    small,\n    middle: 1,\n    SUV: 2\n}\n*/import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Car=/*#__PURE__*/function(_React$Component){_inherits(Car,_React$Component);var _super=_createSuper(Car);function Car(){var _this;_classCallCheck(this,Car);_this=_super.call(this);_this.forceUpdateHandler=function(){_this.forceUpdate();};_this.radioHandler=function(event){//console.log(event.target.value);\nvar test=parseInt(event.target.value);_this.indexValue=test;//console.log(test);\n_this.forceUpdateHandler();};_this.handleSubmit=function(answer,index){var currentIndex=_this.props.state.currentIndex;var index=_this.indexValue-1;if(QuizData[currentIndex].category===\"type\"){_this.props.callbackCarType(index);}else{_this.props.callbackCarPower(index);}};_this.forceUpdateHandler=_this.forceUpdateHandler.bind(_assertThisInitialized(_this));_this.indexValue=null;return _this;}_createClass(Car,[{key:\"render\",value:/*checkAnswer*/function render(){var _this2=this;var _this$props$state=this.props.state,question=_this$props$state.question,options=_this$props$state.options,currentIndex=_this$props$state.currentIndex,score=_this$props$state.score;return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(ScoreHeader,{score:score,currentIndex:currentIndex}),/*#__PURE__*/_jsx(Grid,{container:true,maxwidth:\"false\",align:\"center\",justifyContent:\"center\",alignItems:\"center\",children:/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:12,md:6,lg:4,style:{textAlign:'center',align:'center',justifyContent:'center',alignItems:'center',width:'80%',margin:'center'},children:/*#__PURE__*/_jsxs(FormControl,{component:\"fieldset\",children:[/*#__PURE__*/_jsx(FormLabel,{component:\"legend\",aligncontent:\"center\",children:question}),/*#__PURE__*/_jsx(RadioGroup,{name:\"quiz\",value:this.indexValue,onChange:this.radioHandler,children:options.map(function(option,index){return/*#__PURE__*/ (//for each option, new paragrap\n_jsx(FormControlLabel,{value:index+1,//for dumb unique key\ncontrol:/*#__PURE__*/_jsx(Radio,{color:\"primary\",checked:_this2.indexValue===index+1}),label:option},index+1));})}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(ThemeProvider,{theme:theme,children:/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",onClick:this.handleSubmit,children:\"Next\"})})]})})})]});}}]);return Car;}(React.Component);export default Car;","map":{"version":3,"sources":["/home/flo/Projects/react/Holirate/src/components/Maps/car.js"],"names":["React","Radio","Button","RadioGroup","FormControlLabel","FormControl","FormLabel","ScoreHeader","theme","Grid","QuizData","ThemeProvider","Car","forceUpdateHandler","forceUpdate","radioHandler","event","test","parseInt","target","value","indexValue","handleSubmit","answer","index","currentIndex","props","state","category","callbackCarType","callbackCarPower","bind","question","options","score","textAlign","align","justifyContent","alignItems","width","margin","map","option","Component"],"mappings":"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","sourcesContent":["/*\n * @Author: Florian Griesser \n * @Date: 2021-05-29 10:28:59 \n * @Last Modified by: Florian Griesser\n * @Last Modified time: 2021-05-29 17:36:52\n */\n\nimport React from \"react\";\nimport Radio from '@material-ui/core/Radio';\nimport Button from '@material-ui/core/Button';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel'\nimport '@fontsource/roboto';\nimport { ScoreHeader, theme } from \"../stylesUI\";\nimport Grid from '@material-ui/core/Grid';\nimport { QuizData } from '../Data/Fragen';\nimport { ThemeProvider } from \"@material-ui/core\";\n\n/*\nconst carPower = [\n    \"Gasoline\",\n    \"Diesel\",\n    \"Electric\",\n    \"Hyprid\",\n    \"Gas\"\n]\n\n\nconst carType ={\n    small,\n    middle: 1,\n    SUV: 2\n}\n*/\n\nclass Car extends React.Component {\n    constructor() {\n        super();\n        this.forceUpdateHandler = this.forceUpdateHandler.bind(this);\n        this.indexValue = null;\n    };\n\n    forceUpdateHandler = () => {\n        this.forceUpdate();\n    };\n\n    radioHandler = (event) => {\n        //console.log(event.target.value);\n        var test = parseInt(event.target.value);\n        this.indexValue = test;\n        //console.log(test);\n        this.forceUpdateHandler();\n    }\n\n\n\n    //Check the answer\n    handleSubmit = (answer, index) => {\n        const { currentIndex } = this.props.state;\n        var index = this.indexValue - 1;\n\n        if (QuizData[currentIndex].category === \"type\") {\n            this.props.callbackCarType(index);\n        }\n        else {\n            this.props.callbackCarPower(index);\n        }\n\n    }/*checkAnswer*/\n\n\n\n\n    render() {\n        const { question, options, currentIndex, score } = this.props.state;\n        return (\n            <div>\n                <ScoreHeader score={score} currentIndex={currentIndex} />\n                <Grid container maxwidth=\"false\" align=\"center\" justifyContent=\"center\" alignItems=\"center\" >\n                    <Grid item xs={12} sm={12} md={6} lg={4}\n                        style={{\n                            textAlign: 'center',\n                            align: 'center',\n                            justifyContent: 'center',\n                            alignItems: 'center',\n                            width: '80%',\n                            margin: 'center'\n                        }}\n                    >\n                        <FormControl component=\"fieldset\" >\n                            <FormLabel component=\"legend\" aligncontent=\"center\">{question}</FormLabel>\n                            <RadioGroup name=\"quiz\" value={this.indexValue} onChange={this.radioHandler}>\n                                {\n                                    options.map((option, index) => (  //for each option, new paragrap\n                                        <FormControlLabel value={index + 1}\n                                            key={index + 1}//for dumb unique key\n                                            control={<Radio\n                                                color=\"primary\"\n                                                checked={this.indexValue === (index + 1)} />}\n                                            label={option} />\n                                    ))\n                                }\n                            </RadioGroup>\n                            <br></br>\n                            <ThemeProvider theme={theme}>\n                                <Button variant='contained' color='primary' onClick={this.handleSubmit}>\n                                    Next\n                                </Button>\n                            </ThemeProvider>\n                        </FormControl>\n                    </Grid>\n                </Grid>\n            </div >\n        )\n    }\n}\n\nexport default Car;"]},"metadata":{},"sourceType":"module"}