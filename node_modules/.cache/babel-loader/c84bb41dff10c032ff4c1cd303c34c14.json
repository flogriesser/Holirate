{"ast":null,"code":"var _jsxFileName = \"/home/flo/Projects/react/Holirate/src/components/Style/AnimatedProgressProviders.js\";\nimport React from \"react\";\nimport { Animate } from \"react-move\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AnimatedProgressProvider extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.interval = undefined;\n    this.state = {\n      isAnimated: false\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.repeat) {\n      this.interval = window.setInterval(() => {\n        this.setState({\n          isAnimated: !this.state.isAnimated\n        });\n      }, this.props.duration * 1000);\n    } else {\n      this.setState({\n        isAnimated: !this.state.isAnimated\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.interval);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Animate, {\n      start: () => ({\n        value: this.props.valueStart\n      }),\n      update: () => ({\n        value: [this.state.isAnimated ? this.props.valueEnd : this.props.valueStart],\n        timing: {\n          duration: this.props.duration * 1000,\n          ease: this.props.easingFunction\n        }\n      }),\n      children: ({\n        value\n      }) => this.props.children(value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nAnimatedProgressProvider.defaultProps = {\n  valueStart: 0\n};\nexport default AnimatedProgressProvider;","map":{"version":3,"sources":["/home/flo/Projects/react/Holirate/src/components/Style/AnimatedProgressProviders.js"],"names":["React","Animate","AnimatedProgressProvider","Component","interval","undefined","state","isAnimated","componentDidMount","props","repeat","window","setInterval","setState","duration","componentWillUnmount","clearInterval","render","value","valueStart","valueEnd","timing","ease","easingFunction","children","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,YAAxB;;;AAEA,MAAMC,wBAAN,SAAuCF,KAAK,CAACG,SAA7C,CAAuD;AAAA;AAAA;AAAA,SACrDC,QADqD,GAC1CC,SAD0C;AAAA,SAGrDC,KAHqD,GAG7C;AACNC,MAAAA,UAAU,EAAE;AADN,KAH6C;AAAA;;AAWrDC,EAAAA,iBAAiB,GAAG;AAClB,QAAI,KAAKC,KAAL,CAAWC,MAAf,EAAuB;AACrB,WAAKN,QAAL,GAAgBO,MAAM,CAACC,WAAP,CAAmB,MAAM;AACvC,aAAKC,QAAL,CAAc;AACZN,UAAAA,UAAU,EAAE,CAAC,KAAKD,KAAL,CAAWC;AADZ,SAAd;AAGD,OAJe,EAIb,KAAKE,KAAL,CAAWK,QAAX,GAAsB,IAJT,CAAhB;AAKD,KAND,MAMO;AACL,WAAKD,QAAL,CAAc;AACZN,QAAAA,UAAU,EAAE,CAAC,KAAKD,KAAL,CAAWC;AADZ,OAAd;AAGD;AACF;;AAEDQ,EAAAA,oBAAoB,GAAG;AACrBJ,IAAAA,MAAM,CAACK,aAAP,CAAqB,KAAKZ,QAA1B;AACD;;AAEDa,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,OAAD;AACE,MAAA,KAAK,EAAE,OAAO;AACZC,QAAAA,KAAK,EAAE,KAAKT,KAAL,CAAWU;AADN,OAAP,CADT;AAIE,MAAA,MAAM,EAAE,OAAO;AACbD,QAAAA,KAAK,EAAE,CACL,KAAKZ,KAAL,CAAWC,UAAX,GAAwB,KAAKE,KAAL,CAAWW,QAAnC,GAA8C,KAAKX,KAAL,CAAWU,UADpD,CADM;AAIbE,QAAAA,MAAM,EAAE;AACNP,UAAAA,QAAQ,EAAE,KAAKL,KAAL,CAAWK,QAAX,GAAsB,IAD1B;AAENQ,UAAAA,IAAI,EAAE,KAAKb,KAAL,CAAWc;AAFX;AAJK,OAAP,CAJV;AAAA,gBAcG,CAAC;AAAEL,QAAAA;AAAF,OAAD,KAAe,KAAKT,KAAL,CAAWe,QAAX,CAAoBN,KAApB;AAdlB;AAAA;AAAA;AAAA;AAAA,YADF;AAkBD;;AAhDoD;;AAAjDhB,wB,CAOGuB,Y,GAAe;AACpBN,EAAAA,UAAU,EAAE;AADQ,C;AA4CxB,eAAejB,wBAAf","sourcesContent":["import React from \"react\";\nimport { Animate } from \"react-move\";\n\nclass AnimatedProgressProvider extends React.Component {\n  interval = undefined;\n\n  state = {\n    isAnimated: false\n  };\n\n  static defaultProps = {\n    valueStart: 0\n  };\n\n  componentDidMount() {\n    if (this.props.repeat) {\n      this.interval = window.setInterval(() => {\n        this.setState({\n          isAnimated: !this.state.isAnimated\n        });\n      }, this.props.duration * 1000);\n    } else {\n      this.setState({\n        isAnimated: !this.state.isAnimated\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.interval);\n  }\n\n  render() {\n    return (\n      <Animate\n        start={() => ({\n          value: this.props.valueStart\n        })}\n        update={() => ({\n          value: [\n            this.state.isAnimated ? this.props.valueEnd : this.props.valueStart\n          ],\n          timing: {\n            duration: this.props.duration * 1000,\n            ease: this.props.easingFunction\n          }\n        })}\n      >\n        {({ value }) => this.props.children(value)}\n      </Animate>\n    );\n  }\n}\n\nexport default AnimatedProgressProvider;\n"]},"metadata":{},"sourceType":"module"}